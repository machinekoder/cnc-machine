   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"lib_mem.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.comm	Mem_PoolTbl,4,4
  19              		.comm	Mem_PoolHeap,68,4
  20              		.align	2
  21              		.global	Mem_Init
  22              		.thumb
  23              		.thumb_func
  25              	Mem_Init:
  26              	.LFB0:
  27              		.file 1 "Libraries/uC-LIB/lib_mem.c"
   1:Libraries/uC-LIB/lib_mem.c **** /*
   2:Libraries/uC-LIB/lib_mem.c **** ***************************************************************************************************
   3:Libraries/uC-LIB/lib_mem.c **** *                                                uC/LIB
   4:Libraries/uC-LIB/lib_mem.c **** *                                        CUSTOM LIBRARY MODULES
   5:Libraries/uC-LIB/lib_mem.c **** *
   6:Libraries/uC-LIB/lib_mem.c **** *                          (c) Copyright 2004-2011; Micrium, Inc.; Weston, FL
   7:Libraries/uC-LIB/lib_mem.c **** *
   8:Libraries/uC-LIB/lib_mem.c **** *               All rights reserved.  Protected by international copyright laws.
   9:Libraries/uC-LIB/lib_mem.c **** *
  10:Libraries/uC-LIB/lib_mem.c **** *               uC/LIB is provided in source form to registered licensees ONLY.  It is 
  11:Libraries/uC-LIB/lib_mem.c **** *               illegal to distribute this source code to any third party unless you receive 
  12:Libraries/uC-LIB/lib_mem.c **** *               written permission by an authorized Micrium representative.  Knowledge of 
  13:Libraries/uC-LIB/lib_mem.c **** *               the source code may NOT be used to develop a similar product.
  14:Libraries/uC-LIB/lib_mem.c **** *
  15:Libraries/uC-LIB/lib_mem.c **** *               Please help us continue to provide the Embedded community with the finest 
  16:Libraries/uC-LIB/lib_mem.c **** *               software available.  Your honesty is greatly appreciated.
  17:Libraries/uC-LIB/lib_mem.c **** *
  18:Libraries/uC-LIB/lib_mem.c **** *               You can contact us at www.micrium.com.
  19:Libraries/uC-LIB/lib_mem.c **** ***************************************************************************************************
  20:Libraries/uC-LIB/lib_mem.c **** */
  21:Libraries/uC-LIB/lib_mem.c **** 
  22:Libraries/uC-LIB/lib_mem.c **** /*
  23:Libraries/uC-LIB/lib_mem.c **** ***************************************************************************************************
  24:Libraries/uC-LIB/lib_mem.c **** *
  25:Libraries/uC-LIB/lib_mem.c **** *                                     STANDARD MEMORY OPERATIONS
  26:Libraries/uC-LIB/lib_mem.c **** *
  27:Libraries/uC-LIB/lib_mem.c **** * Filename      : lib_mem.c
  28:Libraries/uC-LIB/lib_mem.c **** * Version       : V1.35.00
  29:Libraries/uC-LIB/lib_mem.c **** * Programmer(s) : ITJ
  30:Libraries/uC-LIB/lib_mem.c **** *                 FGK
  31:Libraries/uC-LIB/lib_mem.c **** ***************************************************************************************************
  32:Libraries/uC-LIB/lib_mem.c **** * Note(s)       : (1) NO compiler-supplied standard library functions are used in library or produc
  33:Libraries/uC-LIB/lib_mem.c **** *
  34:Libraries/uC-LIB/lib_mem.c **** *                     (a) ALL standard library functions are implemented in the custom library modu
  35:Libraries/uC-LIB/lib_mem.c **** *
  36:Libraries/uC-LIB/lib_mem.c **** *                         (1) \<Custom Library Directory>\lib_*.*
  37:Libraries/uC-LIB/lib_mem.c **** *
  38:Libraries/uC-LIB/lib_mem.c **** *                         (2) \<Custom Library Directory>\Ports\<cpu>\<compiler>\lib*_a.*
  39:Libraries/uC-LIB/lib_mem.c **** *
  40:Libraries/uC-LIB/lib_mem.c **** *                               where
  41:Libraries/uC-LIB/lib_mem.c **** *                                       <Custom Library Directory>      directory path for custom l
  42:Libraries/uC-LIB/lib_mem.c **** *                                       <cpu>                           directory name for specific
  43:Libraries/uC-LIB/lib_mem.c **** *                                       <compiler>                      directory name for specific
  44:Libraries/uC-LIB/lib_mem.c **** *
  45:Libraries/uC-LIB/lib_mem.c **** *                     (b) Product-specific library functions are implemented in individual products
  46:Libraries/uC-LIB/lib_mem.c **** ***************************************************************************************************
  47:Libraries/uC-LIB/lib_mem.c **** */
  48:Libraries/uC-LIB/lib_mem.c **** 
  49:Libraries/uC-LIB/lib_mem.c **** 
  50:Libraries/uC-LIB/lib_mem.c **** /*
  51:Libraries/uC-LIB/lib_mem.c **** ***************************************************************************************************
  52:Libraries/uC-LIB/lib_mem.c **** *                                            INCLUDE FILES
  53:Libraries/uC-LIB/lib_mem.c **** ***************************************************************************************************
  54:Libraries/uC-LIB/lib_mem.c **** */
  55:Libraries/uC-LIB/lib_mem.c **** 
  56:Libraries/uC-LIB/lib_mem.c **** #define    LIB_MEM_MODULE
  57:Libraries/uC-LIB/lib_mem.c **** #include  <lib_mem.h>
  58:Libraries/uC-LIB/lib_mem.c **** 
  59:Libraries/uC-LIB/lib_mem.c **** 
  60:Libraries/uC-LIB/lib_mem.c **** /*$PAGE*/
  61:Libraries/uC-LIB/lib_mem.c **** /*
  62:Libraries/uC-LIB/lib_mem.c **** ***************************************************************************************************
  63:Libraries/uC-LIB/lib_mem.c **** *                                            LOCAL DEFINES
  64:Libraries/uC-LIB/lib_mem.c **** ***************************************************************************************************
  65:Libraries/uC-LIB/lib_mem.c **** */
  66:Libraries/uC-LIB/lib_mem.c **** 
  67:Libraries/uC-LIB/lib_mem.c **** 
  68:Libraries/uC-LIB/lib_mem.c **** /*
  69:Libraries/uC-LIB/lib_mem.c **** ***************************************************************************************************
  70:Libraries/uC-LIB/lib_mem.c **** *                                           LOCAL CONSTANTS
  71:Libraries/uC-LIB/lib_mem.c **** ***************************************************************************************************
  72:Libraries/uC-LIB/lib_mem.c **** */
  73:Libraries/uC-LIB/lib_mem.c **** 
  74:Libraries/uC-LIB/lib_mem.c **** 
  75:Libraries/uC-LIB/lib_mem.c **** /*
  76:Libraries/uC-LIB/lib_mem.c **** ***************************************************************************************************
  77:Libraries/uC-LIB/lib_mem.c **** *                                          LOCAL DATA TYPES
  78:Libraries/uC-LIB/lib_mem.c **** ***************************************************************************************************
  79:Libraries/uC-LIB/lib_mem.c **** */
  80:Libraries/uC-LIB/lib_mem.c **** 
  81:Libraries/uC-LIB/lib_mem.c **** 
  82:Libraries/uC-LIB/lib_mem.c **** /*
  83:Libraries/uC-LIB/lib_mem.c **** ***************************************************************************************************
  84:Libraries/uC-LIB/lib_mem.c **** *                                            LOCAL TABLES
  85:Libraries/uC-LIB/lib_mem.c **** ***************************************************************************************************
  86:Libraries/uC-LIB/lib_mem.c **** */
  87:Libraries/uC-LIB/lib_mem.c **** 
  88:Libraries/uC-LIB/lib_mem.c **** 
  89:Libraries/uC-LIB/lib_mem.c **** /*
  90:Libraries/uC-LIB/lib_mem.c **** ***************************************************************************************************
  91:Libraries/uC-LIB/lib_mem.c **** *                                       LOCAL GLOBAL VARIABLES
  92:Libraries/uC-LIB/lib_mem.c **** ***************************************************************************************************
  93:Libraries/uC-LIB/lib_mem.c **** */
  94:Libraries/uC-LIB/lib_mem.c **** 
  95:Libraries/uC-LIB/lib_mem.c **** #if     (LIB_MEM_CFG_ALLOC_EN == DEF_ENABLED)
  96:Libraries/uC-LIB/lib_mem.c **** MEM_POOL    *Mem_PoolTbl;                                               /* Mem      pool/seg tbl.  
  97:Libraries/uC-LIB/lib_mem.c **** MEM_POOL     Mem_PoolHeap;                                              /* Mem heap pool/seg.      
  98:Libraries/uC-LIB/lib_mem.c **** 
  99:Libraries/uC-LIB/lib_mem.c **** #ifndef  LIB_MEM_CFG_HEAP_BASE_ADDR
 100:Libraries/uC-LIB/lib_mem.c **** CPU_INT08U   Mem_Heap[LIB_MEM_CFG_HEAP_SIZE];                           /* Mem heap.               
 101:Libraries/uC-LIB/lib_mem.c **** #endif
 102:Libraries/uC-LIB/lib_mem.c **** #endif
 103:Libraries/uC-LIB/lib_mem.c **** 
 104:Libraries/uC-LIB/lib_mem.c **** 
 105:Libraries/uC-LIB/lib_mem.c **** /*
 106:Libraries/uC-LIB/lib_mem.c **** ***************************************************************************************************
 107:Libraries/uC-LIB/lib_mem.c **** *                                      LOCAL FUNCTION PROTOTYPES
 108:Libraries/uC-LIB/lib_mem.c **** ***************************************************************************************************
 109:Libraries/uC-LIB/lib_mem.c **** */
 110:Libraries/uC-LIB/lib_mem.c **** 
 111:Libraries/uC-LIB/lib_mem.c **** #if (LIB_MEM_CFG_ALLOC_EN == DEF_ENABLED)                               /* -------------- MEM POOL 
 112:Libraries/uC-LIB/lib_mem.c **** 
 113:Libraries/uC-LIB/lib_mem.c **** #if (LIB_MEM_CFG_ARG_CHK_EXT_EN == DEF_ENABLED)
 114:Libraries/uC-LIB/lib_mem.c **** static  CPU_BOOLEAN   Mem_PoolBlkIsValidAddr(MEM_POOL    *pmem_pool,
 115:Libraries/uC-LIB/lib_mem.c ****                                              void        *pmem_blk);
 116:Libraries/uC-LIB/lib_mem.c **** #endif
 117:Libraries/uC-LIB/lib_mem.c **** 
 118:Libraries/uC-LIB/lib_mem.c **** 
 119:Libraries/uC-LIB/lib_mem.c **** static  CPU_SIZE_T    Mem_PoolSegCalcTotSize(void        *pmem_addr,
 120:Libraries/uC-LIB/lib_mem.c ****                                              CPU_SIZE_T   blk_nbr,
 121:Libraries/uC-LIB/lib_mem.c ****                                              CPU_SIZE_T   blk_size,
 122:Libraries/uC-LIB/lib_mem.c ****                                              CPU_SIZE_T   blk_align);
 123:Libraries/uC-LIB/lib_mem.c **** 
 124:Libraries/uC-LIB/lib_mem.c **** static  void         *Mem_PoolSegAlloc      (MEM_POOL    *pmem_pool,
 125:Libraries/uC-LIB/lib_mem.c ****                                              CPU_SIZE_T   size,
 126:Libraries/uC-LIB/lib_mem.c ****                                              CPU_SIZE_T   align);
 127:Libraries/uC-LIB/lib_mem.c **** 
 128:Libraries/uC-LIB/lib_mem.c **** #endif
 129:Libraries/uC-LIB/lib_mem.c **** 
 130:Libraries/uC-LIB/lib_mem.c **** 
 131:Libraries/uC-LIB/lib_mem.c **** /*
 132:Libraries/uC-LIB/lib_mem.c **** ***************************************************************************************************
 133:Libraries/uC-LIB/lib_mem.c **** *                                     LOCAL CONFIGURATION ERRORS
 134:Libraries/uC-LIB/lib_mem.c **** ***************************************************************************************************
 135:Libraries/uC-LIB/lib_mem.c **** */
 136:Libraries/uC-LIB/lib_mem.c **** 
 137:Libraries/uC-LIB/lib_mem.c **** 
 138:Libraries/uC-LIB/lib_mem.c **** /*$PAGE*/
 139:Libraries/uC-LIB/lib_mem.c **** /*
 140:Libraries/uC-LIB/lib_mem.c **** ***************************************************************************************************
 141:Libraries/uC-LIB/lib_mem.c **** *                                           Mem_Init()
 142:Libraries/uC-LIB/lib_mem.c **** *
 143:Libraries/uC-LIB/lib_mem.c **** * Description : (1) Initialize Memory Management Module :
 144:Libraries/uC-LIB/lib_mem.c **** *
 145:Libraries/uC-LIB/lib_mem.c **** *                   (a) Initialize heap memory pool
 146:Libraries/uC-LIB/lib_mem.c **** *                   (b) Initialize      memory pool table
 147:Libraries/uC-LIB/lib_mem.c **** *
 148:Libraries/uC-LIB/lib_mem.c **** *
 149:Libraries/uC-LIB/lib_mem.c **** * Argument(s) : none.
 150:Libraries/uC-LIB/lib_mem.c **** *
 151:Libraries/uC-LIB/lib_mem.c **** * Return(s)   : none.
 152:Libraries/uC-LIB/lib_mem.c **** *
 153:Libraries/uC-LIB/lib_mem.c **** * Caller(s)   : Application.
 154:Libraries/uC-LIB/lib_mem.c **** *
 155:Libraries/uC-LIB/lib_mem.c **** * Note(s)     : none.
 156:Libraries/uC-LIB/lib_mem.c **** ***************************************************************************************************
 157:Libraries/uC-LIB/lib_mem.c **** */
 158:Libraries/uC-LIB/lib_mem.c **** 
 159:Libraries/uC-LIB/lib_mem.c **** void  Mem_Init (void)
 160:Libraries/uC-LIB/lib_mem.c **** {
  28              		.loc 1 160 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 8
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33 0000 80B4     		push	{r7}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 4
  36              		.cfi_offset 7, -4
  37 0002 83B0     		sub	sp, sp, #12
  38              	.LCFI1:
  39              		.cfi_def_cfa_offset 16
  40 0004 00AF     		add	r7, sp, #0
  41              	.LCFI2:
  42              		.cfi_def_cfa_register 7
 161:Libraries/uC-LIB/lib_mem.c **** #if (LIB_MEM_CFG_ALLOC_EN == DEF_ENABLED)
 162:Libraries/uC-LIB/lib_mem.c ****     MEM_POOL  *pmem_pool;
 163:Libraries/uC-LIB/lib_mem.c **** 
 164:Libraries/uC-LIB/lib_mem.c ****                                                                         /* --------- INIT MEM HEAP 
 165:Libraries/uC-LIB/lib_mem.c ****     pmem_pool                   = (MEM_POOL   *)&Mem_PoolHeap;
  43              		.loc 1 165 0
  44 0006 40F20003 		movw	r3, #:lower16:Mem_PoolHeap
  45 000a C0F20003 		movt	r3, #:upper16:Mem_PoolHeap
  46 000e 7B60     		str	r3, [r7, #4]
 166:Libraries/uC-LIB/lib_mem.c ****     pmem_pool->Type             = (LIB_MEM_TYPE) LIB_MEM_TYPE_HEAP;
  47              		.loc 1 166 0
  48 0010 7A68     		ldr	r2, [r7, #4]
  49 0012 44F24853 		movw	r3, #17736
  50 0016 C5F24103 		movt	r3, 20545
  51 001a 1360     		str	r3, [r2, #0]
 167:Libraries/uC-LIB/lib_mem.c ****     pmem_pool->SegPrevPtr       = (MEM_POOL   *) 0;
  52              		.loc 1 167 0
  53 001c 7B68     		ldr	r3, [r7, #4]
  54 001e 4FF00002 		mov	r2, #0
  55 0022 5A60     		str	r2, [r3, #4]
 168:Libraries/uC-LIB/lib_mem.c ****     pmem_pool->SegNextPtr       = (MEM_POOL   *) 0;
  56              		.loc 1 168 0
  57 0024 7B68     		ldr	r3, [r7, #4]
  58 0026 4FF00002 		mov	r2, #0
  59 002a 9A60     		str	r2, [r3, #8]
 169:Libraries/uC-LIB/lib_mem.c ****     pmem_pool->PoolPrevPtr      = (MEM_POOL   *) 0;
  60              		.loc 1 169 0
  61 002c 7B68     		ldr	r3, [r7, #4]
  62 002e 4FF00002 		mov	r2, #0
  63 0032 DA60     		str	r2, [r3, #12]
 170:Libraries/uC-LIB/lib_mem.c ****     pmem_pool->PoolNextPtr      = (MEM_POOL   *) 0;
  64              		.loc 1 170 0
  65 0034 7B68     		ldr	r3, [r7, #4]
  66 0036 4FF00002 		mov	r2, #0
  67 003a 1A61     		str	r2, [r3, #16]
 171:Libraries/uC-LIB/lib_mem.c ****     pmem_pool->PoolAddrStart    = (void       *) 0;
  68              		.loc 1 171 0
  69 003c 7B68     		ldr	r3, [r7, #4]
  70 003e 4FF00002 		mov	r2, #0
  71 0042 5A61     		str	r2, [r3, #20]
 172:Libraries/uC-LIB/lib_mem.c ****     pmem_pool->PoolAddrEnd      = (void       *) 0;
  72              		.loc 1 172 0
  73 0044 7B68     		ldr	r3, [r7, #4]
  74 0046 4FF00002 		mov	r2, #0
  75 004a 9A61     		str	r2, [r3, #24]
 173:Libraries/uC-LIB/lib_mem.c ****     pmem_pool->PoolPtrs         = (void      **) 0;
  76              		.loc 1 173 0
  77 004c 7B68     		ldr	r3, [r7, #4]
  78 004e 4FF00002 		mov	r2, #0
  79 0052 DA61     		str	r2, [r3, #28]
 174:Libraries/uC-LIB/lib_mem.c ****     pmem_pool->BlkSize          = (CPU_SIZE_T  ) 0u;
  80              		.loc 1 174 0
  81 0054 7B68     		ldr	r3, [r7, #4]
  82 0056 4FF00002 		mov	r2, #0
  83 005a DA62     		str	r2, [r3, #44]
 175:Libraries/uC-LIB/lib_mem.c ****     pmem_pool->BlkNbr           = (CPU_SIZE_T  ) 0u;
  84              		.loc 1 175 0
  85 005c 7B68     		ldr	r3, [r7, #4]
  86 005e 4FF00002 		mov	r2, #0
  87 0062 9A62     		str	r2, [r3, #40]
 176:Libraries/uC-LIB/lib_mem.c ****     pmem_pool->BlkIx            = (MEM_POOL_IX ) 0u;
  88              		.loc 1 176 0
  89 0064 7B68     		ldr	r3, [r7, #4]
  90 0066 4FF00002 		mov	r2, #0
  91 006a 1A84     		strh	r2, [r3, #32]	@ movhi
 177:Libraries/uC-LIB/lib_mem.c **** 
 178:Libraries/uC-LIB/lib_mem.c **** #ifdef  LIB_MEM_CFG_HEAP_BASE_ADDR
 179:Libraries/uC-LIB/lib_mem.c ****     pmem_pool->SegAddr          = (void       *) LIB_MEM_CFG_HEAP_BASE_ADDR;
  92              		.loc 1 179 0
  93 006c 7A68     		ldr	r2, [r7, #4]
  94 006e 4FF40053 		mov	r3, #8192
  95 0072 C2F20803 		movt	r3, 8200
  96 0076 5363     		str	r3, [r2, #52]
 180:Libraries/uC-LIB/lib_mem.c ****     pmem_pool->SegAddrNextAvail = (void       *) LIB_MEM_CFG_HEAP_BASE_ADDR;
  97              		.loc 1 180 0
  98 0078 7A68     		ldr	r2, [r7, #4]
  99 007a 4FF40053 		mov	r3, #8192
 100 007e C2F20803 		movt	r3, 8200
 101 0082 9363     		str	r3, [r2, #56]
 181:Libraries/uC-LIB/lib_mem.c **** #else
 182:Libraries/uC-LIB/lib_mem.c ****     pmem_pool->SegAddr          = (void       *)&Mem_Heap[0];
 183:Libraries/uC-LIB/lib_mem.c ****     pmem_pool->SegAddrNextAvail = (void       *)&Mem_Heap[0];
 184:Libraries/uC-LIB/lib_mem.c **** #endif
 185:Libraries/uC-LIB/lib_mem.c **** 
 186:Libraries/uC-LIB/lib_mem.c ****     pmem_pool->SegSizeTot       = (CPU_SIZE_T  ) LIB_MEM_CFG_HEAP_SIZE;
 102              		.loc 1 186 0
 103 0084 7B68     		ldr	r3, [r7, #4]
 104 0086 4FF40052 		mov	r2, #8192
 105 008a DA63     		str	r2, [r3, #60]
 187:Libraries/uC-LIB/lib_mem.c ****     pmem_pool->SegSizeRem       = (CPU_SIZE_T  ) LIB_MEM_CFG_HEAP_SIZE;
 106              		.loc 1 187 0
 107 008c 7B68     		ldr	r3, [r7, #4]
 108 008e 4FF40052 		mov	r2, #8192
 109 0092 1A64     		str	r2, [r3, #64]
 188:Libraries/uC-LIB/lib_mem.c **** 
 189:Libraries/uC-LIB/lib_mem.c ****                                                                         /* ------------ INIT MEM PO
 190:Libraries/uC-LIB/lib_mem.c ****     Mem_PoolTbl = &Mem_PoolHeap;
 110              		.loc 1 190 0
 111 0094 40F20003 		movw	r3, #:lower16:Mem_PoolTbl
 112 0098 C0F20003 		movt	r3, #:upper16:Mem_PoolTbl
 113 009c 40F20002 		movw	r2, #:lower16:Mem_PoolHeap
 114 00a0 C0F20002 		movt	r2, #:upper16:Mem_PoolHeap
 115 00a4 1A60     		str	r2, [r3, #0]
 191:Libraries/uC-LIB/lib_mem.c **** #endif
 192:Libraries/uC-LIB/lib_mem.c **** }
 116              		.loc 1 192 0
 117 00a6 07F10C07 		add	r7, r7, #12
 118 00aa BD46     		mov	sp, r7
 119 00ac 80BC     		pop	{r7}
 120 00ae 7047     		bx	lr
 121              		.cfi_endproc
 122              	.LFE0:
 124              		.align	2
 125              		.global	Mem_Clr
 126              		.thumb
 127              		.thumb_func
 129              	Mem_Clr:
 130              	.LFB1:
 193:Libraries/uC-LIB/lib_mem.c **** 
 194:Libraries/uC-LIB/lib_mem.c **** 
 195:Libraries/uC-LIB/lib_mem.c **** /*$PAGE*/
 196:Libraries/uC-LIB/lib_mem.c **** /*
 197:Libraries/uC-LIB/lib_mem.c **** ***************************************************************************************************
 198:Libraries/uC-LIB/lib_mem.c **** *                                              Mem_Clr()
 199:Libraries/uC-LIB/lib_mem.c **** *
 200:Libraries/uC-LIB/lib_mem.c **** * Description : Clear data buffer (see Note #2).
 201:Libraries/uC-LIB/lib_mem.c **** *
 202:Libraries/uC-LIB/lib_mem.c **** * Argument(s) : pmem        Pointer to memory buffer to clear.
 203:Libraries/uC-LIB/lib_mem.c **** *
 204:Libraries/uC-LIB/lib_mem.c **** *               size        Number of data buffer octets to clear (see Note #1).
 205:Libraries/uC-LIB/lib_mem.c **** *
 206:Libraries/uC-LIB/lib_mem.c **** * Return(s)   : none.
 207:Libraries/uC-LIB/lib_mem.c **** *
 208:Libraries/uC-LIB/lib_mem.c **** * Caller(s)   : Application.
 209:Libraries/uC-LIB/lib_mem.c **** *
 210:Libraries/uC-LIB/lib_mem.c **** * Note(s)     : (1) Null clears allowed (i.e. zero-length clears).
 211:Libraries/uC-LIB/lib_mem.c **** *
 212:Libraries/uC-LIB/lib_mem.c **** *                   See also 'Mem_Set()  Note #1'.
 213:Libraries/uC-LIB/lib_mem.c **** *
 214:Libraries/uC-LIB/lib_mem.c **** *               (2) Clear data by setting each data octet to 0.
 215:Libraries/uC-LIB/lib_mem.c **** ***************************************************************************************************
 216:Libraries/uC-LIB/lib_mem.c **** */
 217:Libraries/uC-LIB/lib_mem.c **** 
 218:Libraries/uC-LIB/lib_mem.c **** void  Mem_Clr (void        *pmem,
 219:Libraries/uC-LIB/lib_mem.c ****                CPU_SIZE_T   size)
 220:Libraries/uC-LIB/lib_mem.c **** {
 131              		.loc 1 220 0
 132              		.cfi_startproc
 133              		@ args = 0, pretend = 0, frame = 8
 134              		@ frame_needed = 1, uses_anonymous_args = 0
 135 00b0 80B5     		push	{r7, lr}
 136              	.LCFI3:
 137              		.cfi_def_cfa_offset 8
 138              		.cfi_offset 14, -4
 139              		.cfi_offset 7, -8
 140 00b2 82B0     		sub	sp, sp, #8
 141              	.LCFI4:
 142              		.cfi_def_cfa_offset 16
 143 00b4 00AF     		add	r7, sp, #0
 144              	.LCFI5:
 145              		.cfi_def_cfa_register 7
 146 00b6 7860     		str	r0, [r7, #4]
 147 00b8 3960     		str	r1, [r7, #0]
 221:Libraries/uC-LIB/lib_mem.c ****     Mem_Set(pmem,
 148              		.loc 1 221 0
 149 00ba 7868     		ldr	r0, [r7, #4]
 150 00bc 4FF00001 		mov	r1, #0
 151 00c0 3A68     		ldr	r2, [r7, #0]
 152 00c2 FFF7FEFF 		bl	Mem_Set
 222:Libraries/uC-LIB/lib_mem.c ****             0u,                                                 /* See Note #2.                    
 223:Libraries/uC-LIB/lib_mem.c ****             size);
 224:Libraries/uC-LIB/lib_mem.c **** }
 153              		.loc 1 224 0
 154 00c6 07F10807 		add	r7, r7, #8
 155 00ca BD46     		mov	sp, r7
 156 00cc 80BD     		pop	{r7, pc}
 157              		.cfi_endproc
 158              	.LFE1:
 160 00ce 00BF     		.align	2
 161              		.global	Mem_Set
 162              		.thumb
 163              		.thumb_func
 165              	Mem_Set:
 166              	.LFB2:
 225:Libraries/uC-LIB/lib_mem.c **** 
 226:Libraries/uC-LIB/lib_mem.c **** 
 227:Libraries/uC-LIB/lib_mem.c **** /*$PAGE*/
 228:Libraries/uC-LIB/lib_mem.c **** /*
 229:Libraries/uC-LIB/lib_mem.c **** ***************************************************************************************************
 230:Libraries/uC-LIB/lib_mem.c **** *                                              Mem_Set()
 231:Libraries/uC-LIB/lib_mem.c **** *
 232:Libraries/uC-LIB/lib_mem.c **** * Description : Fill data buffer with specified data octet.
 233:Libraries/uC-LIB/lib_mem.c **** *
 234:Libraries/uC-LIB/lib_mem.c **** * Argument(s) : pmem        Pointer to memory buffer to fill with specified data octet.
 235:Libraries/uC-LIB/lib_mem.c **** *
 236:Libraries/uC-LIB/lib_mem.c **** *               data_val    Data fill octet value.
 237:Libraries/uC-LIB/lib_mem.c **** *
 238:Libraries/uC-LIB/lib_mem.c **** *               size        Number of data buffer octets to fill (see Note #1).
 239:Libraries/uC-LIB/lib_mem.c **** *
 240:Libraries/uC-LIB/lib_mem.c **** * Return(s)   : none.
 241:Libraries/uC-LIB/lib_mem.c **** *
 242:Libraries/uC-LIB/lib_mem.c **** * Caller(s)   : Application.
 243:Libraries/uC-LIB/lib_mem.c **** *
 244:Libraries/uC-LIB/lib_mem.c **** * Note(s)     : (1) Null sets allowed (i.e. zero-length sets).
 245:Libraries/uC-LIB/lib_mem.c **** *
 246:Libraries/uC-LIB/lib_mem.c **** *               (2) For best CPU performance, optimized to fill data buffer using 'CPU_ALIGN'-sized
 247:Libraries/uC-LIB/lib_mem.c **** *                   words.
 248:Libraries/uC-LIB/lib_mem.c **** *
 249:Libraries/uC-LIB/lib_mem.c **** *                   (a) Since many word-aligned processors REQUIRE that multi-octet words be access
 250:Libraries/uC-LIB/lib_mem.c **** *                       word-aligned addresses, 'CPU_ALIGN'-sized words MUST be accessed on 'CPU_AL
 251:Libraries/uC-LIB/lib_mem.c **** *                       addresses.
 252:Libraries/uC-LIB/lib_mem.c **** *
 253:Libraries/uC-LIB/lib_mem.c **** *               (3) Modulo arithmetic is used to determine whether a memory buffer starts on a 'CPU
 254:Libraries/uC-LIB/lib_mem.c **** *                   address boundary.
 255:Libraries/uC-LIB/lib_mem.c **** *
 256:Libraries/uC-LIB/lib_mem.c **** *                   Modulo arithmetic in ANSI-C REQUIREs operations performed on integer values.  T
 257:Libraries/uC-LIB/lib_mem.c **** *                   address values MUST be cast to an appropriately-sized integer value PRIOR to an
 258:Libraries/uC-LIB/lib_mem.c **** *                   mem_align_modulo arithmetic operation.
 259:Libraries/uC-LIB/lib_mem.c **** ***************************************************************************************************
 260:Libraries/uC-LIB/lib_mem.c **** */
 261:Libraries/uC-LIB/lib_mem.c **** 
 262:Libraries/uC-LIB/lib_mem.c **** void  Mem_Set (void        *pmem,
 263:Libraries/uC-LIB/lib_mem.c ****                CPU_INT08U   data_val,
 264:Libraries/uC-LIB/lib_mem.c ****                CPU_SIZE_T   size)
 265:Libraries/uC-LIB/lib_mem.c **** {
 167              		.loc 1 265 0
 168              		.cfi_startproc
 169              		@ args = 0, pretend = 0, frame = 40
 170              		@ frame_needed = 1, uses_anonymous_args = 0
 171              		@ link register save eliminated.
 172 00d0 80B4     		push	{r7}
 173              	.LCFI6:
 174              		.cfi_def_cfa_offset 4
 175              		.cfi_offset 7, -4
 176 00d2 8BB0     		sub	sp, sp, #44
 177              	.LCFI7:
 178              		.cfi_def_cfa_offset 48
 179 00d4 00AF     		add	r7, sp, #0
 180              	.LCFI8:
 181              		.cfi_def_cfa_register 7
 182 00d6 F860     		str	r0, [r7, #12]
 183 00d8 0B46     		mov	r3, r1
 184 00da 7A60     		str	r2, [r7, #4]
 185 00dc FB72     		strb	r3, [r7, #11]
 266:Libraries/uC-LIB/lib_mem.c ****     CPU_SIZE_T   size_rem;
 267:Libraries/uC-LIB/lib_mem.c ****     CPU_ALIGN    data_align;
 268:Libraries/uC-LIB/lib_mem.c ****     CPU_ALIGN   *pmem_align;
 269:Libraries/uC-LIB/lib_mem.c ****     CPU_INT08U  *pmem_08;
 270:Libraries/uC-LIB/lib_mem.c ****     CPU_INT08U   mem_align_modulo;
 271:Libraries/uC-LIB/lib_mem.c ****     CPU_INT08U   i;
 272:Libraries/uC-LIB/lib_mem.c **** 
 273:Libraries/uC-LIB/lib_mem.c **** 
 274:Libraries/uC-LIB/lib_mem.c ****     if (size < 1) {                                             /* See Note #1.                    
 186              		.loc 1 274 0
 187 00de 7B68     		ldr	r3, [r7, #4]
 188 00e0 002B     		cmp	r3, #0
 189 00e2 5FD0     		beq	.L16
 190              	.L4:
 275:Libraries/uC-LIB/lib_mem.c ****         return;
 276:Libraries/uC-LIB/lib_mem.c ****     }
 277:Libraries/uC-LIB/lib_mem.c ****     if (pmem == (void *)0) {
 191              		.loc 1 277 0
 192 00e4 FB68     		ldr	r3, [r7, #12]
 193 00e6 002B     		cmp	r3, #0
 194 00e8 5ED0     		beq	.L17
 195              	.L6:
 278:Libraries/uC-LIB/lib_mem.c ****         return;
 279:Libraries/uC-LIB/lib_mem.c ****     }
 280:Libraries/uC-LIB/lib_mem.c **** 
 281:Libraries/uC-LIB/lib_mem.c **** 
 282:Libraries/uC-LIB/lib_mem.c ****     data_align = 0u;
 196              		.loc 1 282 0
 197 00ea 4FF00003 		mov	r3, #0
 198 00ee 3B62     		str	r3, [r7, #32]
 283:Libraries/uC-LIB/lib_mem.c ****     for (i = 0u; i < sizeof(CPU_ALIGN); i++) {                  /* Fill each data_align octet with 
 199              		.loc 1 283 0
 200 00f0 4FF00003 		mov	r3, #0
 201 00f4 FB75     		strb	r3, [r7, #23]
 202 00f6 0BE0     		b	.L7
 203              	.L8:
 284:Libraries/uC-LIB/lib_mem.c ****         data_align <<=  DEF_OCTET_NBR_BITS;
 204              		.loc 1 284 0 discriminator 2
 205 00f8 3B6A     		ldr	r3, [r7, #32]
 206 00fa 4FEA0323 		lsl	r3, r3, #8
 207 00fe 3B62     		str	r3, [r7, #32]
 285:Libraries/uC-LIB/lib_mem.c ****         data_align  |= (CPU_ALIGN)data_val;
 208              		.loc 1 285 0 discriminator 2
 209 0100 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 210 0102 3A6A     		ldr	r2, [r7, #32]
 211 0104 1343     		orrs	r3, r3, r2
 212 0106 3B62     		str	r3, [r7, #32]
 283:Libraries/uC-LIB/lib_mem.c ****     for (i = 0u; i < sizeof(CPU_ALIGN); i++) {                  /* Fill each data_align octet with 
 213              		.loc 1 283 0 discriminator 2
 214 0108 FB7D     		ldrb	r3, [r7, #23]
 215 010a 03F10103 		add	r3, r3, #1
 216 010e FB75     		strb	r3, [r7, #23]
 217              	.L7:
 283:Libraries/uC-LIB/lib_mem.c ****     for (i = 0u; i < sizeof(CPU_ALIGN); i++) {                  /* Fill each data_align octet with 
 218              		.loc 1 283 0 is_stmt 0 discriminator 1
 219 0110 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 220 0112 032B     		cmp	r3, #3
 221 0114 F0D9     		bls	.L8
 286:Libraries/uC-LIB/lib_mem.c ****     }
 287:Libraries/uC-LIB/lib_mem.c **** 
 288:Libraries/uC-LIB/lib_mem.c ****     size_rem         =  size;
 222              		.loc 1 288 0 is_stmt 1
 223 0116 7B68     		ldr	r3, [r7, #4]
 224 0118 7B62     		str	r3, [r7, #36]
 289:Libraries/uC-LIB/lib_mem.c ****     mem_align_modulo = (CPU_INT08U)((CPU_ADDR)pmem % sizeof(CPU_ALIGN));    /* See Note #3.        
 225              		.loc 1 289 0
 226 011a FB68     		ldr	r3, [r7, #12]
 227 011c DBB2     		uxtb	r3, r3
 228 011e 03F00303 		and	r3, r3, #3
 229 0122 BB75     		strb	r3, [r7, #22]
 290:Libraries/uC-LIB/lib_mem.c **** 
 291:Libraries/uC-LIB/lib_mem.c ****     pmem_08 = (CPU_INT08U *)pmem;
 230              		.loc 1 291 0
 231 0124 FB68     		ldr	r3, [r7, #12]
 232 0126 BB61     		str	r3, [r7, #24]
 292:Libraries/uC-LIB/lib_mem.c ****     if (mem_align_modulo != 0u) {                               /* If leading octets avail,        
 233              		.loc 1 292 0
 234 0128 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 235 012a 002B     		cmp	r3, #0
 236 012c 17D0     		beq	.L9
 293:Libraries/uC-LIB/lib_mem.c ****         i = mem_align_modulo;
 237              		.loc 1 293 0
 238 012e BB7D     		ldrb	r3, [r7, #22]
 239 0130 FB75     		strb	r3, [r7, #23]
 294:Libraries/uC-LIB/lib_mem.c ****         while ((size_rem > 0) &&                                /* ... start mem buf fill with lead
 240              		.loc 1 294 0
 241 0132 0EE0     		b	.L10
 242              	.L11:
 295:Libraries/uC-LIB/lib_mem.c ****                (i        < sizeof(CPU_ALIGN ))) {               /* ... until next CPU_ALIGN word bo
 296:Libraries/uC-LIB/lib_mem.c ****            *pmem_08++ = data_val;
 243              		.loc 1 296 0
 244 0134 BB69     		ldr	r3, [r7, #24]
 245 0136 FA7A     		ldrb	r2, [r7, #11]
 246 0138 1A70     		strb	r2, [r3, #0]
 247 013a BB69     		ldr	r3, [r7, #24]
 248 013c 03F10103 		add	r3, r3, #1
 249 0140 BB61     		str	r3, [r7, #24]
 297:Libraries/uC-LIB/lib_mem.c ****             size_rem -= sizeof(CPU_INT08U);
 250              		.loc 1 297 0
 251 0142 7B6A     		ldr	r3, [r7, #36]
 252 0144 03F1FF33 		add	r3, r3, #-1
 253 0148 7B62     		str	r3, [r7, #36]
 298:Libraries/uC-LIB/lib_mem.c ****             i++;
 254              		.loc 1 298 0
 255 014a FB7D     		ldrb	r3, [r7, #23]
 256 014c 03F10103 		add	r3, r3, #1
 257 0150 FB75     		strb	r3, [r7, #23]
 258              	.L10:
 294:Libraries/uC-LIB/lib_mem.c ****         while ((size_rem > 0) &&                                /* ... start mem buf fill with lead
 259              		.loc 1 294 0 discriminator 1
 260 0152 7B6A     		ldr	r3, [r7, #36]
 261 0154 002B     		cmp	r3, #0
 262 0156 02D0     		beq	.L9
 294:Libraries/uC-LIB/lib_mem.c ****         while ((size_rem > 0) &&                                /* ... start mem buf fill with lead
 263              		.loc 1 294 0 is_stmt 0 discriminator 2
 264 0158 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 265 015a 032B     		cmp	r3, #3
 266 015c EAD9     		bls	.L11
 267              	.L9:
 299:Libraries/uC-LIB/lib_mem.c ****         }
 300:Libraries/uC-LIB/lib_mem.c ****     }
 301:Libraries/uC-LIB/lib_mem.c **** 
 302:Libraries/uC-LIB/lib_mem.c ****     pmem_align = (CPU_ALIGN *)pmem_08;                          /* See Note #2a.                   
 268              		.loc 1 302 0 is_stmt 1
 269 015e BB69     		ldr	r3, [r7, #24]
 270 0160 FB61     		str	r3, [r7, #28]
 303:Libraries/uC-LIB/lib_mem.c ****     while (size_rem >= sizeof(CPU_ALIGN)) {                     /* While mem buf aligned on CPU_ALI
 271              		.loc 1 303 0
 272 0162 0AE0     		b	.L12
 273              	.L13:
 304:Libraries/uC-LIB/lib_mem.c ****        *pmem_align++ = data_align;                              /* ... fill mem buf with    CPU_ALI
 274              		.loc 1 304 0
 275 0164 FB69     		ldr	r3, [r7, #28]
 276 0166 3A6A     		ldr	r2, [r7, #32]
 277 0168 1A60     		str	r2, [r3, #0]
 278 016a FB69     		ldr	r3, [r7, #28]
 279 016c 03F10403 		add	r3, r3, #4
 280 0170 FB61     		str	r3, [r7, #28]
 305:Libraries/uC-LIB/lib_mem.c ****         size_rem    -= sizeof(CPU_ALIGN);
 281              		.loc 1 305 0
 282 0172 7B6A     		ldr	r3, [r7, #36]
 283 0174 A3F10403 		sub	r3, r3, #4
 284 0178 7B62     		str	r3, [r7, #36]
 285              	.L12:
 303:Libraries/uC-LIB/lib_mem.c ****     while (size_rem >= sizeof(CPU_ALIGN)) {                     /* While mem buf aligned on CPU_ALI
 286              		.loc 1 303 0 discriminator 1
 287 017a 7B6A     		ldr	r3, [r7, #36]
 288 017c 032B     		cmp	r3, #3
 289 017e F1D8     		bhi	.L13
 306:Libraries/uC-LIB/lib_mem.c ****     }
 307:Libraries/uC-LIB/lib_mem.c **** 
 308:Libraries/uC-LIB/lib_mem.c ****     pmem_08 = (CPU_INT08U *)pmem_align;
 290              		.loc 1 308 0
 291 0180 FB69     		ldr	r3, [r7, #28]
 292 0182 BB61     		str	r3, [r7, #24]
 309:Libraries/uC-LIB/lib_mem.c ****     while (size_rem > 0) {                                      /* Finish mem buf fill with trailin
 293              		.loc 1 309 0
 294 0184 0AE0     		b	.L14
 295              	.L15:
 310:Libraries/uC-LIB/lib_mem.c ****        *pmem_08++   = data_val;
 296              		.loc 1 310 0
 297 0186 BB69     		ldr	r3, [r7, #24]
 298 0188 FA7A     		ldrb	r2, [r7, #11]
 299 018a 1A70     		strb	r2, [r3, #0]
 300 018c BB69     		ldr	r3, [r7, #24]
 301 018e 03F10103 		add	r3, r3, #1
 302 0192 BB61     		str	r3, [r7, #24]
 311:Libraries/uC-LIB/lib_mem.c ****         size_rem   -= sizeof(CPU_INT08U);
 303              		.loc 1 311 0
 304 0194 7B6A     		ldr	r3, [r7, #36]
 305 0196 03F1FF33 		add	r3, r3, #-1
 306 019a 7B62     		str	r3, [r7, #36]
 307              	.L14:
 309:Libraries/uC-LIB/lib_mem.c ****     while (size_rem > 0) {                                      /* Finish mem buf fill with trailin
 308              		.loc 1 309 0 discriminator 1
 309 019c 7B6A     		ldr	r3, [r7, #36]
 310 019e 002B     		cmp	r3, #0
 311 01a0 F1D1     		bne	.L15
 312 01a2 02E0     		b	.L3
 313              	.L16:
 275:Libraries/uC-LIB/lib_mem.c ****         return;
 314              		.loc 1 275 0
 315 01a4 00BF     		nop
 316 01a6 00E0     		b	.L3
 317              	.L17:
 278:Libraries/uC-LIB/lib_mem.c ****         return;
 318              		.loc 1 278 0
 319 01a8 00BF     		nop
 320              	.L3:
 312:Libraries/uC-LIB/lib_mem.c ****     }
 313:Libraries/uC-LIB/lib_mem.c **** }
 321              		.loc 1 313 0
 322 01aa 07F12C07 		add	r7, r7, #44
 323 01ae BD46     		mov	sp, r7
 324 01b0 80BC     		pop	{r7}
 325 01b2 7047     		bx	lr
 326              		.cfi_endproc
 327              	.LFE2:
 329              		.align	2
 330              		.global	Mem_Copy
 331              		.thumb
 332              		.thumb_func
 334              	Mem_Copy:
 335              	.LFB3:
 314:Libraries/uC-LIB/lib_mem.c **** 
 315:Libraries/uC-LIB/lib_mem.c **** 
 316:Libraries/uC-LIB/lib_mem.c **** /*$PAGE*/
 317:Libraries/uC-LIB/lib_mem.c **** /*
 318:Libraries/uC-LIB/lib_mem.c **** ***************************************************************************************************
 319:Libraries/uC-LIB/lib_mem.c **** *                                             Mem_Copy()
 320:Libraries/uC-LIB/lib_mem.c **** *
 321:Libraries/uC-LIB/lib_mem.c **** * Description : Copy data octets from one memory buffer to another memory buffer.
 322:Libraries/uC-LIB/lib_mem.c **** *
 323:Libraries/uC-LIB/lib_mem.c **** * Argument(s) : pdest       Pointer to destination memory buffer.
 324:Libraries/uC-LIB/lib_mem.c **** *
 325:Libraries/uC-LIB/lib_mem.c **** *               psrc        Pointer to source      memory buffer.
 326:Libraries/uC-LIB/lib_mem.c **** *
 327:Libraries/uC-LIB/lib_mem.c **** *               size        Number of data buffer octets to copy (see Note #1).
 328:Libraries/uC-LIB/lib_mem.c **** *
 329:Libraries/uC-LIB/lib_mem.c **** * Return(s)   : none.
 330:Libraries/uC-LIB/lib_mem.c **** *
 331:Libraries/uC-LIB/lib_mem.c **** * Caller(s)   : Application.
 332:Libraries/uC-LIB/lib_mem.c **** *
 333:Libraries/uC-LIB/lib_mem.c **** * Note(s)     : (1) Null copies allowed (i.e. zero-length copies).
 334:Libraries/uC-LIB/lib_mem.c **** *
 335:Libraries/uC-LIB/lib_mem.c **** *               (2) Memory buffers NOT checked for overlapping.
 336:Libraries/uC-LIB/lib_mem.c **** *
 337:Libraries/uC-LIB/lib_mem.c **** *               (3) For best CPU performance, optimized to copy data buffer using 'CPU_ALIGN'-sized
 338:Libraries/uC-LIB/lib_mem.c **** *                   words.
 339:Libraries/uC-LIB/lib_mem.c **** *
 340:Libraries/uC-LIB/lib_mem.c **** *                   (a) Since many word-aligned processors REQUIRE that multi-octet words be access
 341:Libraries/uC-LIB/lib_mem.c **** *                       word-aligned addresses, 'CPU_ALIGN'-sized words MUST be accessed on 'CPU_AL
 342:Libraries/uC-LIB/lib_mem.c **** *                       addresses.
 343:Libraries/uC-LIB/lib_mem.c **** *
 344:Libraries/uC-LIB/lib_mem.c **** *               (4) Modulo arithmetic is used to determine whether a memory buffer starts on a 'CPU
 345:Libraries/uC-LIB/lib_mem.c **** *                   address boundary.
 346:Libraries/uC-LIB/lib_mem.c **** *
 347:Libraries/uC-LIB/lib_mem.c **** *                   Modulo arithmetic in ANSI-C REQUIREs operations performed on integer values.  T
 348:Libraries/uC-LIB/lib_mem.c **** *                   address values MUST be cast to an appropriately-sized integer value PRIOR to an
 349:Libraries/uC-LIB/lib_mem.c **** *                   mem_align_modulo arithmetic operation.
 350:Libraries/uC-LIB/lib_mem.c **** ***************************************************************************************************
 351:Libraries/uC-LIB/lib_mem.c **** */
 352:Libraries/uC-LIB/lib_mem.c **** /*$PAGE*/
 353:Libraries/uC-LIB/lib_mem.c **** #if (LIB_MEM_CFG_OPTIMIZE_ASM_EN != DEF_ENABLED)
 354:Libraries/uC-LIB/lib_mem.c **** void  Mem_Copy (       void        *pdest,
 355:Libraries/uC-LIB/lib_mem.c ****                 const  void        *psrc,
 356:Libraries/uC-LIB/lib_mem.c ****                        CPU_SIZE_T   size)
 357:Libraries/uC-LIB/lib_mem.c **** {
 336              		.loc 1 357 0
 337              		.cfi_startproc
 338              		@ args = 0, pretend = 0, frame = 40
 339              		@ frame_needed = 1, uses_anonymous_args = 0
 340              		@ link register save eliminated.
 341 01b4 80B4     		push	{r7}
 342              	.LCFI9:
 343              		.cfi_def_cfa_offset 4
 344              		.cfi_offset 7, -4
 345 01b6 8BB0     		sub	sp, sp, #44
 346              	.LCFI10:
 347              		.cfi_def_cfa_offset 48
 348 01b8 00AF     		add	r7, sp, #0
 349              	.LCFI11:
 350              		.cfi_def_cfa_register 7
 351 01ba F860     		str	r0, [r7, #12]
 352 01bc B960     		str	r1, [r7, #8]
 353 01be 7A60     		str	r2, [r7, #4]
 358:Libraries/uC-LIB/lib_mem.c ****            CPU_SIZE_T    size_rem;
 359:Libraries/uC-LIB/lib_mem.c ****            CPU_ALIGN    *pmem_align_dest;
 360:Libraries/uC-LIB/lib_mem.c ****     const  CPU_ALIGN    *pmem_align_src;
 361:Libraries/uC-LIB/lib_mem.c ****            CPU_INT08U   *pmem_08_dest;
 362:Libraries/uC-LIB/lib_mem.c ****     const  CPU_INT08U   *pmem_08_src;
 363:Libraries/uC-LIB/lib_mem.c ****            CPU_INT08U    i;
 364:Libraries/uC-LIB/lib_mem.c ****            CPU_INT08U    mem_align_modulo_dest;
 365:Libraries/uC-LIB/lib_mem.c ****            CPU_INT08U    mem_align_modulo_src;
 366:Libraries/uC-LIB/lib_mem.c ****            CPU_BOOLEAN   mem_aligned;
 367:Libraries/uC-LIB/lib_mem.c **** 
 368:Libraries/uC-LIB/lib_mem.c **** 
 369:Libraries/uC-LIB/lib_mem.c ****     if (size < 1) {                                             /* See Note #1.                    
 354              		.loc 1 369 0
 355 01c0 7B68     		ldr	r3, [r7, #4]
 356 01c2 002B     		cmp	r3, #0
 357 01c4 70D0     		beq	.L31
 358              	.L19:
 370:Libraries/uC-LIB/lib_mem.c ****         return;
 371:Libraries/uC-LIB/lib_mem.c ****     }
 372:Libraries/uC-LIB/lib_mem.c ****     if (pdest == (void *)0) {
 359              		.loc 1 372 0
 360 01c6 FB68     		ldr	r3, [r7, #12]
 361 01c8 002B     		cmp	r3, #0
 362 01ca 6FD0     		beq	.L32
 363              	.L21:
 373:Libraries/uC-LIB/lib_mem.c ****         return;
 374:Libraries/uC-LIB/lib_mem.c ****     }
 375:Libraries/uC-LIB/lib_mem.c ****     if (psrc  == (void *)0) {
 364              		.loc 1 375 0
 365 01cc BB68     		ldr	r3, [r7, #8]
 366 01ce 002B     		cmp	r3, #0
 367 01d0 6ED0     		beq	.L33
 368              	.L22:
 376:Libraries/uC-LIB/lib_mem.c ****         return;
 377:Libraries/uC-LIB/lib_mem.c ****     }
 378:Libraries/uC-LIB/lib_mem.c **** 
 379:Libraries/uC-LIB/lib_mem.c **** 
 380:Libraries/uC-LIB/lib_mem.c ****     size_rem              =  size;
 369              		.loc 1 380 0
 370 01d2 7B68     		ldr	r3, [r7, #4]
 371 01d4 7B62     		str	r3, [r7, #36]
 381:Libraries/uC-LIB/lib_mem.c **** 
 382:Libraries/uC-LIB/lib_mem.c ****     pmem_08_dest          = (      CPU_INT08U *)pdest;
 372              		.loc 1 382 0
 373 01d6 FB68     		ldr	r3, [r7, #12]
 374 01d8 BB61     		str	r3, [r7, #24]
 383:Libraries/uC-LIB/lib_mem.c ****     pmem_08_src           = (const CPU_INT08U *)psrc;
 375              		.loc 1 383 0
 376 01da BB68     		ldr	r3, [r7, #8]
 377 01dc 7B61     		str	r3, [r7, #20]
 384:Libraries/uC-LIB/lib_mem.c ****                                                                 /* See Note #4.                    
 385:Libraries/uC-LIB/lib_mem.c ****     mem_align_modulo_dest = (CPU_INT08U)((CPU_ADDR)pmem_08_dest % sizeof(CPU_ALIGN));
 378              		.loc 1 385 0
 379 01de BB69     		ldr	r3, [r7, #24]
 380 01e0 DBB2     		uxtb	r3, r3
 381 01e2 03F00303 		and	r3, r3, #3
 382 01e6 BB74     		strb	r3, [r7, #18]
 386:Libraries/uC-LIB/lib_mem.c ****     mem_align_modulo_src  = (CPU_INT08U)((CPU_ADDR)pmem_08_src  % sizeof(CPU_ALIGN));
 383              		.loc 1 386 0
 384 01e8 7B69     		ldr	r3, [r7, #20]
 385 01ea DBB2     		uxtb	r3, r3
 386 01ec 03F00303 		and	r3, r3, #3
 387 01f0 7B74     		strb	r3, [r7, #17]
 387:Libraries/uC-LIB/lib_mem.c **** 
 388:Libraries/uC-LIB/lib_mem.c ****     mem_aligned           = (mem_align_modulo_dest == mem_align_modulo_src) ? DEF_YES : DEF_NO;
 388              		.loc 1 388 0
 389 01f2 BA7C     		ldrb	r2, [r7, #18]	@ zero_extendqisi2
 390 01f4 7B7C     		ldrb	r3, [r7, #17]	@ zero_extendqisi2
 391 01f6 9A42     		cmp	r2, r3
 392 01f8 14BF     		ite	ne
 393 01fa 0023     		movne	r3, #0
 394 01fc 0123     		moveq	r3, #1
 395 01fe 3B74     		strb	r3, [r7, #16]
 389:Libraries/uC-LIB/lib_mem.c **** 
 390:Libraries/uC-LIB/lib_mem.c ****     if (mem_aligned == DEF_YES) {                               /* If mem bufs' alignment offset eq
 396              		.loc 1 390 0
 397 0200 3B7C     		ldrb	r3, [r7, #16]	@ zero_extendqisi2
 398 0202 012B     		cmp	r3, #1
 399 0204 4CD1     		bne	.L29
 391:Libraries/uC-LIB/lib_mem.c ****                                                                 /* ... optimize copy for mem buf al
 392:Libraries/uC-LIB/lib_mem.c ****         if (mem_align_modulo_dest != 0u) {                      /* If leading octets avail,        
 400              		.loc 1 392 0
 401 0206 BB7C     		ldrb	r3, [r7, #18]	@ zero_extendqisi2
 402 0208 002B     		cmp	r3, #0
 403 020a 1CD0     		beq	.L24
 393:Libraries/uC-LIB/lib_mem.c ****             i = mem_align_modulo_dest;
 404              		.loc 1 393 0
 405 020c BB7C     		ldrb	r3, [r7, #18]
 406 020e FB74     		strb	r3, [r7, #19]
 394:Libraries/uC-LIB/lib_mem.c ****             while ((size_rem   >  0) &&                         /* ... start mem buf copy with lead
 407              		.loc 1 394 0
 408 0210 13E0     		b	.L25
 409              	.L26:
 395:Libraries/uC-LIB/lib_mem.c ****                    (i          <  sizeof(CPU_ALIGN ))) {        /* ... until next CPU_ALIGN word bo
 396:Libraries/uC-LIB/lib_mem.c ****                *pmem_08_dest++ = *pmem_08_src++;
 410              		.loc 1 396 0
 411 0212 7B69     		ldr	r3, [r7, #20]
 412 0214 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 413 0216 BB69     		ldr	r3, [r7, #24]
 414 0218 1A70     		strb	r2, [r3, #0]
 415 021a BB69     		ldr	r3, [r7, #24]
 416 021c 03F10103 		add	r3, r3, #1
 417 0220 BB61     		str	r3, [r7, #24]
 418 0222 7B69     		ldr	r3, [r7, #20]
 419 0224 03F10103 		add	r3, r3, #1
 420 0228 7B61     		str	r3, [r7, #20]
 397:Libraries/uC-LIB/lib_mem.c ****                 size_rem      -=  sizeof(CPU_INT08U);
 421              		.loc 1 397 0
 422 022a 7B6A     		ldr	r3, [r7, #36]
 423 022c 03F1FF33 		add	r3, r3, #-1
 424 0230 7B62     		str	r3, [r7, #36]
 398:Libraries/uC-LIB/lib_mem.c ****                 i++;
 425              		.loc 1 398 0
 426 0232 FB7C     		ldrb	r3, [r7, #19]
 427 0234 03F10103 		add	r3, r3, #1
 428 0238 FB74     		strb	r3, [r7, #19]
 429              	.L25:
 394:Libraries/uC-LIB/lib_mem.c ****             while ((size_rem   >  0) &&                         /* ... start mem buf copy with lead
 430              		.loc 1 394 0 discriminator 1
 431 023a 7B6A     		ldr	r3, [r7, #36]
 432 023c 002B     		cmp	r3, #0
 433 023e 02D0     		beq	.L24
 394:Libraries/uC-LIB/lib_mem.c ****             while ((size_rem   >  0) &&                         /* ... start mem buf copy with lead
 434              		.loc 1 394 0 is_stmt 0 discriminator 2
 435 0240 FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 436 0242 032B     		cmp	r3, #3
 437 0244 E5D9     		bls	.L26
 438              	.L24:
 399:Libraries/uC-LIB/lib_mem.c ****             }
 400:Libraries/uC-LIB/lib_mem.c ****         }
 401:Libraries/uC-LIB/lib_mem.c **** 
 402:Libraries/uC-LIB/lib_mem.c ****         pmem_align_dest = (      CPU_ALIGN *)pmem_08_dest;      /* See Note #3a.                   
 439              		.loc 1 402 0 is_stmt 1
 440 0246 BB69     		ldr	r3, [r7, #24]
 441 0248 3B62     		str	r3, [r7, #32]
 403:Libraries/uC-LIB/lib_mem.c ****         pmem_align_src  = (const CPU_ALIGN *)pmem_08_src;
 442              		.loc 1 403 0
 443 024a 7B69     		ldr	r3, [r7, #20]
 444 024c FB61     		str	r3, [r7, #28]
 404:Libraries/uC-LIB/lib_mem.c ****         while (size_rem      >=  sizeof(CPU_ALIGN)) {           /* While mem bufs aligned on CPU_AL
 445              		.loc 1 404 0
 446 024e 0FE0     		b	.L27
 447              	.L28:
 405:Libraries/uC-LIB/lib_mem.c ****            *pmem_align_dest++ = *pmem_align_src++;              /* ... copy psrc to pdest with CPU_
 448              		.loc 1 405 0
 449 0250 FB69     		ldr	r3, [r7, #28]
 450 0252 1A68     		ldr	r2, [r3, #0]
 451 0254 3B6A     		ldr	r3, [r7, #32]
 452 0256 1A60     		str	r2, [r3, #0]
 453 0258 3B6A     		ldr	r3, [r7, #32]
 454 025a 03F10403 		add	r3, r3, #4
 455 025e 3B62     		str	r3, [r7, #32]
 456 0260 FB69     		ldr	r3, [r7, #28]
 457 0262 03F10403 		add	r3, r3, #4
 458 0266 FB61     		str	r3, [r7, #28]
 406:Libraries/uC-LIB/lib_mem.c ****             size_rem         -=  sizeof(CPU_ALIGN);
 459              		.loc 1 406 0
 460 0268 7B6A     		ldr	r3, [r7, #36]
 461 026a A3F10403 		sub	r3, r3, #4
 462 026e 7B62     		str	r3, [r7, #36]
 463              	.L27:
 404:Libraries/uC-LIB/lib_mem.c ****         while (size_rem      >=  sizeof(CPU_ALIGN)) {           /* While mem bufs aligned on CPU_AL
 464              		.loc 1 404 0 discriminator 1
 465 0270 7B6A     		ldr	r3, [r7, #36]
 466 0272 032B     		cmp	r3, #3
 467 0274 ECD8     		bhi	.L28
 407:Libraries/uC-LIB/lib_mem.c ****         }
 408:Libraries/uC-LIB/lib_mem.c **** 
 409:Libraries/uC-LIB/lib_mem.c ****         pmem_08_dest = (      CPU_INT08U *)pmem_align_dest;
 468              		.loc 1 409 0
 469 0276 3B6A     		ldr	r3, [r7, #32]
 470 0278 BB61     		str	r3, [r7, #24]
 410:Libraries/uC-LIB/lib_mem.c ****         pmem_08_src  = (const CPU_INT08U *)pmem_align_src;
 471              		.loc 1 410 0
 472 027a FB69     		ldr	r3, [r7, #28]
 473 027c 7B61     		str	r3, [r7, #20]
 411:Libraries/uC-LIB/lib_mem.c ****     }
 412:Libraries/uC-LIB/lib_mem.c **** 
 413:Libraries/uC-LIB/lib_mem.c ****     while (size_rem > 0) {                                      /* For unaligned mem bufs or traili
 474              		.loc 1 413 0
 475 027e 0FE0     		b	.L29
 476              	.L30:
 414:Libraries/uC-LIB/lib_mem.c ****        *pmem_08_dest++ = *pmem_08_src++;                        /* ... copy psrc to pdest by octets
 477              		.loc 1 414 0
 478 0280 7B69     		ldr	r3, [r7, #20]
 479 0282 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 480 0284 BB69     		ldr	r3, [r7, #24]
 481 0286 1A70     		strb	r2, [r3, #0]
 482 0288 BB69     		ldr	r3, [r7, #24]
 483 028a 03F10103 		add	r3, r3, #1
 484 028e BB61     		str	r3, [r7, #24]
 485 0290 7B69     		ldr	r3, [r7, #20]
 486 0292 03F10103 		add	r3, r3, #1
 487 0296 7B61     		str	r3, [r7, #20]
 415:Libraries/uC-LIB/lib_mem.c ****         size_rem      -=  sizeof(CPU_INT08U);
 488              		.loc 1 415 0
 489 0298 7B6A     		ldr	r3, [r7, #36]
 490 029a 03F1FF33 		add	r3, r3, #-1
 491 029e 7B62     		str	r3, [r7, #36]
 492              	.L29:
 413:Libraries/uC-LIB/lib_mem.c ****     while (size_rem > 0) {                                      /* For unaligned mem bufs or traili
 493              		.loc 1 413 0 discriminator 1
 494 02a0 7B6A     		ldr	r3, [r7, #36]
 495 02a2 002B     		cmp	r3, #0
 496 02a4 ECD1     		bne	.L30
 497 02a6 04E0     		b	.L18
 498              	.L31:
 370:Libraries/uC-LIB/lib_mem.c ****         return;
 499              		.loc 1 370 0
 500 02a8 00BF     		nop
 501 02aa 02E0     		b	.L18
 502              	.L32:
 373:Libraries/uC-LIB/lib_mem.c ****         return;
 503              		.loc 1 373 0
 504 02ac 00BF     		nop
 505 02ae 00E0     		b	.L18
 506              	.L33:
 376:Libraries/uC-LIB/lib_mem.c ****         return;
 507              		.loc 1 376 0
 508 02b0 00BF     		nop
 509              	.L18:
 416:Libraries/uC-LIB/lib_mem.c ****     }
 417:Libraries/uC-LIB/lib_mem.c **** }
 510              		.loc 1 417 0
 511 02b2 07F12C07 		add	r7, r7, #44
 512 02b6 BD46     		mov	sp, r7
 513 02b8 80BC     		pop	{r7}
 514 02ba 7047     		bx	lr
 515              		.cfi_endproc
 516              	.LFE3:
 518              		.align	2
 519              		.global	Mem_Cmp
 520              		.thumb
 521              		.thumb_func
 523              	Mem_Cmp:
 524              	.LFB4:
 418:Libraries/uC-LIB/lib_mem.c **** #endif
 419:Libraries/uC-LIB/lib_mem.c **** 
 420:Libraries/uC-LIB/lib_mem.c **** 
 421:Libraries/uC-LIB/lib_mem.c **** /*$PAGE*/
 422:Libraries/uC-LIB/lib_mem.c **** /*
 423:Libraries/uC-LIB/lib_mem.c **** ***************************************************************************************************
 424:Libraries/uC-LIB/lib_mem.c **** *                                              Mem_Cmp()
 425:Libraries/uC-LIB/lib_mem.c **** *
 426:Libraries/uC-LIB/lib_mem.c **** * Description : Verify that ALL data octets in two memory buffers are identical in sequence.
 427:Libraries/uC-LIB/lib_mem.c **** *
 428:Libraries/uC-LIB/lib_mem.c **** * Argument(s) : p1_mem      Pointer to first  memory buffer.
 429:Libraries/uC-LIB/lib_mem.c **** *
 430:Libraries/uC-LIB/lib_mem.c **** *               p2_mem      Pointer to second memory buffer.
 431:Libraries/uC-LIB/lib_mem.c **** *
 432:Libraries/uC-LIB/lib_mem.c **** *               size        Number of data buffer octets to compare (see Note #1).
 433:Libraries/uC-LIB/lib_mem.c **** *
 434:Libraries/uC-LIB/lib_mem.c **** * Return(s)   : DEF_YES, if 'size' number of data octets are identical in both memory buffers.
 435:Libraries/uC-LIB/lib_mem.c **** *
 436:Libraries/uC-LIB/lib_mem.c **** *               DEF_NO,  otherwise.
 437:Libraries/uC-LIB/lib_mem.c **** *
 438:Libraries/uC-LIB/lib_mem.c **** * Caller(s)   : Application.
 439:Libraries/uC-LIB/lib_mem.c **** *
 440:Libraries/uC-LIB/lib_mem.c **** * Note(s)     : (1) Null compares allowed (i.e. zero-length compares); 'DEF_YES' returned to indica
 441:Libraries/uC-LIB/lib_mem.c **** *                   identical null compare.
 442:Libraries/uC-LIB/lib_mem.c **** *
 443:Libraries/uC-LIB/lib_mem.c **** *               (2) Many memory buffer comparisons vary ONLY in the least significant octets -- e.g
 444:Libraries/uC-LIB/lib_mem.c **** *                   network address buffers.  Consequently, memory buffer comparison is more effici
 445:Libraries/uC-LIB/lib_mem.c **** *                   if the comparison starts from the end of the memory buffers which will abort so
 446:Libraries/uC-LIB/lib_mem.c **** *                   on dissimilar memory buffers that vary only in the least significant octets.
 447:Libraries/uC-LIB/lib_mem.c **** *
 448:Libraries/uC-LIB/lib_mem.c **** *               (3) For best CPU performance, optimized to compare data buffers using 'CPU_ALIGN'-s
 449:Libraries/uC-LIB/lib_mem.c **** *                   data words.
 450:Libraries/uC-LIB/lib_mem.c **** *
 451:Libraries/uC-LIB/lib_mem.c **** *                   (a) Since many word-aligned processors REQUIRE that multi-octet words be access
 452:Libraries/uC-LIB/lib_mem.c **** *                       word-aligned addresses, 'CPU_ALIGN'-sized words MUST be accessed on 'CPU_AL
 453:Libraries/uC-LIB/lib_mem.c **** *                       addresses.
 454:Libraries/uC-LIB/lib_mem.c **** *
 455:Libraries/uC-LIB/lib_mem.c **** *               (4) Modulo arithmetic is used to determine whether a memory buffer starts on a 'CPU
 456:Libraries/uC-LIB/lib_mem.c **** *                   address boundary.
 457:Libraries/uC-LIB/lib_mem.c **** *
 458:Libraries/uC-LIB/lib_mem.c **** *                   Modulo arithmetic in ANSI-C REQUIREs operations performed on integer values.  T
 459:Libraries/uC-LIB/lib_mem.c **** *                   address values MUST be cast to an appropriately-sized integer value PRIOR to an
 460:Libraries/uC-LIB/lib_mem.c **** *                   mem_align_modulo arithmetic operation.
 461:Libraries/uC-LIB/lib_mem.c **** ***************************************************************************************************
 462:Libraries/uC-LIB/lib_mem.c **** */
 463:Libraries/uC-LIB/lib_mem.c **** /*$PAGE*/
 464:Libraries/uC-LIB/lib_mem.c **** CPU_BOOLEAN  Mem_Cmp (const  void        *p1_mem,
 465:Libraries/uC-LIB/lib_mem.c ****                       const  void        *p2_mem,
 466:Libraries/uC-LIB/lib_mem.c ****                              CPU_SIZE_T   size)
 467:Libraries/uC-LIB/lib_mem.c **** {
 525              		.loc 1 467 0
 526              		.cfi_startproc
 527              		@ args = 0, pretend = 0, frame = 48
 528              		@ frame_needed = 1, uses_anonymous_args = 0
 529              		@ link register save eliminated.
 530 02bc 80B4     		push	{r7}
 531              	.LCFI12:
 532              		.cfi_def_cfa_offset 4
 533              		.cfi_offset 7, -4
 534 02be 8DB0     		sub	sp, sp, #52
 535              	.LCFI13:
 536              		.cfi_def_cfa_offset 56
 537 02c0 00AF     		add	r7, sp, #0
 538              	.LCFI14:
 539              		.cfi_def_cfa_register 7
 540 02c2 F860     		str	r0, [r7, #12]
 541 02c4 B960     		str	r1, [r7, #8]
 542 02c6 7A60     		str	r2, [r7, #4]
 468:Libraries/uC-LIB/lib_mem.c ****            CPU_SIZE_T    size_rem;
 469:Libraries/uC-LIB/lib_mem.c ****            CPU_ALIGN    *p1_mem_align;
 470:Libraries/uC-LIB/lib_mem.c ****            CPU_ALIGN    *p2_mem_align;
 471:Libraries/uC-LIB/lib_mem.c ****     const  CPU_INT08U   *p1_mem_08;
 472:Libraries/uC-LIB/lib_mem.c ****     const  CPU_INT08U   *p2_mem_08;
 473:Libraries/uC-LIB/lib_mem.c ****            CPU_INT08U    i;
 474:Libraries/uC-LIB/lib_mem.c ****            CPU_INT08U    mem_align_modulo_1;
 475:Libraries/uC-LIB/lib_mem.c ****            CPU_INT08U    mem_align_modulo_2;
 476:Libraries/uC-LIB/lib_mem.c ****            CPU_BOOLEAN   mem_aligned;
 477:Libraries/uC-LIB/lib_mem.c ****            CPU_BOOLEAN   mem_cmp;
 478:Libraries/uC-LIB/lib_mem.c **** 
 479:Libraries/uC-LIB/lib_mem.c **** 
 480:Libraries/uC-LIB/lib_mem.c ****     if (size < 1) {                                             /* See Note #1.                    
 543              		.loc 1 480 0
 544 02c8 7B68     		ldr	r3, [r7, #4]
 545 02ca 002B     		cmp	r3, #0
 546 02cc 02D1     		bne	.L35
 481:Libraries/uC-LIB/lib_mem.c ****         return (DEF_YES);
 547              		.loc 1 481 0
 548 02ce 4FF00103 		mov	r3, #1
 549 02d2 98E0     		b	.L36
 550              	.L35:
 482:Libraries/uC-LIB/lib_mem.c ****     }
 483:Libraries/uC-LIB/lib_mem.c ****     if (p1_mem == (void *)0) {
 551              		.loc 1 483 0
 552 02d4 FB68     		ldr	r3, [r7, #12]
 553 02d6 002B     		cmp	r3, #0
 554 02d8 02D1     		bne	.L37
 484:Libraries/uC-LIB/lib_mem.c ****         return (DEF_NO);
 555              		.loc 1 484 0
 556 02da 4FF00003 		mov	r3, #0
 557 02de 92E0     		b	.L36
 558              	.L37:
 485:Libraries/uC-LIB/lib_mem.c ****     }
 486:Libraries/uC-LIB/lib_mem.c ****     if (p2_mem == (void *)0) {
 559              		.loc 1 486 0
 560 02e0 BB68     		ldr	r3, [r7, #8]
 561 02e2 002B     		cmp	r3, #0
 562 02e4 02D1     		bne	.L38
 487:Libraries/uC-LIB/lib_mem.c ****         return (DEF_NO);
 563              		.loc 1 487 0
 564 02e6 4FF00003 		mov	r3, #0
 565 02ea 8CE0     		b	.L36
 566              	.L38:
 488:Libraries/uC-LIB/lib_mem.c ****     }
 489:Libraries/uC-LIB/lib_mem.c **** 
 490:Libraries/uC-LIB/lib_mem.c **** 
 491:Libraries/uC-LIB/lib_mem.c ****     mem_cmp            =  DEF_YES;                              /* Assume mem bufs are identical un
 567              		.loc 1 491 0
 568 02ec 4FF00103 		mov	r3, #1
 569 02f0 BB76     		strb	r3, [r7, #26]
 492:Libraries/uC-LIB/lib_mem.c ****     size_rem           =  size;
 570              		.loc 1 492 0
 571 02f2 7B68     		ldr	r3, [r7, #4]
 572 02f4 FB62     		str	r3, [r7, #44]
 493:Libraries/uC-LIB/lib_mem.c ****                                                                 /* Start @ end of mem bufs (see Not
 494:Libraries/uC-LIB/lib_mem.c ****     p1_mem_08          = (const CPU_INT08U *)p1_mem + size;
 573              		.loc 1 494 0
 574 02f6 FA68     		ldr	r2, [r7, #12]
 575 02f8 7B68     		ldr	r3, [r7, #4]
 576 02fa D318     		adds	r3, r2, r3
 577 02fc 3B62     		str	r3, [r7, #32]
 495:Libraries/uC-LIB/lib_mem.c ****     p2_mem_08          = (const CPU_INT08U *)p2_mem + size;
 578              		.loc 1 495 0
 579 02fe BA68     		ldr	r2, [r7, #8]
 580 0300 7B68     		ldr	r3, [r7, #4]
 581 0302 D318     		adds	r3, r2, r3
 582 0304 FB61     		str	r3, [r7, #28]
 496:Libraries/uC-LIB/lib_mem.c ****                                                                 /* See Note #4.                    
 497:Libraries/uC-LIB/lib_mem.c ****     mem_align_modulo_1 = (CPU_INT08U)((CPU_ADDR)p1_mem_08 % sizeof(CPU_ALIGN));
 583              		.loc 1 497 0
 584 0306 3B6A     		ldr	r3, [r7, #32]
 585 0308 DBB2     		uxtb	r3, r3
 586 030a 03F00303 		and	r3, r3, #3
 587 030e 7B76     		strb	r3, [r7, #25]
 498:Libraries/uC-LIB/lib_mem.c ****     mem_align_modulo_2 = (CPU_INT08U)((CPU_ADDR)p2_mem_08 % sizeof(CPU_ALIGN));
 588              		.loc 1 498 0
 589 0310 FB69     		ldr	r3, [r7, #28]
 590 0312 DBB2     		uxtb	r3, r3
 591 0314 03F00303 		and	r3, r3, #3
 592 0318 3B76     		strb	r3, [r7, #24]
 499:Libraries/uC-LIB/lib_mem.c **** 
 500:Libraries/uC-LIB/lib_mem.c ****     mem_aligned        = (mem_align_modulo_1 == mem_align_modulo_2) ? DEF_YES : DEF_NO;
 593              		.loc 1 500 0
 594 031a 7A7E     		ldrb	r2, [r7, #25]	@ zero_extendqisi2
 595 031c 3B7E     		ldrb	r3, [r7, #24]	@ zero_extendqisi2
 596 031e 9A42     		cmp	r2, r3
 597 0320 14BF     		ite	ne
 598 0322 0023     		movne	r3, #0
 599 0324 0123     		moveq	r3, #1
 600 0326 FB75     		strb	r3, [r7, #23]
 501:Libraries/uC-LIB/lib_mem.c **** 
 502:Libraries/uC-LIB/lib_mem.c ****     if (mem_aligned == DEF_YES) {                               /* If mem bufs' alignment offset eq
 601              		.loc 1 502 0
 602 0328 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 603 032a 012B     		cmp	r3, #1
 604 032c 64D1     		bne	.L48
 503:Libraries/uC-LIB/lib_mem.c ****                                                                 /* ... optimize cmp for mem buf ali
 504:Libraries/uC-LIB/lib_mem.c ****         if (mem_align_modulo_1 != 0u) {                         /* If trailing octets avail,       
 605              		.loc 1 504 0
 606 032e 7B7E     		ldrb	r3, [r7, #25]	@ zero_extendqisi2
 607 0330 002B     		cmp	r3, #0
 608 0332 24D0     		beq	.L40
 505:Libraries/uC-LIB/lib_mem.c ****             i = mem_align_modulo_1;
 609              		.loc 1 505 0
 610 0334 7B7E     		ldrb	r3, [r7, #25]
 611 0336 FB76     		strb	r3, [r7, #27]
 506:Libraries/uC-LIB/lib_mem.c ****             while ((mem_cmp == DEF_YES) &&                      /* ... cmp mem bufs while identical
 612              		.loc 1 506 0
 613 0338 18E0     		b	.L41
 614              	.L43:
 507:Libraries/uC-LIB/lib_mem.c ****                    (size_rem > 0)       &&                      /* ... start mem buf cmp with trail
 508:Libraries/uC-LIB/lib_mem.c ****                    (i        > 0)) {                            /* ... until next CPU_ALIGN word bo
 509:Libraries/uC-LIB/lib_mem.c ****                 p1_mem_08--;
 615              		.loc 1 509 0
 616 033a 3B6A     		ldr	r3, [r7, #32]
 617 033c 03F1FF33 		add	r3, r3, #-1
 618 0340 3B62     		str	r3, [r7, #32]
 510:Libraries/uC-LIB/lib_mem.c ****                 p2_mem_08--;
 619              		.loc 1 510 0
 620 0342 FB69     		ldr	r3, [r7, #28]
 621 0344 03F1FF33 		add	r3, r3, #-1
 622 0348 FB61     		str	r3, [r7, #28]
 511:Libraries/uC-LIB/lib_mem.c ****                 if (*p1_mem_08 != *p2_mem_08) {                 /* If ANY data octet(s) NOT identic
 623              		.loc 1 511 0
 624 034a 3B6A     		ldr	r3, [r7, #32]
 625 034c 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 626 034e FB69     		ldr	r3, [r7, #28]
 627 0350 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 628 0352 9A42     		cmp	r2, r3
 629 0354 02D0     		beq	.L42
 512:Libraries/uC-LIB/lib_mem.c ****                      mem_cmp = DEF_NO;
 630              		.loc 1 512 0
 631 0356 4FF00003 		mov	r3, #0
 632 035a BB76     		strb	r3, [r7, #26]
 633              	.L42:
 513:Libraries/uC-LIB/lib_mem.c ****                 }
 514:Libraries/uC-LIB/lib_mem.c ****                 size_rem -= sizeof(CPU_INT08U);
 634              		.loc 1 514 0
 635 035c FB6A     		ldr	r3, [r7, #44]
 636 035e 03F1FF33 		add	r3, r3, #-1
 637 0362 FB62     		str	r3, [r7, #44]
 515:Libraries/uC-LIB/lib_mem.c ****                 i--;
 638              		.loc 1 515 0
 639 0364 FB7E     		ldrb	r3, [r7, #27]
 640 0366 03F1FF33 		add	r3, r3, #-1
 641 036a FB76     		strb	r3, [r7, #27]
 642              	.L41:
 506:Libraries/uC-LIB/lib_mem.c ****             while ((mem_cmp == DEF_YES) &&                      /* ... cmp mem bufs while identical
 643              		.loc 1 506 0 discriminator 1
 644 036c BB7E     		ldrb	r3, [r7, #26]	@ zero_extendqisi2
 645 036e 012B     		cmp	r3, #1
 646 0370 05D1     		bne	.L40
 506:Libraries/uC-LIB/lib_mem.c ****             while ((mem_cmp == DEF_YES) &&                      /* ... cmp mem bufs while identical
 647              		.loc 1 506 0 is_stmt 0 discriminator 2
 648 0372 FB6A     		ldr	r3, [r7, #44]
 649 0374 002B     		cmp	r3, #0
 650 0376 02D0     		beq	.L40
 507:Libraries/uC-LIB/lib_mem.c ****                    (size_rem > 0)       &&                      /* ... start mem buf cmp with trail
 651              		.loc 1 507 0 is_stmt 1
 652 0378 FB7E     		ldrb	r3, [r7, #27]	@ zero_extendqisi2
 653 037a 002B     		cmp	r3, #0
 654 037c DDD1     		bne	.L43
 655              	.L40:
 516:Libraries/uC-LIB/lib_mem.c ****             }
 517:Libraries/uC-LIB/lib_mem.c ****         }
 518:Libraries/uC-LIB/lib_mem.c **** 
 519:Libraries/uC-LIB/lib_mem.c ****         if (mem_cmp == DEF_YES) {                               /* If cmp still identical, cmp alig
 656              		.loc 1 519 0
 657 037e BB7E     		ldrb	r3, [r7, #26]	@ zero_extendqisi2
 658 0380 012B     		cmp	r3, #1
 659 0382 39D1     		bne	.L48
 520:Libraries/uC-LIB/lib_mem.c ****             p1_mem_align = (CPU_ALIGN *)p1_mem_08;              /* See Note #3a.                   
 660              		.loc 1 520 0
 661 0384 3B6A     		ldr	r3, [r7, #32]
 662 0386 BB62     		str	r3, [r7, #40]
 521:Libraries/uC-LIB/lib_mem.c ****             p2_mem_align = (CPU_ALIGN *)p2_mem_08;
 663              		.loc 1 521 0
 664 0388 FB69     		ldr	r3, [r7, #28]
 665 038a 7B62     		str	r3, [r7, #36]
 522:Libraries/uC-LIB/lib_mem.c **** 
 523:Libraries/uC-LIB/lib_mem.c ****             while ((mem_cmp  == DEF_YES) &&                     /* Cmp mem bufs while identical & .
 666              		.loc 1 523 0
 667 038c 14E0     		b	.L44
 668              	.L47:
 524:Libraries/uC-LIB/lib_mem.c ****                    (size_rem >= sizeof(CPU_ALIGN))) {           /* ... mem bufs aligned on CPU_ALIG
 525:Libraries/uC-LIB/lib_mem.c ****                 p1_mem_align--;
 669              		.loc 1 525 0
 670 038e BB6A     		ldr	r3, [r7, #40]
 671 0390 A3F10403 		sub	r3, r3, #4
 672 0394 BB62     		str	r3, [r7, #40]
 526:Libraries/uC-LIB/lib_mem.c ****                 p2_mem_align--;
 673              		.loc 1 526 0
 674 0396 7B6A     		ldr	r3, [r7, #36]
 675 0398 A3F10403 		sub	r3, r3, #4
 676 039c 7B62     		str	r3, [r7, #36]
 527:Libraries/uC-LIB/lib_mem.c ****                 if (*p1_mem_align != *p2_mem_align) {           /* If ANY data octet(s) NOT identic
 677              		.loc 1 527 0
 678 039e BB6A     		ldr	r3, [r7, #40]
 679 03a0 1A68     		ldr	r2, [r3, #0]
 680 03a2 7B6A     		ldr	r3, [r7, #36]
 681 03a4 1B68     		ldr	r3, [r3, #0]
 682 03a6 9A42     		cmp	r2, r3
 683 03a8 02D0     		beq	.L45
 528:Libraries/uC-LIB/lib_mem.c ****                      mem_cmp = DEF_NO;
 684              		.loc 1 528 0
 685 03aa 4FF00003 		mov	r3, #0
 686 03ae BB76     		strb	r3, [r7, #26]
 687              	.L45:
 529:Libraries/uC-LIB/lib_mem.c ****                 }
 530:Libraries/uC-LIB/lib_mem.c ****                 size_rem -= sizeof(CPU_ALIGN);
 688              		.loc 1 530 0
 689 03b0 FB6A     		ldr	r3, [r7, #44]
 690 03b2 A3F10403 		sub	r3, r3, #4
 691 03b6 FB62     		str	r3, [r7, #44]
 692              	.L44:
 523:Libraries/uC-LIB/lib_mem.c ****             while ((mem_cmp  == DEF_YES) &&                     /* Cmp mem bufs while identical & .
 693              		.loc 1 523 0 discriminator 1
 694 03b8 BB7E     		ldrb	r3, [r7, #26]	@ zero_extendqisi2
 695 03ba 012B     		cmp	r3, #1
 696 03bc 02D1     		bne	.L46
 523:Libraries/uC-LIB/lib_mem.c ****             while ((mem_cmp  == DEF_YES) &&                     /* Cmp mem bufs while identical & .
 697              		.loc 1 523 0 is_stmt 0 discriminator 2
 698 03be FB6A     		ldr	r3, [r7, #44]
 699 03c0 032B     		cmp	r3, #3
 700 03c2 E4D8     		bhi	.L47
 701              	.L46:
 531:Libraries/uC-LIB/lib_mem.c ****             }
 532:Libraries/uC-LIB/lib_mem.c **** 
 533:Libraries/uC-LIB/lib_mem.c ****             p1_mem_08 = (CPU_INT08U *)p1_mem_align;
 702              		.loc 1 533 0 is_stmt 1
 703 03c4 BB6A     		ldr	r3, [r7, #40]
 704 03c6 3B62     		str	r3, [r7, #32]
 534:Libraries/uC-LIB/lib_mem.c ****             p2_mem_08 = (CPU_INT08U *)p2_mem_align;
 705              		.loc 1 534 0
 706 03c8 7B6A     		ldr	r3, [r7, #36]
 707 03ca FB61     		str	r3, [r7, #28]
 535:Libraries/uC-LIB/lib_mem.c ****         }
 536:Libraries/uC-LIB/lib_mem.c ****     }
 537:Libraries/uC-LIB/lib_mem.c **** 
 538:Libraries/uC-LIB/lib_mem.c ****     while ((mem_cmp == DEF_YES) &&                              /* Cmp mem bufs while identical ...
 708              		.loc 1 538 0
 709 03cc 14E0     		b	.L48
 710              	.L51:
 539:Libraries/uC-LIB/lib_mem.c ****            (size_rem > 0)) {                                    /* ... for unaligned mem bufs or tr
 540:Libraries/uC-LIB/lib_mem.c ****         p1_mem_08--;
 711              		.loc 1 540 0
 712 03ce 3B6A     		ldr	r3, [r7, #32]
 713 03d0 03F1FF33 		add	r3, r3, #-1
 714 03d4 3B62     		str	r3, [r7, #32]
 541:Libraries/uC-LIB/lib_mem.c ****         p2_mem_08--;
 715              		.loc 1 541 0
 716 03d6 FB69     		ldr	r3, [r7, #28]
 717 03d8 03F1FF33 		add	r3, r3, #-1
 718 03dc FB61     		str	r3, [r7, #28]
 542:Libraries/uC-LIB/lib_mem.c ****         if (*p1_mem_08 != *p2_mem_08) {                         /* If ANY data octet(s) NOT identic
 719              		.loc 1 542 0
 720 03de 3B6A     		ldr	r3, [r7, #32]
 721 03e0 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 722 03e2 FB69     		ldr	r3, [r7, #28]
 723 03e4 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 724 03e6 9A42     		cmp	r2, r3
 725 03e8 02D0     		beq	.L49
 543:Libraries/uC-LIB/lib_mem.c ****              mem_cmp = DEF_NO;
 726              		.loc 1 543 0
 727 03ea 4FF00003 		mov	r3, #0
 728 03ee BB76     		strb	r3, [r7, #26]
 729              	.L49:
 544:Libraries/uC-LIB/lib_mem.c ****         }
 545:Libraries/uC-LIB/lib_mem.c ****         size_rem -= sizeof(CPU_INT08U);
 730              		.loc 1 545 0
 731 03f0 FB6A     		ldr	r3, [r7, #44]
 732 03f2 03F1FF33 		add	r3, r3, #-1
 733 03f6 FB62     		str	r3, [r7, #44]
 734              	.L48:
 538:Libraries/uC-LIB/lib_mem.c ****     while ((mem_cmp == DEF_YES) &&                              /* Cmp mem bufs while identical ...
 735              		.loc 1 538 0 discriminator 1
 736 03f8 BB7E     		ldrb	r3, [r7, #26]	@ zero_extendqisi2
 737 03fa 012B     		cmp	r3, #1
 738 03fc 02D1     		bne	.L50
 538:Libraries/uC-LIB/lib_mem.c ****     while ((mem_cmp == DEF_YES) &&                              /* Cmp mem bufs while identical ...
 739              		.loc 1 538 0 is_stmt 0 discriminator 2
 740 03fe FB6A     		ldr	r3, [r7, #44]
 741 0400 002B     		cmp	r3, #0
 742 0402 E4D1     		bne	.L51
 743              	.L50:
 546:Libraries/uC-LIB/lib_mem.c ****     }
 547:Libraries/uC-LIB/lib_mem.c **** 
 548:Libraries/uC-LIB/lib_mem.c ****     return (mem_cmp);
 744              		.loc 1 548 0 is_stmt 1
 745 0404 BB7E     		ldrb	r3, [r7, #26]	@ zero_extendqisi2
 746              	.L36:
 549:Libraries/uC-LIB/lib_mem.c **** }
 747              		.loc 1 549 0
 748 0406 1846     		mov	r0, r3
 749 0408 07F13407 		add	r7, r7, #52
 750 040c BD46     		mov	sp, r7
 751 040e 80BC     		pop	{r7}
 752 0410 7047     		bx	lr
 753              		.cfi_endproc
 754              	.LFE4:
 756 0412 00BF     		.align	2
 757              		.global	Mem_HeapAlloc
 758              		.thumb
 759              		.thumb_func
 761              	Mem_HeapAlloc:
 762              	.LFB5:
 550:Libraries/uC-LIB/lib_mem.c **** 
 551:Libraries/uC-LIB/lib_mem.c **** 
 552:Libraries/uC-LIB/lib_mem.c **** /*$PAGE*/
 553:Libraries/uC-LIB/lib_mem.c **** /*
 554:Libraries/uC-LIB/lib_mem.c **** ***************************************************************************************************
 555:Libraries/uC-LIB/lib_mem.c **** *                                           Mem_HeapAlloc()
 556:Libraries/uC-LIB/lib_mem.c **** *
 557:Libraries/uC-LIB/lib_mem.c **** * Description : Allocate a memory block from the heap memory pool.
 558:Libraries/uC-LIB/lib_mem.c **** *
 559:Libraries/uC-LIB/lib_mem.c **** * Argument(s) : size            Size      of memory block to allocate (in octets).
 560:Libraries/uC-LIB/lib_mem.c **** *
 561:Libraries/uC-LIB/lib_mem.c **** *               align           Alignment of memory block to specific word boundary (in octets).
 562:Libraries/uC-LIB/lib_mem.c **** *
 563:Libraries/uC-LIB/lib_mem.c **** *               poctets_reqd    Optional pointer to a variable to ... :
 564:Libraries/uC-LIB/lib_mem.c **** *
 565:Libraries/uC-LIB/lib_mem.c **** *                                   (a) Return the number of octets required to successfully
 566:Libraries/uC-LIB/lib_mem.c **** *                                           allocate the memory block, if any error(s);
 567:Libraries/uC-LIB/lib_mem.c **** *                                   (b) Return 0, otherwise.
 568:Libraries/uC-LIB/lib_mem.c **** *
 569:Libraries/uC-LIB/lib_mem.c **** *               perr        Pointer to variable that will receive the return error code from this f
 570:Libraries/uC-LIB/lib_mem.c **** *
 571:Libraries/uC-LIB/lib_mem.c **** *                               LIB_MEM_ERR_NONE                Memory block successfully returned.
 572:Libraries/uC-LIB/lib_mem.c **** *                               LIB_MEM_ERR_INVALID_MEM_SIZE    Invalid memory size.
 573:Libraries/uC-LIB/lib_mem.c **** *                               LIB_MEM_ERR_INVALID_MEM_ALIGN   Invalid memory alignment.
 574:Libraries/uC-LIB/lib_mem.c **** *                               LIB_MEM_ERR_HEAP_EMPTY          Heap segment empty; NOT enough avai
 575:Libraries/uC-LIB/lib_mem.c **** *                                                                   memory from heap.
 576:Libraries/uC-LIB/lib_mem.c **** *                               LIB_MEM_ERR_HEAP_OVF            Requested memory overflows heap mem
 577:Libraries/uC-LIB/lib_mem.c **** *
 578:Libraries/uC-LIB/lib_mem.c **** * Return(s)   : Pointer to memory block, if NO error(s).
 579:Libraries/uC-LIB/lib_mem.c **** *
 580:Libraries/uC-LIB/lib_mem.c **** *               Pointer to NULL,         otherwise.
 581:Libraries/uC-LIB/lib_mem.c **** *
 582:Libraries/uC-LIB/lib_mem.c **** * Caller(s)   : Application.
 583:Libraries/uC-LIB/lib_mem.c **** *
 584:Libraries/uC-LIB/lib_mem.c **** * Note(s)     : (1) Pointers to variables that return values MUST be initialized PRIOR to all other
 585:Libraries/uC-LIB/lib_mem.c **** *                   validation or function handling in case of any error(s).
 586:Libraries/uC-LIB/lib_mem.c **** *
 587:Libraries/uC-LIB/lib_mem.c **** *               (2) 'pmem_pool' variables MUST ALWAYS be accessed exclusively in critical sections.
 588:Libraries/uC-LIB/lib_mem.c **** ***************************************************************************************************
 589:Libraries/uC-LIB/lib_mem.c **** */
 590:Libraries/uC-LIB/lib_mem.c **** /*$PAGE*/
 591:Libraries/uC-LIB/lib_mem.c **** #if (LIB_MEM_CFG_ALLOC_EN == DEF_ENABLED)
 592:Libraries/uC-LIB/lib_mem.c **** void  *Mem_HeapAlloc (CPU_SIZE_T   size,
 593:Libraries/uC-LIB/lib_mem.c ****                       CPU_SIZE_T   align,
 594:Libraries/uC-LIB/lib_mem.c ****                       CPU_SIZE_T  *poctets_reqd,
 595:Libraries/uC-LIB/lib_mem.c ****                       LIB_ERR     *perr)
 596:Libraries/uC-LIB/lib_mem.c **** {
 763              		.loc 1 596 0
 764              		.cfi_startproc
 765              		@ args = 0, pretend = 0, frame = 48
 766              		@ frame_needed = 1, uses_anonymous_args = 0
 767 0414 80B5     		push	{r7, lr}
 768              	.LCFI15:
 769              		.cfi_def_cfa_offset 8
 770              		.cfi_offset 14, -4
 771              		.cfi_offset 7, -8
 772 0416 8CB0     		sub	sp, sp, #48
 773              	.LCFI16:
 774              		.cfi_def_cfa_offset 56
 775 0418 00AF     		add	r7, sp, #0
 776              	.LCFI17:
 777              		.cfi_def_cfa_register 7
 778 041a F860     		str	r0, [r7, #12]
 779 041c B960     		str	r1, [r7, #8]
 780 041e 7A60     		str	r2, [r7, #4]
 781 0420 3B60     		str	r3, [r7, #0]
 597:Libraries/uC-LIB/lib_mem.c ****     MEM_POOL    *pmem_pool_heap;
 598:Libraries/uC-LIB/lib_mem.c ****     void        *pmem_addr;
 599:Libraries/uC-LIB/lib_mem.c ****     void        *pmem_blk;
 600:Libraries/uC-LIB/lib_mem.c ****     CPU_SIZE_T   octets_reqd_unused;
 601:Libraries/uC-LIB/lib_mem.c ****     CPU_SIZE_T   size_rem;
 602:Libraries/uC-LIB/lib_mem.c ****     CPU_SIZE_T   size_req;
 603:Libraries/uC-LIB/lib_mem.c ****     CPU_SR_ALLOC();
 782              		.loc 1 603 0
 783 0422 4FF00003 		mov	r3, #0
 784 0426 FB62     		str	r3, [r7, #44]
 604:Libraries/uC-LIB/lib_mem.c **** 
 605:Libraries/uC-LIB/lib_mem.c **** 
 606:Libraries/uC-LIB/lib_mem.c **** #if (LIB_MEM_CFG_ARG_CHK_EXT_EN == DEF_ENABLED)                     /* ------------- VALIDATE RTN E
 607:Libraries/uC-LIB/lib_mem.c ****     if (perr == (LIB_ERR *)0) {
 608:Libraries/uC-LIB/lib_mem.c ****         CPU_SW_EXCEPTION((void *)0);
 609:Libraries/uC-LIB/lib_mem.c ****     }
 610:Libraries/uC-LIB/lib_mem.c **** #endif
 611:Libraries/uC-LIB/lib_mem.c **** 
 612:Libraries/uC-LIB/lib_mem.c ****                                                                     /* ------------ VALIDATE RTN OC
 613:Libraries/uC-LIB/lib_mem.c ****     if (poctets_reqd == (CPU_SIZE_T *) 0) {                         /* If NOT avail, ...           
 785              		.loc 1 613 0
 786 0428 7B68     		ldr	r3, [r7, #4]
 787 042a 002B     		cmp	r3, #0
 788 042c 02D1     		bne	.L53
 614:Libraries/uC-LIB/lib_mem.c ****         poctets_reqd  = (CPU_SIZE_T *)&octets_reqd_unused;          /* ... re-cfg NULL rtn ptr to u
 789              		.loc 1 614 0
 790 042e 07F11403 		add	r3, r7, #20
 791 0432 7B60     		str	r3, [r7, #4]
 792              	.L53:
 615:Libraries/uC-LIB/lib_mem.c ****        (void)&octets_reqd_unused;                                   /* Prevent possible 'variable u
 616:Libraries/uC-LIB/lib_mem.c ****     }
 617:Libraries/uC-LIB/lib_mem.c ****    *poctets_reqd = 0u;                                              /* Init octets req'd for err (s
 793              		.loc 1 617 0
 794 0434 7B68     		ldr	r3, [r7, #4]
 795 0436 4FF00002 		mov	r2, #0
 796 043a 1A60     		str	r2, [r3, #0]
 618:Libraries/uC-LIB/lib_mem.c **** 
 619:Libraries/uC-LIB/lib_mem.c **** 
 620:Libraries/uC-LIB/lib_mem.c **** #if (LIB_MEM_CFG_ARG_CHK_EXT_EN == DEF_ENABLED)                     /* ------------ VALIDATE HEAP M
 621:Libraries/uC-LIB/lib_mem.c ****     if (size < 1) {
 622:Libraries/uC-LIB/lib_mem.c ****        *perr = LIB_MEM_ERR_INVALID_MEM_SIZE;
 623:Libraries/uC-LIB/lib_mem.c ****         return ((void *)0);
 624:Libraries/uC-LIB/lib_mem.c ****     }
 625:Libraries/uC-LIB/lib_mem.c **** 
 626:Libraries/uC-LIB/lib_mem.c ****     if (align < 1) {
 627:Libraries/uC-LIB/lib_mem.c ****        *perr = LIB_MEM_ERR_INVALID_MEM_ALIGN;
 628:Libraries/uC-LIB/lib_mem.c ****         return ((void *)0);
 629:Libraries/uC-LIB/lib_mem.c ****     }
 630:Libraries/uC-LIB/lib_mem.c **** #endif
 631:Libraries/uC-LIB/lib_mem.c **** 
 632:Libraries/uC-LIB/lib_mem.c ****                                                                     /* -------------- ALLOC HEAP ME
 633:Libraries/uC-LIB/lib_mem.c ****     pmem_pool_heap = &Mem_PoolHeap;
 797              		.loc 1 633 0
 798 043c 40F20003 		movw	r3, #:lower16:Mem_PoolHeap
 799 0440 C0F20003 		movt	r3, #:upper16:Mem_PoolHeap
 800 0444 BB62     		str	r3, [r7, #40]
 634:Libraries/uC-LIB/lib_mem.c **** 
 635:Libraries/uC-LIB/lib_mem.c ****     CPU_CRITICAL_ENTER();
 801              		.loc 1 635 0
 802 0446 FFF7FEFF 		bl	CPU_SR_Save
 803 044a F862     		str	r0, [r7, #44]
 804 044c FFF7FEFF 		bl	CPU_IntDisMeasStart
 636:Libraries/uC-LIB/lib_mem.c **** 
 637:Libraries/uC-LIB/lib_mem.c ****     pmem_addr = pmem_pool_heap->SegAddrNextAvail;
 805              		.loc 1 637 0
 806 0450 BB6A     		ldr	r3, [r7, #40]
 807 0452 9B6B     		ldr	r3, [r3, #56]
 808 0454 7B62     		str	r3, [r7, #36]
 638:Libraries/uC-LIB/lib_mem.c ****     size_rem  = pmem_pool_heap->SegSizeRem;
 809              		.loc 1 638 0
 810 0456 BB6A     		ldr	r3, [r7, #40]
 811 0458 1B6C     		ldr	r3, [r3, #64]
 812 045a 3B62     		str	r3, [r7, #32]
 639:Libraries/uC-LIB/lib_mem.c ****     size_req  = Mem_PoolSegCalcTotSize(pmem_addr,
 813              		.loc 1 639 0
 814 045c 786A     		ldr	r0, [r7, #36]
 815 045e 4FF00101 		mov	r1, #1
 816 0462 FA68     		ldr	r2, [r7, #12]
 817 0464 BB68     		ldr	r3, [r7, #8]
 818 0466 00F029FB 		bl	Mem_PoolSegCalcTotSize
 819 046a F861     		str	r0, [r7, #28]
 640:Libraries/uC-LIB/lib_mem.c ****                                        1u,                          /* Calc alloc for single mem bl
 641:Libraries/uC-LIB/lib_mem.c ****                                        size,
 642:Libraries/uC-LIB/lib_mem.c ****                                        align);
 643:Libraries/uC-LIB/lib_mem.c **** #if (LIB_MEM_CFG_ARG_CHK_EXT_EN == DEF_ENABLED)
 644:Libraries/uC-LIB/lib_mem.c ****     if (size_req < 1) {                                             /* If req'd size ovf, ...      
 645:Libraries/uC-LIB/lib_mem.c ****         CPU_CRITICAL_EXIT();
 646:Libraries/uC-LIB/lib_mem.c ****        *poctets_reqd = size;                                        /* ... rtn add'l heap size need
 647:Libraries/uC-LIB/lib_mem.c ****        *perr         = LIB_MEM_ERR_HEAP_OVF;
 648:Libraries/uC-LIB/lib_mem.c ****         return ((void *)0);
 649:Libraries/uC-LIB/lib_mem.c ****     }
 650:Libraries/uC-LIB/lib_mem.c **** #endif
 651:Libraries/uC-LIB/lib_mem.c **** 
 652:Libraries/uC-LIB/lib_mem.c ****     if (size_req > size_rem) {                                      /* If req'd size > rem heap siz
 820              		.loc 1 652 0
 821 046c FA69     		ldr	r2, [r7, #28]
 822 046e 3B6A     		ldr	r3, [r7, #32]
 823 0470 9A42     		cmp	r2, r3
 824 0472 10D9     		bls	.L54
 653:Libraries/uC-LIB/lib_mem.c ****         CPU_CRITICAL_EXIT();
 825              		.loc 1 653 0
 826 0474 FFF7FEFF 		bl	CPU_IntDisMeasStop
 827 0478 F86A     		ldr	r0, [r7, #44]
 828 047a FFF7FEFF 		bl	CPU_SR_Restore
 654:Libraries/uC-LIB/lib_mem.c ****        *poctets_reqd = size_req - size_rem;                         /* ... rtn add'l heap size need
 829              		.loc 1 654 0
 830 047e FA69     		ldr	r2, [r7, #28]
 831 0480 3B6A     		ldr	r3, [r7, #32]
 832 0482 D21A     		subs	r2, r2, r3
 833 0484 7B68     		ldr	r3, [r7, #4]
 834 0486 1A60     		str	r2, [r3, #0]
 655:Libraries/uC-LIB/lib_mem.c ****        *perr         = LIB_MEM_ERR_HEAP_EMPTY;
 835              		.loc 1 655 0
 836 0488 3B68     		ldr	r3, [r7, #0]
 837 048a 42F2E372 		movw	r2, #10211
 838 048e 1A80     		strh	r2, [r3, #0]	@ movhi
 656:Libraries/uC-LIB/lib_mem.c ****         return ((void *)0);
 839              		.loc 1 656 0
 840 0490 4FF00003 		mov	r3, #0
 841 0494 21E0     		b	.L55
 842              	.L54:
 657:Libraries/uC-LIB/lib_mem.c ****     }
 658:Libraries/uC-LIB/lib_mem.c **** 
 659:Libraries/uC-LIB/lib_mem.c ****     pmem_blk = Mem_PoolSegAlloc(pmem_pool_heap, size, align);
 843              		.loc 1 659 0
 844 0496 B86A     		ldr	r0, [r7, #40]
 845 0498 F968     		ldr	r1, [r7, #12]
 846 049a BA68     		ldr	r2, [r7, #8]
 847 049c 00F052FB 		bl	Mem_PoolSegAlloc
 848 04a0 B861     		str	r0, [r7, #24]
 660:Libraries/uC-LIB/lib_mem.c ****     if (pmem_blk == (void *)0) {                                    /* If mem blk NOT avail from he
 849              		.loc 1 660 0
 850 04a2 BB69     		ldr	r3, [r7, #24]
 851 04a4 002B     		cmp	r3, #0
 852 04a6 0ED1     		bne	.L56
 661:Libraries/uC-LIB/lib_mem.c ****         CPU_CRITICAL_EXIT();
 853              		.loc 1 661 0
 854 04a8 FFF7FEFF 		bl	CPU_IntDisMeasStop
 855 04ac F86A     		ldr	r0, [r7, #44]
 856 04ae FFF7FEFF 		bl	CPU_SR_Restore
 662:Libraries/uC-LIB/lib_mem.c ****        *poctets_reqd = size_req;                                    /* ... rtn add'l heap size need
 857              		.loc 1 662 0
 858 04b2 7B68     		ldr	r3, [r7, #4]
 859 04b4 FA69     		ldr	r2, [r7, #28]
 860 04b6 1A60     		str	r2, [r3, #0]
 663:Libraries/uC-LIB/lib_mem.c ****        *perr         = LIB_MEM_ERR_HEAP_EMPTY;
 861              		.loc 1 663 0
 862 04b8 3B68     		ldr	r3, [r7, #0]
 863 04ba 42F2E372 		movw	r2, #10211
 864 04be 1A80     		strh	r2, [r3, #0]	@ movhi
 664:Libraries/uC-LIB/lib_mem.c ****         return ((void *)0);
 865              		.loc 1 664 0
 866 04c0 4FF00003 		mov	r3, #0
 867 04c4 09E0     		b	.L55
 868              	.L56:
 665:Libraries/uC-LIB/lib_mem.c ****     }
 666:Libraries/uC-LIB/lib_mem.c **** 
 667:Libraries/uC-LIB/lib_mem.c ****     CPU_CRITICAL_EXIT();
 869              		.loc 1 667 0
 870 04c6 FFF7FEFF 		bl	CPU_IntDisMeasStop
 871 04ca F86A     		ldr	r0, [r7, #44]
 872 04cc FFF7FEFF 		bl	CPU_SR_Restore
 668:Libraries/uC-LIB/lib_mem.c **** 
 669:Libraries/uC-LIB/lib_mem.c ****    *perr =  LIB_MEM_ERR_NONE;
 873              		.loc 1 669 0
 874 04d0 3B68     		ldr	r3, [r7, #0]
 875 04d2 42F21072 		movw	r2, #10000
 876 04d6 1A80     		strh	r2, [r3, #0]	@ movhi
 670:Libraries/uC-LIB/lib_mem.c **** 
 671:Libraries/uC-LIB/lib_mem.c ****     return (pmem_blk);
 877              		.loc 1 671 0
 878 04d8 BB69     		ldr	r3, [r7, #24]
 879              	.L55:
 672:Libraries/uC-LIB/lib_mem.c **** }
 880              		.loc 1 672 0
 881 04da 1846     		mov	r0, r3
 882 04dc 07F13007 		add	r7, r7, #48
 883 04e0 BD46     		mov	sp, r7
 884 04e2 80BD     		pop	{r7, pc}
 885              		.cfi_endproc
 886              	.LFE5:
 888              		.align	2
 889              		.global	Mem_PoolClr
 890              		.thumb
 891              		.thumb_func
 893              	Mem_PoolClr:
 894              	.LFB6:
 673:Libraries/uC-LIB/lib_mem.c **** #endif
 674:Libraries/uC-LIB/lib_mem.c **** 
 675:Libraries/uC-LIB/lib_mem.c **** 
 676:Libraries/uC-LIB/lib_mem.c **** /*$PAGE*/
 677:Libraries/uC-LIB/lib_mem.c **** /*
 678:Libraries/uC-LIB/lib_mem.c **** ***************************************************************************************************
 679:Libraries/uC-LIB/lib_mem.c **** *                                            Mem_PoolClr()
 680:Libraries/uC-LIB/lib_mem.c **** *
 681:Libraries/uC-LIB/lib_mem.c **** * Description : Clear a memory pool (see Note #1).
 682:Libraries/uC-LIB/lib_mem.c **** *
 683:Libraries/uC-LIB/lib_mem.c **** * Argument(s) : pmem_pool   Pointer to a memory pool structure to clear (see Note #2).
 684:Libraries/uC-LIB/lib_mem.c **** *
 685:Libraries/uC-LIB/lib_mem.c **** *               perr        Pointer to variable that will receive the return error code from this f
 686:Libraries/uC-LIB/lib_mem.c **** *
 687:Libraries/uC-LIB/lib_mem.c **** *                               LIB_MEM_ERR_NONE                Memory pool successfully cleared.
 688:Libraries/uC-LIB/lib_mem.c **** *                               LIB_MEM_ERR_NULL_PTR            Argument 'pmem_pool' passed a NULL 
 689:Libraries/uC-LIB/lib_mem.c **** *
 690:Libraries/uC-LIB/lib_mem.c **** * Return(s)   : none.
 691:Libraries/uC-LIB/lib_mem.c **** *
 692:Libraries/uC-LIB/lib_mem.c **** * Caller(s)   : Application,
 693:Libraries/uC-LIB/lib_mem.c **** *               Mem_PoolCreate().
 694:Libraries/uC-LIB/lib_mem.c **** *
 695:Libraries/uC-LIB/lib_mem.c **** * Note(s)     : (1) (a) Mem_PoolClr() ONLY clears a memory pool structure's variables & should ONLY
 696:Libraries/uC-LIB/lib_mem.c **** *                       called to initialize a memory pool structure prior to calling Mem_PoolCreat
 697:Libraries/uC-LIB/lib_mem.c **** *
 698:Libraries/uC-LIB/lib_mem.c **** *                   (b) Mem_PoolClr() does NOT deallocate memory from the memory pool or deallocate
 699:Libraries/uC-LIB/lib_mem.c **** *                       memory pool itself & MUST NOT be called after calling Mem_PoolCreate() sinc
 700:Libraries/uC-LIB/lib_mem.c **** *                       this will likely corrupt the memory pool management.
 701:Libraries/uC-LIB/lib_mem.c **** *
 702:Libraries/uC-LIB/lib_mem.c **** *               (2) Assumes 'pmem_pool' points to a valid memory pool (if non-NULL).
 703:Libraries/uC-LIB/lib_mem.c **** ***************************************************************************************************
 704:Libraries/uC-LIB/lib_mem.c **** */
 705:Libraries/uC-LIB/lib_mem.c **** 
 706:Libraries/uC-LIB/lib_mem.c **** #if (LIB_MEM_CFG_ALLOC_EN == DEF_ENABLED)
 707:Libraries/uC-LIB/lib_mem.c **** void  Mem_PoolClr (MEM_POOL  *pmem_pool,
 708:Libraries/uC-LIB/lib_mem.c ****                    LIB_ERR   *perr)
 709:Libraries/uC-LIB/lib_mem.c **** {
 895              		.loc 1 709 0
 896              		.cfi_startproc
 897              		@ args = 0, pretend = 0, frame = 8
 898              		@ frame_needed = 1, uses_anonymous_args = 0
 899              		@ link register save eliminated.
 900 04e4 80B4     		push	{r7}
 901              	.LCFI18:
 902              		.cfi_def_cfa_offset 4
 903              		.cfi_offset 7, -4
 904 04e6 83B0     		sub	sp, sp, #12
 905              	.LCFI19:
 906              		.cfi_def_cfa_offset 16
 907 04e8 00AF     		add	r7, sp, #0
 908              	.LCFI20:
 909              		.cfi_def_cfa_register 7
 910 04ea 7860     		str	r0, [r7, #4]
 911 04ec 3960     		str	r1, [r7, #0]
 710:Libraries/uC-LIB/lib_mem.c **** 
 711:Libraries/uC-LIB/lib_mem.c **** #if (LIB_MEM_CFG_ARG_CHK_EXT_EN == DEF_ENABLED)                 /* -------------- VALIDATE RTN ERR 
 712:Libraries/uC-LIB/lib_mem.c ****     if (perr == (LIB_ERR *)0) {
 713:Libraries/uC-LIB/lib_mem.c ****         CPU_SW_EXCEPTION(;);
 714:Libraries/uC-LIB/lib_mem.c ****     }
 715:Libraries/uC-LIB/lib_mem.c **** #endif
 716:Libraries/uC-LIB/lib_mem.c **** 
 717:Libraries/uC-LIB/lib_mem.c ****                                                                 /* -------------- VALIDATE MEM POOL
 718:Libraries/uC-LIB/lib_mem.c ****     if (pmem_pool == (MEM_POOL *)0) {
 912              		.loc 1 718 0
 913 04ee 7B68     		ldr	r3, [r7, #4]
 914 04f0 002B     		cmp	r3, #0
 915 04f2 04D1     		bne	.L58
 719:Libraries/uC-LIB/lib_mem.c ****        *perr = LIB_MEM_ERR_NULL_PTR;
 916              		.loc 1 719 0
 917 04f4 3B68     		ldr	r3, [r7, #0]
 918 04f6 42F21172 		movw	r2, #10001
 919 04fa 1A80     		strh	r2, [r3, #0]	@ movhi
 720:Libraries/uC-LIB/lib_mem.c ****         return;
 920              		.loc 1 720 0
 921 04fc 49E0     		b	.L57
 922              	.L58:
 721:Libraries/uC-LIB/lib_mem.c ****     }
 722:Libraries/uC-LIB/lib_mem.c **** 
 723:Libraries/uC-LIB/lib_mem.c **** 
 724:Libraries/uC-LIB/lib_mem.c ****     pmem_pool->Type             = (LIB_MEM_TYPE)LIB_MEM_TYPE_NONE;
 923              		.loc 1 724 0
 924 04fe 7A68     		ldr	r2, [r7, #4]
 925 0500 44F64E73 		movw	r3, #20302
 926 0504 C4F24E53 		movt	r3, 17742
 927 0508 1360     		str	r3, [r2, #0]
 725:Libraries/uC-LIB/lib_mem.c ****     pmem_pool->SegPrevPtr       = (MEM_POOL   *)0;
 928              		.loc 1 725 0
 929 050a 7B68     		ldr	r3, [r7, #4]
 930 050c 4FF00002 		mov	r2, #0
 931 0510 5A60     		str	r2, [r3, #4]
 726:Libraries/uC-LIB/lib_mem.c ****     pmem_pool->SegNextPtr       = (MEM_POOL   *)0;
 932              		.loc 1 726 0
 933 0512 7B68     		ldr	r3, [r7, #4]
 934 0514 4FF00002 		mov	r2, #0
 935 0518 9A60     		str	r2, [r3, #8]
 727:Libraries/uC-LIB/lib_mem.c ****     pmem_pool->PoolPrevPtr      = (MEM_POOL   *)0;
 936              		.loc 1 727 0
 937 051a 7B68     		ldr	r3, [r7, #4]
 938 051c 4FF00002 		mov	r2, #0
 939 0520 DA60     		str	r2, [r3, #12]
 728:Libraries/uC-LIB/lib_mem.c ****     pmem_pool->PoolNextPtr      = (MEM_POOL   *)0;
 940              		.loc 1 728 0
 941 0522 7B68     		ldr	r3, [r7, #4]
 942 0524 4FF00002 		mov	r2, #0
 943 0528 1A61     		str	r2, [r3, #16]
 729:Libraries/uC-LIB/lib_mem.c ****     pmem_pool->PoolAddrStart    = (void       *)0;
 944              		.loc 1 729 0
 945 052a 7B68     		ldr	r3, [r7, #4]
 946 052c 4FF00002 		mov	r2, #0
 947 0530 5A61     		str	r2, [r3, #20]
 730:Libraries/uC-LIB/lib_mem.c ****     pmem_pool->PoolAddrEnd      = (void       *)0;
 948              		.loc 1 730 0
 949 0532 7B68     		ldr	r3, [r7, #4]
 950 0534 4FF00002 		mov	r2, #0
 951 0538 9A61     		str	r2, [r3, #24]
 731:Libraries/uC-LIB/lib_mem.c ****     pmem_pool->PoolPtrs         = (void      **)0;
 952              		.loc 1 731 0
 953 053a 7B68     		ldr	r3, [r7, #4]
 954 053c 4FF00002 		mov	r2, #0
 955 0540 DA61     		str	r2, [r3, #28]
 732:Libraries/uC-LIB/lib_mem.c ****     pmem_pool->PoolSize         = (CPU_SIZE_T  )0u;
 956              		.loc 1 732 0
 957 0542 7B68     		ldr	r3, [r7, #4]
 958 0544 4FF00002 		mov	r2, #0
 959 0548 5A62     		str	r2, [r3, #36]
 733:Libraries/uC-LIB/lib_mem.c ****     pmem_pool->BlkAlign         = (CPU_SIZE_T  )0u;
 960              		.loc 1 733 0
 961 054a 7B68     		ldr	r3, [r7, #4]
 962 054c 4FF00002 		mov	r2, #0
 963 0550 1A63     		str	r2, [r3, #48]
 734:Libraries/uC-LIB/lib_mem.c ****     pmem_pool->BlkSize          = (CPU_SIZE_T  )0u;
 964              		.loc 1 734 0
 965 0552 7B68     		ldr	r3, [r7, #4]
 966 0554 4FF00002 		mov	r2, #0
 967 0558 DA62     		str	r2, [r3, #44]
 735:Libraries/uC-LIB/lib_mem.c ****     pmem_pool->BlkNbr           = (CPU_SIZE_T  )0u;
 968              		.loc 1 735 0
 969 055a 7B68     		ldr	r3, [r7, #4]
 970 055c 4FF00002 		mov	r2, #0
 971 0560 9A62     		str	r2, [r3, #40]
 736:Libraries/uC-LIB/lib_mem.c ****     pmem_pool->BlkIx            = (MEM_POOL_IX )0u;
 972              		.loc 1 736 0
 973 0562 7B68     		ldr	r3, [r7, #4]
 974 0564 4FF00002 		mov	r2, #0
 975 0568 1A84     		strh	r2, [r3, #32]	@ movhi
 737:Libraries/uC-LIB/lib_mem.c ****     pmem_pool->SegAddr          = (void       *)0;
 976              		.loc 1 737 0
 977 056a 7B68     		ldr	r3, [r7, #4]
 978 056c 4FF00002 		mov	r2, #0
 979 0570 5A63     		str	r2, [r3, #52]
 738:Libraries/uC-LIB/lib_mem.c ****     pmem_pool->SegAddrNextAvail = (void       *)0;
 980              		.loc 1 738 0
 981 0572 7B68     		ldr	r3, [r7, #4]
 982 0574 4FF00002 		mov	r2, #0
 983 0578 9A63     		str	r2, [r3, #56]
 739:Libraries/uC-LIB/lib_mem.c ****     pmem_pool->SegSizeTot       = (CPU_SIZE_T  )0u;
 984              		.loc 1 739 0
 985 057a 7B68     		ldr	r3, [r7, #4]
 986 057c 4FF00002 		mov	r2, #0
 987 0580 DA63     		str	r2, [r3, #60]
 740:Libraries/uC-LIB/lib_mem.c ****     pmem_pool->SegSizeRem       = (CPU_SIZE_T  )0u;
 988              		.loc 1 740 0
 989 0582 7B68     		ldr	r3, [r7, #4]
 990 0584 4FF00002 		mov	r2, #0
 991 0588 1A64     		str	r2, [r3, #64]
 741:Libraries/uC-LIB/lib_mem.c **** 
 742:Libraries/uC-LIB/lib_mem.c **** 
 743:Libraries/uC-LIB/lib_mem.c ****    *perr = LIB_MEM_ERR_NONE;
 992              		.loc 1 743 0
 993 058a 3B68     		ldr	r3, [r7, #0]
 994 058c 42F21072 		movw	r2, #10000
 995 0590 1A80     		strh	r2, [r3, #0]	@ movhi
 996              	.L57:
 744:Libraries/uC-LIB/lib_mem.c **** }
 997              		.loc 1 744 0
 998 0592 07F10C07 		add	r7, r7, #12
 999 0596 BD46     		mov	sp, r7
 1000 0598 80BC     		pop	{r7}
 1001 059a 7047     		bx	lr
 1002              		.cfi_endproc
 1003              	.LFE6:
 1005              		.align	2
 1006              		.global	Mem_PoolCreate
 1007              		.thumb
 1008              		.thumb_func
 1010              	Mem_PoolCreate:
 1011              	.LFB7:
 745:Libraries/uC-LIB/lib_mem.c **** #endif
 746:Libraries/uC-LIB/lib_mem.c **** 
 747:Libraries/uC-LIB/lib_mem.c **** 
 748:Libraries/uC-LIB/lib_mem.c **** /*$PAGE*/
 749:Libraries/uC-LIB/lib_mem.c **** /*
 750:Libraries/uC-LIB/lib_mem.c **** ***************************************************************************************************
 751:Libraries/uC-LIB/lib_mem.c **** *                                          Mem_PoolCreate()
 752:Libraries/uC-LIB/lib_mem.c **** *
 753:Libraries/uC-LIB/lib_mem.c **** * Description : (1) Create a memory pool :
 754:Libraries/uC-LIB/lib_mem.c **** *
 755:Libraries/uC-LIB/lib_mem.c **** *                   (a) Create    memory pool from heap or dedicated memory
 756:Libraries/uC-LIB/lib_mem.c **** *                   (b) Allocate  memory pool memory blocks
 757:Libraries/uC-LIB/lib_mem.c **** *                   (c) Update    memory pool table
 758:Libraries/uC-LIB/lib_mem.c **** *                   (d) Configure memory pool
 759:Libraries/uC-LIB/lib_mem.c **** *
 760:Libraries/uC-LIB/lib_mem.c **** *
 761:Libraries/uC-LIB/lib_mem.c **** *               (2) Memory pools are indexed by the Memory Segments they use.
 762:Libraries/uC-LIB/lib_mem.c **** *
 763:Libraries/uC-LIB/lib_mem.c **** *                   (a) The memory pool table is composed by a two-dimensional list :
 764:Libraries/uC-LIB/lib_mem.c **** *
 765:Libraries/uC-LIB/lib_mem.c **** *                       (1) Memory segments manage the following memory segment/pool information :
 766:Libraries/uC-LIB/lib_mem.c **** *
 767:Libraries/uC-LIB/lib_mem.c **** *                           (A) Memory segment base           address
 768:Libraries/uC-LIB/lib_mem.c **** *                           (B) Memory segment next available address
 769:Libraries/uC-LIB/lib_mem.c **** *                           (C) Memory segment total     size
 770:Libraries/uC-LIB/lib_mem.c **** *                           (D) Memory segment remaining size
 771:Libraries/uC-LIB/lib_mem.c **** *
 772:Libraries/uC-LIB/lib_mem.c **** *                       (2) Memory pools share memory from memory segments but do NOT manage any me
 773:Libraries/uC-LIB/lib_mem.c **** *                           segment information.  To access the memory segment information, the hea
 774:Libraries/uC-LIB/lib_mem.c **** *                           memory segment must be accessed.
 775:Libraries/uC-LIB/lib_mem.c **** *
 776:Libraries/uC-LIB/lib_mem.c **** *                   (b) In the diagram below, memory pools in vertical columns represent they share
 777:Libraries/uC-LIB/lib_mem.c **** *                       memory segment for the memory blocks they have.  The heads of the memory po
 778:Libraries/uC-LIB/lib_mem.c **** *                       linked horizontally to form a memory pool table.
 779:Libraries/uC-LIB/lib_mem.c **** *
 780:Libraries/uC-LIB/lib_mem.c **** *                       (1) 'Mem_PoolTbl' points to the head of the Memory Pool table.
 781:Libraries/uC-LIB/lib_mem.c **** *
 782:Libraries/uC-LIB/lib_mem.c **** *                       (2) Memory Pools' 'SegPrevPtr'  & 'SegNextPtr'  doubly-link each memory seg
 783:Libraries/uC-LIB/lib_mem.c **** *                           form the list of memory segments.
 784:Libraries/uC-LIB/lib_mem.c **** *
 785:Libraries/uC-LIB/lib_mem.c **** *                       (3) Memory Pools' 'PoolPrevPtr' & 'PoolNextPtr' doubly-link the  memory poo
 786:Libraries/uC-LIB/lib_mem.c **** *                           each memory segment.
 787:Libraries/uC-LIB/lib_mem.c **** *
 788:Libraries/uC-LIB/lib_mem.c **** *                   (c) New memory pools, which do not share a memory segment, are inserted in the 
 789:Libraries/uC-LIB/lib_mem.c **** *                       Segments Primary List.  The point of insertion is such to keep ascended ord
 790:Libraries/uC-LIB/lib_mem.c **** *                       memory segment base address.
 791:Libraries/uC-LIB/lib_mem.c **** *
 792:Libraries/uC-LIB/lib_mem.c **** *                   (d) Memory pool pointers to memory blocks 'PoolPtrs' must be allocated for each
 793:Libraries/uC-LIB/lib_mem.c **** *                       memory pool.  These pointers are stored in the memory pool heap segment 'Me
 794:Libraries/uC-LIB/lib_mem.c **** *
 795:Libraries/uC-LIB/lib_mem.c **** *                       (1) A memory pool can also have its memory blocks allocated from the memory
 796:Libraries/uC-LIB/lib_mem.c **** *                           'pmem_base_addr' must be set to NULL & 'mem_size' must be set to (0) to
 797:Libraries/uC-LIB/lib_mem.c **** *                           memory pool.
 798:Libraries/uC-LIB/lib_mem.c **** *
 799:Libraries/uC-LIB/lib_mem.c **** *
 800:Libraries/uC-LIB/lib_mem.c **** *                                        |                                                         
 801:Libraries/uC-LIB/lib_mem.c **** *                                        |<----------------------- Memory Segments ----------------
 802:Libraries/uC-LIB/lib_mem.c **** *                                        |                         (see Note #2a1)                 
 803:Libraries/uC-LIB/lib_mem.c **** *
 804:Libraries/uC-LIB/lib_mem.c **** *                                 Lowest Memory Segment                                      Highes
 805:Libraries/uC-LIB/lib_mem.c **** *                                     Base Address                                                B
 806:Libraries/uC-LIB/lib_mem.c **** *                                    (see Note #2c)                                              (s
 807:Libraries/uC-LIB/lib_mem.c **** *
 808:Libraries/uC-LIB/lib_mem.c **** *                                           |             SegNextPtr             Heap Memory Pool  
 809:Libraries/uC-LIB/lib_mem.c **** *                                           |          (see Note #2b2)            (see Note #2d)   
 810:Libraries/uC-LIB/lib_mem.c **** *                                           |                     |                                
 811:Libraries/uC-LIB/lib_mem.c **** *                                           v                     |                      |         
 812:Libraries/uC-LIB/lib_mem.c **** *                                                                 |                      v
 813:Libraries/uC-LIB/lib_mem.c **** *        ---          Head of Memory     -------        -------   v    -------        -------      
 814:Libraries/uC-LIB/lib_mem.c **** *         ^             Pool Table   --->|     |------->|     |------->|     |------->|     |------
 815:Libraries/uC-LIB/lib_mem.c **** *         |          (see Note #2b1)     |     |        |     |        |     |        |  H  |      
 816:Libraries/uC-LIB/lib_mem.c **** *         |                              |     |<-------|     |<-------|     |<-------|  E  |<-----
 817:Libraries/uC-LIB/lib_mem.c **** *         |                              |     |        |     |   ^    |     |        |  A  |      
 818:Libraries/uC-LIB/lib_mem.c **** *         |                              |     |        |     |   |    |     |        |  P  |      
 819:Libraries/uC-LIB/lib_mem.c **** *         |                              |     |        |     |   |    |     |        |     |      
 820:Libraries/uC-LIB/lib_mem.c **** *         |                              -------        -------   |    -------        -------      
 821:Libraries/uC-LIB/lib_mem.c **** *         |                                | ^                    |      | ^
 822:Libraries/uC-LIB/lib_mem.c **** *         |                                | |            SegPrevPtr     | |
 823:Libraries/uC-LIB/lib_mem.c **** *         |                                v |         (see Note #2b2)   v |
 824:Libraries/uC-LIB/lib_mem.c **** *         |                              -------                       -------
 825:Libraries/uC-LIB/lib_mem.c **** *                                        |     |                       |     |
 826:Libraries/uC-LIB/lib_mem.c **** *    Memory Pools                        |     |                       |     |
 827:Libraries/uC-LIB/lib_mem.c **** *  (see Note #2a2)                       |     |                       |     |
 828:Libraries/uC-LIB/lib_mem.c **** *                                        |     |                       |     |
 829:Libraries/uC-LIB/lib_mem.c **** *         |                              |     |                       |     |
 830:Libraries/uC-LIB/lib_mem.c **** *         |                              -------                       -------
 831:Libraries/uC-LIB/lib_mem.c **** *         |                                | ^
 832:Libraries/uC-LIB/lib_mem.c **** *         |               PoolNextPtr ---> | | <--- PoolPrevPtr
 833:Libraries/uC-LIB/lib_mem.c **** *         |             (see Note #2b3)    v |    (see Note #2b3)
 834:Libraries/uC-LIB/lib_mem.c **** *         |                              -------
 835:Libraries/uC-LIB/lib_mem.c **** *         |                              |     |
 836:Libraries/uC-LIB/lib_mem.c **** *         |                              |     |
 837:Libraries/uC-LIB/lib_mem.c **** *         |                              |     |
 838:Libraries/uC-LIB/lib_mem.c **** *         |                              |     |
 839:Libraries/uC-LIB/lib_mem.c **** *         v                              |     |
 840:Libraries/uC-LIB/lib_mem.c **** *        ---                             -------
 841:Libraries/uC-LIB/lib_mem.c **** *
 842:Libraries/uC-LIB/lib_mem.c **** *$PAGE*
 843:Libraries/uC-LIB/lib_mem.c **** * Argument(s) : pmem_pool           Pointer to a memory pool structure to create (see Note #3).
 844:Libraries/uC-LIB/lib_mem.c **** *
 845:Libraries/uC-LIB/lib_mem.c **** *               pmem_base_addr      Memory pool base address :
 846:Libraries/uC-LIB/lib_mem.c **** *
 847:Libraries/uC-LIB/lib_mem.c **** *                                       (a)     Null address    Memory pool allocated from general-
 848:Libraries/uC-LIB/lib_mem.c **** *                                       (b) Non-null address    Memory pool allocated from dedicate
 849:Libraries/uC-LIB/lib_mem.c **** *                                                                   specified by its base address.
 850:Libraries/uC-LIB/lib_mem.c **** *
 851:Libraries/uC-LIB/lib_mem.c **** *               mem_size            Size      of memory pool segment          (in octets).
 852:Libraries/uC-LIB/lib_mem.c **** *
 853:Libraries/uC-LIB/lib_mem.c **** *               blk_nbr             Number    of memory pool blocks to create.
 854:Libraries/uC-LIB/lib_mem.c **** *
 855:Libraries/uC-LIB/lib_mem.c **** *               blk_size            Size      of memory pool blocks to create (in octets).
 856:Libraries/uC-LIB/lib_mem.c **** *
 857:Libraries/uC-LIB/lib_mem.c **** *               blk_align           Alignment of memory pool blocks to specific word boundary (in o
 858:Libraries/uC-LIB/lib_mem.c **** *
 859:Libraries/uC-LIB/lib_mem.c **** *               poctets_reqd        Optional pointer to a variable to ... :
 860:Libraries/uC-LIB/lib_mem.c **** *
 861:Libraries/uC-LIB/lib_mem.c **** *                                       (a) Return the number of octets required to successfully
 862:Libraries/uC-LIB/lib_mem.c **** *                                               allocate the memory pool, if any error(s);
 863:Libraries/uC-LIB/lib_mem.c **** *                                       (b) Return 0, otherwise.
 864:Libraries/uC-LIB/lib_mem.c **** *
 865:Libraries/uC-LIB/lib_mem.c **** *               perr        Pointer to variable that will receive the return error code from this f
 866:Libraries/uC-LIB/lib_mem.c **** *
 867:Libraries/uC-LIB/lib_mem.c **** *                               LIB_MEM_ERR_NONE                    Memory pool successfully create
 868:Libraries/uC-LIB/lib_mem.c **** *
 869:Libraries/uC-LIB/lib_mem.c **** *                               LIB_MEM_ERR_HEAP_NOT_FOUND          Heap   segment NOT found.
 870:Libraries/uC-LIB/lib_mem.c **** *                               LIB_MEM_ERR_HEAP_EMPTY              Heap   segment empty; NOT enoug
 871:Libraries/uC-LIB/lib_mem.c **** *                                                                       memory from heap.
 872:Libraries/uC-LIB/lib_mem.c **** *                               LIB_MEM_ERR_HEAP_OVF                Requested memory overflows heap
 873:Libraries/uC-LIB/lib_mem.c **** *                               LIB_MEM_ERR_SEG_EMPTY               Memory segment empty; NOT enoug
 874:Libraries/uC-LIB/lib_mem.c **** *                                                                       memory from segment for mem
 875:Libraries/uC-LIB/lib_mem.c **** *                               LIB_MEM_ERR_SEG_OVF                 Requested memory overflows segm
 876:Libraries/uC-LIB/lib_mem.c **** *
 877:Libraries/uC-LIB/lib_mem.c **** *                               LIB_MEM_ERR_INVALID_SEG_SIZE        Invalid memory segment size.
 878:Libraries/uC-LIB/lib_mem.c **** *                               LIB_MEM_ERR_INVALID_SEG_OVERLAP     Memory segment overlaps other m
 879:Libraries/uC-LIB/lib_mem.c **** *                                                                       segment(s) in memory pool t
 880:Libraries/uC-LIB/lib_mem.c **** *                               LIB_MEM_ERR_INVALID_BLK_NBR         Invalid memory pool number of b
 881:Libraries/uC-LIB/lib_mem.c **** *                               LIB_MEM_ERR_INVALID_BLK_SIZE        Invalid memory pool block size.
 882:Libraries/uC-LIB/lib_mem.c **** *                               LIB_MEM_ERR_INVALID_BLK_ALIGN       Invalid memory pool block align
 883:Libraries/uC-LIB/lib_mem.c **** *
 884:Libraries/uC-LIB/lib_mem.c **** *                                                                   ------- RETURNED BY Mem_PoolClr
 885:Libraries/uC-LIB/lib_mem.c **** *                               LIB_MEM_ERR_NULL_PTR                Argument 'pmem_pool' passed a N
 886:Libraries/uC-LIB/lib_mem.c **** *
 887:Libraries/uC-LIB/lib_mem.c **** * Return(s)   : none.
 888:Libraries/uC-LIB/lib_mem.c **** *
 889:Libraries/uC-LIB/lib_mem.c **** * Caller(s)   : Application.
 890:Libraries/uC-LIB/lib_mem.c **** *
 891:Libraries/uC-LIB/lib_mem.c **** * Note(s)     : (3) Assumes 'pmem_pool' points to a valid memory pool (if non-NULL).
 892:Libraries/uC-LIB/lib_mem.c **** *
 893:Libraries/uC-LIB/lib_mem.c **** *               (4) Pointers to variables that return values MUST be initialized PRIOR to all other
 894:Libraries/uC-LIB/lib_mem.c **** *                   validation or function handling in case of any error(s).
 895:Libraries/uC-LIB/lib_mem.c **** *
 896:Libraries/uC-LIB/lib_mem.c **** *               (5) 'pmem_pool' variables MUST ALWAYS be accessed exclusively in critical sections.
 897:Libraries/uC-LIB/lib_mem.c **** ***************************************************************************************************
 898:Libraries/uC-LIB/lib_mem.c **** */
 899:Libraries/uC-LIB/lib_mem.c **** /*$PAGE*/
 900:Libraries/uC-LIB/lib_mem.c **** #if (LIB_MEM_CFG_ALLOC_EN == DEF_ENABLED)
 901:Libraries/uC-LIB/lib_mem.c **** void  Mem_PoolCreate (MEM_POOL    *pmem_pool,
 902:Libraries/uC-LIB/lib_mem.c ****                       void        *pmem_base_addr,
 903:Libraries/uC-LIB/lib_mem.c ****                       CPU_SIZE_T   mem_size,
 904:Libraries/uC-LIB/lib_mem.c ****                       CPU_SIZE_T   blk_nbr,
 905:Libraries/uC-LIB/lib_mem.c ****                       CPU_SIZE_T   blk_size,
 906:Libraries/uC-LIB/lib_mem.c ****                       CPU_SIZE_T   blk_align,
 907:Libraries/uC-LIB/lib_mem.c ****                       CPU_SIZE_T  *poctets_reqd,
 908:Libraries/uC-LIB/lib_mem.c ****                       LIB_ERR     *perr)
 909:Libraries/uC-LIB/lib_mem.c **** {
 1012              		.loc 1 909 0
 1013              		.cfi_startproc
 1014              		@ args = 16, pretend = 0, frame = 104
 1015              		@ frame_needed = 1, uses_anonymous_args = 0
 1016 059c 80B5     		push	{r7, lr}
 1017              	.LCFI21:
 1018              		.cfi_def_cfa_offset 8
 1019              		.cfi_offset 14, -4
 1020              		.cfi_offset 7, -8
 1021 059e 9AB0     		sub	sp, sp, #104
 1022              	.LCFI22:
 1023              		.cfi_def_cfa_offset 112
 1024 05a0 00AF     		add	r7, sp, #0
 1025              	.LCFI23:
 1026              		.cfi_def_cfa_register 7
 1027 05a2 F860     		str	r0, [r7, #12]
 1028 05a4 B960     		str	r1, [r7, #8]
 1029 05a6 7A60     		str	r2, [r7, #4]
 1030 05a8 3B60     		str	r3, [r7, #0]
 910:Libraries/uC-LIB/lib_mem.c ****     MEM_POOL     *pmem_pool_heap;
 911:Libraries/uC-LIB/lib_mem.c ****     MEM_POOL     *pmem_pool_prev;
 912:Libraries/uC-LIB/lib_mem.c ****     MEM_POOL     *pmem_pool_next;
 913:Libraries/uC-LIB/lib_mem.c ****     MEM_POOL     *pmem_pool_blk;
 914:Libraries/uC-LIB/lib_mem.c ****     void        **ppool_ptr;
 915:Libraries/uC-LIB/lib_mem.c ****     void         *pmem_blk;
 916:Libraries/uC-LIB/lib_mem.c ****     CPU_INT08U   *pmem_addr_ptrs;
 917:Libraries/uC-LIB/lib_mem.c ****     CPU_INT08U   *pmem_addr_pool;
 918:Libraries/uC-LIB/lib_mem.c ****     CPU_INT08U   *pmem_base_addr_start;
 919:Libraries/uC-LIB/lib_mem.c ****     CPU_INT08U   *pmem_base_addr_end;
 920:Libraries/uC-LIB/lib_mem.c ****     CPU_INT08U   *pmem_seg_addr_start;
 921:Libraries/uC-LIB/lib_mem.c ****     CPU_INT08U   *pmem_seg_addr_end;
 922:Libraries/uC-LIB/lib_mem.c ****     CPU_SIZE_T    octets_reqd_unused;
 923:Libraries/uC-LIB/lib_mem.c ****     CPU_SIZE_T    size_tot;
 924:Libraries/uC-LIB/lib_mem.c ****     CPU_SIZE_T    size_tot_ptrs;
 925:Libraries/uC-LIB/lib_mem.c ****     CPU_SIZE_T    size_tot_pool;
 926:Libraries/uC-LIB/lib_mem.c ****     CPU_SIZE_T    size_rem;
 927:Libraries/uC-LIB/lib_mem.c ****     CPU_SIZE_T    size_pool_ptrs;
 928:Libraries/uC-LIB/lib_mem.c ****     CPU_SIZE_T    blk_rem;
 929:Libraries/uC-LIB/lib_mem.c ****     CPU_SIZE_T    i;
 930:Libraries/uC-LIB/lib_mem.c ****     CPU_SR_ALLOC();
 1031              		.loc 1 930 0
 1032 05aa 4FF00003 		mov	r3, #0
 1033 05ae BB64     		str	r3, [r7, #72]
 931:Libraries/uC-LIB/lib_mem.c **** 
 932:Libraries/uC-LIB/lib_mem.c **** 
 933:Libraries/uC-LIB/lib_mem.c **** #if (LIB_MEM_CFG_ARG_CHK_EXT_EN == DEF_ENABLED)                     /* ------------- VALIDATE RTN E
 934:Libraries/uC-LIB/lib_mem.c ****     if (perr == (LIB_ERR *)0) {
 935:Libraries/uC-LIB/lib_mem.c ****         CPU_SW_EXCEPTION(;);
 936:Libraries/uC-LIB/lib_mem.c ****     }
 937:Libraries/uC-LIB/lib_mem.c **** #endif
 938:Libraries/uC-LIB/lib_mem.c **** 
 939:Libraries/uC-LIB/lib_mem.c ****                                                                     /* ------------ VALIDATE RTN OC
 940:Libraries/uC-LIB/lib_mem.c ****     if (poctets_reqd == (CPU_SIZE_T *) 0) {                         /* If NOT avail, ...           
 1034              		.loc 1 940 0
 1035 05b0 BB6F     		ldr	r3, [r7, #120]
 1036 05b2 002B     		cmp	r3, #0
 1037 05b4 02D1     		bne	.L61
 941:Libraries/uC-LIB/lib_mem.c ****         poctets_reqd  = (CPU_SIZE_T *)&octets_reqd_unused;          /* ... re-cfg NULL rtn ptr to u
 1038              		.loc 1 941 0
 1039 05b6 07F11403 		add	r3, r7, #20
 1040 05ba BB67     		str	r3, [r7, #120]
 1041              	.L61:
 942:Libraries/uC-LIB/lib_mem.c ****        (void)&octets_reqd_unused;                                   /* Prevent possible 'variable u
 943:Libraries/uC-LIB/lib_mem.c ****     }
 944:Libraries/uC-LIB/lib_mem.c ****    *poctets_reqd = 0u;                                              /* Init octets req'd for err (s
 1042              		.loc 1 944 0
 1043 05bc BB6F     		ldr	r3, [r7, #120]
 1044 05be 4FF00002 		mov	r2, #0
 1045 05c2 1A60     		str	r2, [r3, #0]
 945:Libraries/uC-LIB/lib_mem.c **** 
 946:Libraries/uC-LIB/lib_mem.c **** 
 947:Libraries/uC-LIB/lib_mem.c **** 
 948:Libraries/uC-LIB/lib_mem.c ****     Mem_PoolClr(pmem_pool, perr);                                   /* Init mem pool     for err (s
 1046              		.loc 1 948 0
 1047 05c4 F868     		ldr	r0, [r7, #12]
 1048 05c6 F96F     		ldr	r1, [r7, #124]
 1049 05c8 FFF7FEFF 		bl	Mem_PoolClr
 949:Libraries/uC-LIB/lib_mem.c ****     if (*perr != LIB_MEM_ERR_NONE) {
 1050              		.loc 1 949 0
 1051 05cc FB6F     		ldr	r3, [r7, #124]
 1052 05ce 1A88     		ldrh	r2, [r3, #0]
 1053 05d0 42F21073 		movw	r3, #10000
 1054 05d4 9A42     		cmp	r2, r3
 1055 05d6 40F0E081 		bne	.L92
 1056              	.L62:
 950:Libraries/uC-LIB/lib_mem.c ****          return;
 951:Libraries/uC-LIB/lib_mem.c ****     }
 952:Libraries/uC-LIB/lib_mem.c **** 
 953:Libraries/uC-LIB/lib_mem.c **** 
 954:Libraries/uC-LIB/lib_mem.c ****                                                                     /* ----------- VALIDATE MEM POO
 955:Libraries/uC-LIB/lib_mem.c **** #if (LIB_MEM_CFG_ARG_CHK_EXT_EN == DEF_ENABLED)
 956:Libraries/uC-LIB/lib_mem.c ****     if (pmem_base_addr != (void *)0) {
 957:Libraries/uC-LIB/lib_mem.c ****         if (mem_size < 1) {
 958:Libraries/uC-LIB/lib_mem.c ****            *perr = LIB_MEM_ERR_INVALID_SEG_SIZE;
 959:Libraries/uC-LIB/lib_mem.c ****             return;
 960:Libraries/uC-LIB/lib_mem.c ****         }
 961:Libraries/uC-LIB/lib_mem.c ****     }
 962:Libraries/uC-LIB/lib_mem.c **** 
 963:Libraries/uC-LIB/lib_mem.c ****     if (blk_nbr < 1) {
 964:Libraries/uC-LIB/lib_mem.c ****        *perr = LIB_MEM_ERR_INVALID_BLK_NBR;
 965:Libraries/uC-LIB/lib_mem.c ****         return;
 966:Libraries/uC-LIB/lib_mem.c ****     }
 967:Libraries/uC-LIB/lib_mem.c **** 
 968:Libraries/uC-LIB/lib_mem.c ****     if (blk_size < 1) {
 969:Libraries/uC-LIB/lib_mem.c ****        *perr = LIB_MEM_ERR_INVALID_BLK_SIZE;
 970:Libraries/uC-LIB/lib_mem.c ****         return;
 971:Libraries/uC-LIB/lib_mem.c ****     }
 972:Libraries/uC-LIB/lib_mem.c **** 
 973:Libraries/uC-LIB/lib_mem.c ****     if (blk_align < 1) {
 974:Libraries/uC-LIB/lib_mem.c ****        *perr = LIB_MEM_ERR_INVALID_BLK_ALIGN;
 975:Libraries/uC-LIB/lib_mem.c ****         return;
 976:Libraries/uC-LIB/lib_mem.c ****     }
 977:Libraries/uC-LIB/lib_mem.c **** #endif
 978:Libraries/uC-LIB/lib_mem.c **** 
 979:Libraries/uC-LIB/lib_mem.c **** 
 980:Libraries/uC-LIB/lib_mem.c ****                                                                     /* ------------ VALIDATE MEM PO
 981:Libraries/uC-LIB/lib_mem.c ****     if (Mem_PoolTbl == (MEM_POOL *)0) {
 1057              		.loc 1 981 0
 1058 05da 40F20003 		movw	r3, #:lower16:Mem_PoolTbl
 1059 05de C0F20003 		movt	r3, #:upper16:Mem_PoolTbl
 1060 05e2 1B68     		ldr	r3, [r3, #0]
 1061 05e4 002B     		cmp	r3, #0
 1062 05e6 04D1     		bne	.L64
 982:Libraries/uC-LIB/lib_mem.c ****        *perr = LIB_MEM_ERR_HEAP_NOT_FOUND;
 1063              		.loc 1 982 0
 1064 05e8 FB6F     		ldr	r3, [r7, #124]
 1065 05ea 42F2E272 		movw	r2, #10210
 1066 05ee 1A80     		strh	r2, [r3, #0]	@ movhi
 983:Libraries/uC-LIB/lib_mem.c ****         return;
 1067              		.loc 1 983 0
 1068 05f0 D4E1     		b	.L60
 1069              	.L64:
 984:Libraries/uC-LIB/lib_mem.c ****     }
 985:Libraries/uC-LIB/lib_mem.c **** 
 986:Libraries/uC-LIB/lib_mem.c **** 
 987:Libraries/uC-LIB/lib_mem.c **** 
 988:Libraries/uC-LIB/lib_mem.c **** /*$PAGE*/
 989:Libraries/uC-LIB/lib_mem.c ****                                                                     /* ---------------- CREATE MEM 
 990:Libraries/uC-LIB/lib_mem.c ****     pmem_pool_heap = (MEM_POOL *)&Mem_PoolHeap;
 1070              		.loc 1 990 0
 1071 05f2 40F20003 		movw	r3, #:lower16:Mem_PoolHeap
 1072 05f6 C0F20003 		movt	r3, #:upper16:Mem_PoolHeap
 1073 05fa 7B64     		str	r3, [r7, #68]
 991:Libraries/uC-LIB/lib_mem.c ****     size_tot       = (CPU_SIZE_T) 0u;
 1074              		.loc 1 991 0
 1075 05fc 4FF00003 		mov	r3, #0
 1076 0600 7B65     		str	r3, [r7, #84]
 992:Libraries/uC-LIB/lib_mem.c **** 
 993:Libraries/uC-LIB/lib_mem.c ****     CPU_CRITICAL_ENTER();
 1077              		.loc 1 993 0
 1078 0602 FFF7FEFF 		bl	CPU_SR_Save
 1079 0606 B864     		str	r0, [r7, #72]
 1080 0608 FFF7FEFF 		bl	CPU_IntDisMeasStart
 994:Libraries/uC-LIB/lib_mem.c **** 
 995:Libraries/uC-LIB/lib_mem.c ****     if (pmem_base_addr == (void *)0) {                              /* If no base addr, cfg mem poo
 1081              		.loc 1 995 0
 1082 060c BB68     		ldr	r3, [r7, #8]
 1083 060e 002B     		cmp	r3, #0
 1084 0610 37D1     		bne	.L65
 996:Libraries/uC-LIB/lib_mem.c ****         pmem_pool_blk   =  pmem_pool_heap;
 1085              		.loc 1 996 0
 1086 0612 7B6C     		ldr	r3, [r7, #68]
 1087 0614 FB65     		str	r3, [r7, #92]
 997:Libraries/uC-LIB/lib_mem.c ****         pmem_pool_prev  =  pmem_pool_heap;
 1088              		.loc 1 997 0
 1089 0616 7B6C     		ldr	r3, [r7, #68]
 1090 0618 7B66     		str	r3, [r7, #100]
 998:Libraries/uC-LIB/lib_mem.c ****         pmem_pool_next  =  pmem_pool_heap;
 1091              		.loc 1 998 0
 1092 061a 7B6C     		ldr	r3, [r7, #68]
 1093 061c 3B66     		str	r3, [r7, #96]
 999:Libraries/uC-LIB/lib_mem.c **** 
1000:Libraries/uC-LIB/lib_mem.c ****                                                                     /* --------------- VALIDATE MEM
1001:Libraries/uC-LIB/lib_mem.c ****                                                                     /* Calc tot mem   size for mem 
1002:Libraries/uC-LIB/lib_mem.c ****         pmem_addr_ptrs  = (CPU_INT08U *)pmem_pool_heap->SegAddrNextAvail;
 1094              		.loc 1 1002 0
 1095 061e 7B6C     		ldr	r3, [r7, #68]
 1096 0620 9B6B     		ldr	r3, [r3, #56]
 1097 0622 3B64     		str	r3, [r7, #64]
1003:Libraries/uC-LIB/lib_mem.c ****         size_tot_ptrs   =  Mem_PoolSegCalcTotSize((void     *)pmem_addr_ptrs,
 1098              		.loc 1 1003 0
 1099 0624 386C     		ldr	r0, [r7, #64]
 1100 0626 3968     		ldr	r1, [r7, #0]
 1101 0628 4FF00402 		mov	r2, #4
 1102 062c 4FF00403 		mov	r3, #4
 1103 0630 00F044FA 		bl	Mem_PoolSegCalcTotSize
 1104 0634 F863     		str	r0, [r7, #60]
1004:Libraries/uC-LIB/lib_mem.c ****                                                   (CPU_SIZE_T)blk_nbr,
1005:Libraries/uC-LIB/lib_mem.c ****                                                   (CPU_SIZE_T)sizeof(void *),
1006:Libraries/uC-LIB/lib_mem.c ****                                                   (CPU_SIZE_T)sizeof(void *));
1007:Libraries/uC-LIB/lib_mem.c **** #if (LIB_MEM_CFG_ARG_CHK_EXT_EN == DEF_ENABLED)
1008:Libraries/uC-LIB/lib_mem.c ****         if (size_tot_ptrs < 1) {                                    /* If heap ovf, ...            
1009:Libraries/uC-LIB/lib_mem.c ****             CPU_CRITICAL_EXIT();
1010:Libraries/uC-LIB/lib_mem.c ****            *perr = LIB_MEM_ERR_HEAP_OVF;                            /* ... rtn err but add'l heap s
1011:Libraries/uC-LIB/lib_mem.c ****             return;
1012:Libraries/uC-LIB/lib_mem.c ****         }
1013:Libraries/uC-LIB/lib_mem.c **** #endif
1014:Libraries/uC-LIB/lib_mem.c ****                                                                     /* Calc tot mem   size for mem 
1015:Libraries/uC-LIB/lib_mem.c ****         pmem_addr_pool  =  pmem_addr_ptrs + size_tot_ptrs;          /* Adj next avail addr for mem 
 1105              		.loc 1 1015 0
 1106 0636 3A6C     		ldr	r2, [r7, #64]
 1107 0638 FB6B     		ldr	r3, [r7, #60]
 1108 063a D318     		adds	r3, r2, r3
 1109 063c BB65     		str	r3, [r7, #88]
1016:Libraries/uC-LIB/lib_mem.c ****         size_tot_pool   =  Mem_PoolSegCalcTotSize((void     *)pmem_addr_pool,
 1110              		.loc 1 1016 0
 1111 063e B86D     		ldr	r0, [r7, #88]
 1112 0640 3968     		ldr	r1, [r7, #0]
 1113 0642 3A6F     		ldr	r2, [r7, #112]
 1114 0644 7B6F     		ldr	r3, [r7, #116]
 1115 0646 00F039FA 		bl	Mem_PoolSegCalcTotSize
 1116 064a 3865     		str	r0, [r7, #80]
1017:Libraries/uC-LIB/lib_mem.c ****                                                   (CPU_SIZE_T)blk_nbr,
1018:Libraries/uC-LIB/lib_mem.c ****                                                   (CPU_SIZE_T)blk_size,
1019:Libraries/uC-LIB/lib_mem.c ****                                                   (CPU_SIZE_T)blk_align);
1020:Libraries/uC-LIB/lib_mem.c **** #if (LIB_MEM_CFG_ARG_CHK_EXT_EN == DEF_ENABLED)
1021:Libraries/uC-LIB/lib_mem.c ****         if (size_tot_pool < 1) {                                    /* If heap ovf, ...            
1022:Libraries/uC-LIB/lib_mem.c ****             CPU_CRITICAL_EXIT();
1023:Libraries/uC-LIB/lib_mem.c ****            *perr = LIB_MEM_ERR_HEAP_OVF;                            /* ... rtn err but add'l heap s
1024:Libraries/uC-LIB/lib_mem.c ****             return;
1025:Libraries/uC-LIB/lib_mem.c ****         }
1026:Libraries/uC-LIB/lib_mem.c **** #endif
1027:Libraries/uC-LIB/lib_mem.c **** 
1028:Libraries/uC-LIB/lib_mem.c ****         size_tot = size_tot_ptrs + size_tot_pool;
 1117              		.loc 1 1028 0
 1118 064c FA6B     		ldr	r2, [r7, #60]
 1119 064e 3B6D     		ldr	r3, [r7, #80]
 1120 0650 D318     		adds	r3, r2, r3
 1121 0652 7B65     		str	r3, [r7, #84]
1029:Libraries/uC-LIB/lib_mem.c **** 
1030:Libraries/uC-LIB/lib_mem.c **** #if (LIB_MEM_CFG_ARG_CHK_EXT_EN == DEF_ENABLED)
1031:Libraries/uC-LIB/lib_mem.c ****         if ((size_tot < size_tot_ptrs) ||                           /* If heap ovf, ...            
1032:Libraries/uC-LIB/lib_mem.c ****             (size_tot < size_tot_pool)) {
1033:Libraries/uC-LIB/lib_mem.c ****             CPU_CRITICAL_EXIT();
1034:Libraries/uC-LIB/lib_mem.c ****            *perr = LIB_MEM_ERR_HEAP_OVF;                            /* ... rtn err but add'l heap s
1035:Libraries/uC-LIB/lib_mem.c ****             return;
1036:Libraries/uC-LIB/lib_mem.c ****         }
1037:Libraries/uC-LIB/lib_mem.c **** #endif
1038:Libraries/uC-LIB/lib_mem.c **** 
1039:Libraries/uC-LIB/lib_mem.c ****         size_rem = pmem_pool_heap->SegSizeRem;
 1122              		.loc 1 1039 0
 1123 0654 7B6C     		ldr	r3, [r7, #68]
 1124 0656 1B6C     		ldr	r3, [r3, #64]
 1125 0658 BB63     		str	r3, [r7, #56]
1040:Libraries/uC-LIB/lib_mem.c ****         if (size_tot > size_rem) {                                  /* If tot size > rem  size, ...
 1126              		.loc 1 1040 0
 1127 065a 7A6D     		ldr	r2, [r7, #84]
 1128 065c BB6B     		ldr	r3, [r7, #56]
 1129 065e 9A42     		cmp	r2, r3
 1130 0660 40F2C180 		bls	.L66
1041:Libraries/uC-LIB/lib_mem.c ****             CPU_CRITICAL_EXIT();
 1131              		.loc 1 1041 0
 1132 0664 FFF7FEFF 		bl	CPU_IntDisMeasStop
 1133 0668 B86C     		ldr	r0, [r7, #72]
 1134 066a FFF7FEFF 		bl	CPU_SR_Restore
1042:Libraries/uC-LIB/lib_mem.c ****            *poctets_reqd = size_tot - size_rem;                     /* ... rtn add'l heap size need
 1135              		.loc 1 1042 0
 1136 066e 7A6D     		ldr	r2, [r7, #84]
 1137 0670 BB6B     		ldr	r3, [r7, #56]
 1138 0672 D21A     		subs	r2, r2, r3
 1139 0674 BB6F     		ldr	r3, [r7, #120]
 1140 0676 1A60     		str	r2, [r3, #0]
1043:Libraries/uC-LIB/lib_mem.c ****            *perr         = LIB_MEM_ERR_HEAP_EMPTY;
 1141              		.loc 1 1043 0
 1142 0678 FB6F     		ldr	r3, [r7, #124]
 1143 067a 42F2E372 		movw	r2, #10211
 1144 067e 1A80     		strh	r2, [r3, #0]	@ movhi
1044:Libraries/uC-LIB/lib_mem.c ****             return;
 1145              		.loc 1 1044 0
 1146 0680 8CE1     		b	.L60
 1147              	.L65:
1045:Libraries/uC-LIB/lib_mem.c ****         }
1046:Libraries/uC-LIB/lib_mem.c **** 
1047:Libraries/uC-LIB/lib_mem.c **** /*$PAGE*/
1048:Libraries/uC-LIB/lib_mem.c ****     } else {                                                        /* Else cfg mem pool from dedic
1049:Libraries/uC-LIB/lib_mem.c ****                                                                     /* -------- SRCH ALL MEM SEGS F
1050:Libraries/uC-LIB/lib_mem.c ****         pmem_base_addr_start = (CPU_INT08U *)pmem_base_addr;
 1148              		.loc 1 1050 0
 1149 0682 BB68     		ldr	r3, [r7, #8]
 1150 0684 7B63     		str	r3, [r7, #52]
1051:Libraries/uC-LIB/lib_mem.c ****         pmem_base_addr_end   = (CPU_INT08U *)pmem_base_addr + mem_size - 1;
 1151              		.loc 1 1051 0
 1152 0686 7B68     		ldr	r3, [r7, #4]
 1153 0688 03F1FF33 		add	r3, r3, #-1
 1154 068c BA68     		ldr	r2, [r7, #8]
 1155 068e D318     		adds	r3, r2, r3
 1156 0690 3B63     		str	r3, [r7, #48]
1052:Libraries/uC-LIB/lib_mem.c **** 
1053:Libraries/uC-LIB/lib_mem.c **** #if (LIB_MEM_CFG_ARG_CHK_EXT_EN == DEF_ENABLED)
1054:Libraries/uC-LIB/lib_mem.c ****         if (pmem_base_addr_end < pmem_base_addr_start) {            /* Chk ovf of end addr.        
1055:Libraries/uC-LIB/lib_mem.c ****             CPU_CRITICAL_EXIT();
1056:Libraries/uC-LIB/lib_mem.c ****            *perr = LIB_MEM_ERR_INVALID_BLK_ADDR;
1057:Libraries/uC-LIB/lib_mem.c ****             return;
1058:Libraries/uC-LIB/lib_mem.c ****         }
1059:Libraries/uC-LIB/lib_mem.c **** #endif
1060:Libraries/uC-LIB/lib_mem.c **** 
1061:Libraries/uC-LIB/lib_mem.c ****         pmem_pool_blk  = (MEM_POOL *)0;
 1157              		.loc 1 1061 0
 1158 0692 4FF00003 		mov	r3, #0
 1159 0696 FB65     		str	r3, [r7, #92]
1062:Libraries/uC-LIB/lib_mem.c ****         pmem_pool_prev = (MEM_POOL *)0;
 1160              		.loc 1 1062 0
 1161 0698 4FF00003 		mov	r3, #0
 1162 069c 7B66     		str	r3, [r7, #100]
1063:Libraries/uC-LIB/lib_mem.c ****         pmem_pool_next =  Mem_PoolTbl;
 1163              		.loc 1 1063 0
 1164 069e 40F20003 		movw	r3, #:lower16:Mem_PoolTbl
 1165 06a2 C0F20003 		movt	r3, #:upper16:Mem_PoolTbl
 1166 06a6 1B68     		ldr	r3, [r3, #0]
 1167 06a8 3B66     		str	r3, [r7, #96]
1064:Libraries/uC-LIB/lib_mem.c **** 
1065:Libraries/uC-LIB/lib_mem.c ****         while (pmem_pool_next != (MEM_POOL *)0) {                   /* Srch tbl for mem seg with sa
 1168              		.loc 1 1065 0
 1169 06aa 44E0     		b	.L67
 1170              	.L75:
1066:Libraries/uC-LIB/lib_mem.c **** 
1067:Libraries/uC-LIB/lib_mem.c ****             if ((pmem_base_addr == pmem_pool_next->SegAddr) &&      /* If same base addr/size found
 1171              		.loc 1 1067 0
 1172 06ac 3B6E     		ldr	r3, [r7, #96]
 1173 06ae 5A6B     		ldr	r2, [r3, #52]
 1174 06b0 BB68     		ldr	r3, [r7, #8]
 1175 06b2 9A42     		cmp	r2, r3
 1176 06b4 09D1     		bne	.L68
1068:Libraries/uC-LIB/lib_mem.c ****                 (mem_size       == pmem_pool_next->SegSizeTot)) {
 1177              		.loc 1 1068 0 discriminator 1
 1178 06b6 3B6E     		ldr	r3, [r7, #96]
 1179 06b8 DA6B     		ldr	r2, [r3, #60]
1067:Libraries/uC-LIB/lib_mem.c ****             if ((pmem_base_addr == pmem_pool_next->SegAddr) &&      /* If same base addr/size found
 1180              		.loc 1 1067 0 discriminator 1
 1181 06ba 7B68     		ldr	r3, [r7, #4]
 1182 06bc 9A42     		cmp	r2, r3
 1183 06be 04D1     		bne	.L68
1069:Libraries/uC-LIB/lib_mem.c **** 
1070:Libraries/uC-LIB/lib_mem.c ****                  pmem_pool_blk   = pmem_pool_next;
 1184              		.loc 1 1070 0
 1185 06c0 3B6E     		ldr	r3, [r7, #96]
 1186 06c2 FB65     		str	r3, [r7, #92]
1071:Libraries/uC-LIB/lib_mem.c ****                  pmem_pool_prev  = pmem_pool_next;
 1187              		.loc 1 1071 0
 1188 06c4 3B6E     		ldr	r3, [r7, #96]
 1189 06c6 7B66     		str	r3, [r7, #100]
1072:Libraries/uC-LIB/lib_mem.c ****                  break;                                             /* ... prev mem seg    found in
 1190              		.loc 1 1072 0
 1191 06c8 3AE0     		b	.L69
 1192              	.L68:
1073:Libraries/uC-LIB/lib_mem.c **** 
1074:Libraries/uC-LIB/lib_mem.c ****             } else {
1075:Libraries/uC-LIB/lib_mem.c ****                 pmem_seg_addr_start = (CPU_INT08U *)pmem_pool_next->SegAddr;
 1193              		.loc 1 1075 0
 1194 06ca 3B6E     		ldr	r3, [r7, #96]
 1195 06cc 5B6B     		ldr	r3, [r3, #52]
 1196 06ce FB62     		str	r3, [r7, #44]
1076:Libraries/uC-LIB/lib_mem.c ****                 pmem_seg_addr_end   = (CPU_INT08U *)pmem_pool_next->SegAddr + pmem_pool_next->SegSi
 1197              		.loc 1 1076 0
 1198 06d0 3B6E     		ldr	r3, [r7, #96]
 1199 06d2 5A6B     		ldr	r2, [r3, #52]
 1200 06d4 3B6E     		ldr	r3, [r7, #96]
 1201 06d6 DB6B     		ldr	r3, [r3, #60]
 1202 06d8 03F1FF33 		add	r3, r3, #-1
 1203 06dc D318     		adds	r3, r2, r3
 1204 06de BB62     		str	r3, [r7, #40]
1077:Libraries/uC-LIB/lib_mem.c **** 
1078:Libraries/uC-LIB/lib_mem.c ****                                                                     
1079:Libraries/uC-LIB/lib_mem.c ****                 if (pmem_base_addr_end < pmem_seg_addr_start) {     /* If mem seg addr/size prior t
 1205              		.loc 1 1079 0
 1206 06e0 3A6B     		ldr	r2, [r7, #48]
 1207 06e2 FB6A     		ldr	r3, [r7, #44]
 1208 06e4 9A42     		cmp	r2, r3
 1209 06e6 2AD3     		bcc	.L93
 1210              	.L70:
1080:Libraries/uC-LIB/lib_mem.c ****                     break;                                          /* ... new mem seg NOT avail in
1081:Libraries/uC-LIB/lib_mem.c **** 
1082:Libraries/uC-LIB/lib_mem.c ****                                                                     /* If mem seg overlaps prev mem
1083:Libraries/uC-LIB/lib_mem.c ****                 } else if (((pmem_base_addr_start <= pmem_seg_addr_start)  &&
 1211              		.loc 1 1083 0
 1212 06e8 7A6B     		ldr	r2, [r7, #52]
 1213 06ea FB6A     		ldr	r3, [r7, #44]
 1214 06ec 9A42     		cmp	r2, r3
 1215 06ee 03D8     		bhi	.L71
 1216              		.loc 1 1083 0 is_stmt 0 discriminator 1
 1217 06f0 3A6B     		ldr	r2, [r7, #48]
 1218 06f2 FB6A     		ldr	r3, [r7, #44]
 1219 06f4 9A42     		cmp	r2, r3
 1220 06f6 0FD2     		bcs	.L72
 1221              	.L71:
1084:Libraries/uC-LIB/lib_mem.c ****                             (pmem_base_addr_end   >= pmem_seg_addr_start)) ||
 1222              		.loc 1 1084 0 is_stmt 1
 1223 06f8 7A6B     		ldr	r2, [r7, #52]
 1224 06fa FB6A     		ldr	r3, [r7, #44]
 1225 06fc 9A42     		cmp	r2, r3
 1226 06fe 03D3     		bcc	.L73
1085:Libraries/uC-LIB/lib_mem.c ****                            ((pmem_base_addr_start >= pmem_seg_addr_start)  &&
 1227              		.loc 1 1085 0
 1228 0700 3A6B     		ldr	r2, [r7, #48]
 1229 0702 BB6A     		ldr	r3, [r7, #40]
 1230 0704 9A42     		cmp	r2, r3
 1231 0706 07D9     		bls	.L72
 1232              	.L73:
1086:Libraries/uC-LIB/lib_mem.c ****                             (pmem_base_addr_end   <= pmem_seg_addr_end  )) ||
 1233              		.loc 1 1086 0
 1234 0708 7A6B     		ldr	r2, [r7, #52]
 1235 070a BB6A     		ldr	r3, [r7, #40]
 1236 070c 9A42     		cmp	r2, r3
 1237 070e 0DD8     		bhi	.L74
1087:Libraries/uC-LIB/lib_mem.c ****                            ((pmem_base_addr_start <= pmem_seg_addr_end  )  &&
 1238              		.loc 1 1087 0
 1239 0710 3A6B     		ldr	r2, [r7, #48]
 1240 0712 BB6A     		ldr	r3, [r7, #40]
 1241 0714 9A42     		cmp	r2, r3
 1242 0716 09D3     		bcc	.L74
 1243              	.L72:
1088:Libraries/uC-LIB/lib_mem.c ****                             (pmem_base_addr_end   >= pmem_seg_addr_end  ))) {
1089:Libraries/uC-LIB/lib_mem.c ****                     CPU_CRITICAL_EXIT();
 1244              		.loc 1 1089 0
 1245 0718 FFF7FEFF 		bl	CPU_IntDisMeasStop
 1246 071c B86C     		ldr	r0, [r7, #72]
 1247 071e FFF7FEFF 		bl	CPU_SR_Restore
1090:Libraries/uC-LIB/lib_mem.c ****                    *perr = LIB_MEM_ERR_INVALID_SEG_OVERLAP;         /* ... rtn err.                
 1248              		.loc 1 1090 0
 1249 0722 FB6F     		ldr	r3, [r7, #124]
 1250 0724 42F27F72 		movw	r2, #10111
 1251 0728 1A80     		strh	r2, [r3, #0]	@ movhi
1091:Libraries/uC-LIB/lib_mem.c ****                     return;
 1252              		.loc 1 1091 0
 1253 072a 37E1     		b	.L60
 1254              	.L74:
1092:Libraries/uC-LIB/lib_mem.c ****                 }
1093:Libraries/uC-LIB/lib_mem.c ****             }
1094:Libraries/uC-LIB/lib_mem.c ****                                                                     /* If mem seg NOT found, adv to
1095:Libraries/uC-LIB/lib_mem.c ****             pmem_pool_prev = pmem_pool_next;
 1255              		.loc 1 1095 0
 1256 072c 3B6E     		ldr	r3, [r7, #96]
 1257 072e 7B66     		str	r3, [r7, #100]
1096:Libraries/uC-LIB/lib_mem.c ****             pmem_pool_next = pmem_pool_next->SegNextPtr;
 1258              		.loc 1 1096 0
 1259 0730 3B6E     		ldr	r3, [r7, #96]
 1260 0732 9B68     		ldr	r3, [r3, #8]
 1261 0734 3B66     		str	r3, [r7, #96]
 1262              	.L67:
1065:Libraries/uC-LIB/lib_mem.c ****         while (pmem_pool_next != (MEM_POOL *)0) {                   /* Srch tbl for mem seg with sa
 1263              		.loc 1 1065 0 discriminator 1
 1264 0736 3B6E     		ldr	r3, [r7, #96]
 1265 0738 002B     		cmp	r3, #0
 1266 073a B7D1     		bne	.L75
 1267 073c 00E0     		b	.L69
 1268              	.L93:
1080:Libraries/uC-LIB/lib_mem.c ****                     break;                                          /* ... new mem seg NOT avail in
 1269              		.loc 1 1080 0
 1270 073e 00BF     		nop
 1271              	.L69:
1097:Libraries/uC-LIB/lib_mem.c ****         }
1098:Libraries/uC-LIB/lib_mem.c **** 
1099:Libraries/uC-LIB/lib_mem.c ****         if (pmem_pool_blk == (MEM_POOL *)0) {                       /* If mem seg NOT found, add   
 1272              		.loc 1 1099 0
 1273 0740 FB6D     		ldr	r3, [r7, #92]
 1274 0742 002B     		cmp	r3, #0
 1275 0744 0DD1     		bne	.L76
1100:Libraries/uC-LIB/lib_mem.c ****             pmem_pool_blk               = pmem_pool;
 1276              		.loc 1 1100 0
 1277 0746 FB68     		ldr	r3, [r7, #12]
 1278 0748 FB65     		str	r3, [r7, #92]
1101:Libraries/uC-LIB/lib_mem.c ****             pmem_pool->SegAddr          = pmem_base_addr;
 1279              		.loc 1 1101 0
 1280 074a FB68     		ldr	r3, [r7, #12]
 1281 074c BA68     		ldr	r2, [r7, #8]
 1282 074e 5A63     		str	r2, [r3, #52]
1102:Libraries/uC-LIB/lib_mem.c ****             pmem_pool->SegAddrNextAvail = pmem_base_addr;
 1283              		.loc 1 1102 0
 1284 0750 FB68     		ldr	r3, [r7, #12]
 1285 0752 BA68     		ldr	r2, [r7, #8]
 1286 0754 9A63     		str	r2, [r3, #56]
1103:Libraries/uC-LIB/lib_mem.c ****             pmem_pool->SegSizeTot       = mem_size;
 1287              		.loc 1 1103 0
 1288 0756 FB68     		ldr	r3, [r7, #12]
 1289 0758 7A68     		ldr	r2, [r7, #4]
 1290 075a DA63     		str	r2, [r3, #60]
1104:Libraries/uC-LIB/lib_mem.c ****             pmem_pool->SegSizeRem       = mem_size;
 1291              		.loc 1 1104 0
 1292 075c FB68     		ldr	r3, [r7, #12]
 1293 075e 7A68     		ldr	r2, [r7, #4]
 1294 0760 1A64     		str	r2, [r3, #64]
 1295              	.L76:
1105:Libraries/uC-LIB/lib_mem.c ****         }
1106:Libraries/uC-LIB/lib_mem.c **** 
1107:Libraries/uC-LIB/lib_mem.c **** /*$PAGE*/
1108:Libraries/uC-LIB/lib_mem.c ****                                                                     /* --------------- VALIDATE MEM
1109:Libraries/uC-LIB/lib_mem.c ****                                                                     /* Calc tot mem size for mem po
1110:Libraries/uC-LIB/lib_mem.c ****         pmem_addr_ptrs = (CPU_INT08U *)pmem_pool_heap->SegAddrNextAvail;
 1296              		.loc 1 1110 0
 1297 0762 7B6C     		ldr	r3, [r7, #68]
 1298 0764 9B6B     		ldr	r3, [r3, #56]
 1299 0766 3B64     		str	r3, [r7, #64]
1111:Libraries/uC-LIB/lib_mem.c ****         size_tot_ptrs  =  Mem_PoolSegCalcTotSize((void     *)pmem_addr_ptrs,
 1300              		.loc 1 1111 0
 1301 0768 386C     		ldr	r0, [r7, #64]
 1302 076a 3968     		ldr	r1, [r7, #0]
 1303 076c 4FF00402 		mov	r2, #4
 1304 0770 4FF00403 		mov	r3, #4
 1305 0774 00F0A2F9 		bl	Mem_PoolSegCalcTotSize
 1306 0778 F863     		str	r0, [r7, #60]
1112:Libraries/uC-LIB/lib_mem.c ****                                                  (CPU_SIZE_T)blk_nbr,
1113:Libraries/uC-LIB/lib_mem.c ****                                                  (CPU_SIZE_T)sizeof(void *),
1114:Libraries/uC-LIB/lib_mem.c ****                                                  (CPU_SIZE_T)sizeof(void *));
1115:Libraries/uC-LIB/lib_mem.c **** #if (LIB_MEM_CFG_ARG_CHK_EXT_EN == DEF_ENABLED)
1116:Libraries/uC-LIB/lib_mem.c ****         if (size_tot_ptrs < 1) {                                    /* If heap ovf, ...            
1117:Libraries/uC-LIB/lib_mem.c ****             CPU_CRITICAL_EXIT();
1118:Libraries/uC-LIB/lib_mem.c ****            *perr = LIB_MEM_ERR_HEAP_OVF;                            /* ... rtn err but add'l heap s
1119:Libraries/uC-LIB/lib_mem.c ****             return;
1120:Libraries/uC-LIB/lib_mem.c ****         }
1121:Libraries/uC-LIB/lib_mem.c **** #endif
1122:Libraries/uC-LIB/lib_mem.c **** 
1123:Libraries/uC-LIB/lib_mem.c ****         size_rem = pmem_pool_heap->SegSizeRem;
 1307              		.loc 1 1123 0
 1308 077a 7B6C     		ldr	r3, [r7, #68]
 1309 077c 1B6C     		ldr	r3, [r3, #64]
 1310 077e BB63     		str	r3, [r7, #56]
1124:Libraries/uC-LIB/lib_mem.c ****         if (size_tot_ptrs > size_rem) {                             /* If ptr size > rem  size, ...
 1311              		.loc 1 1124 0
 1312 0780 FA6B     		ldr	r2, [r7, #60]
 1313 0782 BB6B     		ldr	r3, [r7, #56]
 1314 0784 9A42     		cmp	r2, r3
 1315 0786 0ED9     		bls	.L77
1125:Libraries/uC-LIB/lib_mem.c ****             CPU_CRITICAL_EXIT();
 1316              		.loc 1 1125 0
 1317 0788 FFF7FEFF 		bl	CPU_IntDisMeasStop
 1318 078c B86C     		ldr	r0, [r7, #72]
 1319 078e FFF7FEFF 		bl	CPU_SR_Restore
1126:Libraries/uC-LIB/lib_mem.c ****            *poctets_reqd = size_tot_ptrs - size_rem;                /* ... rtn add'l heap size need
 1320              		.loc 1 1126 0
 1321 0792 FA6B     		ldr	r2, [r7, #60]
 1322 0794 BB6B     		ldr	r3, [r7, #56]
 1323 0796 D21A     		subs	r2, r2, r3
 1324 0798 BB6F     		ldr	r3, [r7, #120]
 1325 079a 1A60     		str	r2, [r3, #0]
1127:Libraries/uC-LIB/lib_mem.c ****            *perr         = LIB_MEM_ERR_HEAP_EMPTY;
 1326              		.loc 1 1127 0
 1327 079c FB6F     		ldr	r3, [r7, #124]
 1328 079e 42F2E372 		movw	r2, #10211
 1329 07a2 1A80     		strh	r2, [r3, #0]	@ movhi
1128:Libraries/uC-LIB/lib_mem.c ****             return;
 1330              		.loc 1 1128 0
 1331 07a4 FAE0     		b	.L60
 1332              	.L77:
1129:Libraries/uC-LIB/lib_mem.c ****         }
1130:Libraries/uC-LIB/lib_mem.c **** 
1131:Libraries/uC-LIB/lib_mem.c ****                                                                     /* Calc tot mem size for mem bl
1132:Libraries/uC-LIB/lib_mem.c ****         pmem_addr_pool = (CPU_INT08U *)pmem_pool_blk->SegAddrNextAvail;
 1333              		.loc 1 1132 0
 1334 07a6 FB6D     		ldr	r3, [r7, #92]
 1335 07a8 9B6B     		ldr	r3, [r3, #56]
 1336 07aa BB65     		str	r3, [r7, #88]
1133:Libraries/uC-LIB/lib_mem.c ****         size_tot_pool  =  Mem_PoolSegCalcTotSize((void     *)pmem_addr_pool,
 1337              		.loc 1 1133 0
 1338 07ac B86D     		ldr	r0, [r7, #88]
 1339 07ae 3968     		ldr	r1, [r7, #0]
 1340 07b0 3A6F     		ldr	r2, [r7, #112]
 1341 07b2 7B6F     		ldr	r3, [r7, #116]
 1342 07b4 00F082F9 		bl	Mem_PoolSegCalcTotSize
 1343 07b8 3865     		str	r0, [r7, #80]
1134:Libraries/uC-LIB/lib_mem.c ****                                                  (CPU_SIZE_T)blk_nbr,
1135:Libraries/uC-LIB/lib_mem.c ****                                                  (CPU_SIZE_T)blk_size,
1136:Libraries/uC-LIB/lib_mem.c ****                                                  (CPU_SIZE_T)blk_align);
1137:Libraries/uC-LIB/lib_mem.c **** #if (LIB_MEM_CFG_ARG_CHK_EXT_EN == DEF_ENABLED)
1138:Libraries/uC-LIB/lib_mem.c ****         if (size_tot_pool < 1) {                                    /* If seg  ovf, ...            
1139:Libraries/uC-LIB/lib_mem.c ****             CPU_CRITICAL_EXIT();
1140:Libraries/uC-LIB/lib_mem.c ****            *perr = LIB_MEM_ERR_SEG_OVF;                             /* ... rtn err but add'l seg  s
1141:Libraries/uC-LIB/lib_mem.c ****             return;
1142:Libraries/uC-LIB/lib_mem.c ****         }
1143:Libraries/uC-LIB/lib_mem.c **** #endif
1144:Libraries/uC-LIB/lib_mem.c **** 
1145:Libraries/uC-LIB/lib_mem.c ****         size_rem = pmem_pool_blk->SegSizeRem;
 1344              		.loc 1 1145 0
 1345 07ba FB6D     		ldr	r3, [r7, #92]
 1346 07bc 1B6C     		ldr	r3, [r3, #64]
 1347 07be BB63     		str	r3, [r7, #56]
1146:Libraries/uC-LIB/lib_mem.c ****         if (size_tot_pool > size_rem) {                             /* If tot size > rem  size, ...
 1348              		.loc 1 1146 0
 1349 07c0 3A6D     		ldr	r2, [r7, #80]
 1350 07c2 BB6B     		ldr	r3, [r7, #56]
 1351 07c4 9A42     		cmp	r2, r3
 1352 07c6 0ED9     		bls	.L66
1147:Libraries/uC-LIB/lib_mem.c ****             CPU_CRITICAL_EXIT();
 1353              		.loc 1 1147 0
 1354 07c8 FFF7FEFF 		bl	CPU_IntDisMeasStop
 1355 07cc B86C     		ldr	r0, [r7, #72]
 1356 07ce FFF7FEFF 		bl	CPU_SR_Restore
1148:Libraries/uC-LIB/lib_mem.c ****            *poctets_reqd = size_tot_pool - size_rem;                /* ... rtn add'l seg  size need
 1357              		.loc 1 1148 0
 1358 07d2 3A6D     		ldr	r2, [r7, #80]
 1359 07d4 BB6B     		ldr	r3, [r7, #56]
 1360 07d6 D21A     		subs	r2, r2, r3
 1361 07d8 BB6F     		ldr	r3, [r7, #120]
 1362 07da 1A60     		str	r2, [r3, #0]
1149:Libraries/uC-LIB/lib_mem.c ****            *perr         = LIB_MEM_ERR_SEG_EMPTY;
 1363              		.loc 1 1149 0
 1364 07dc FB6F     		ldr	r3, [r7, #124]
 1365 07de 42F2D872 		movw	r2, #10200
 1366 07e2 1A80     		strh	r2, [r3, #0]	@ movhi
1150:Libraries/uC-LIB/lib_mem.c ****             return;
 1367              		.loc 1 1150 0
 1368 07e4 DAE0     		b	.L60
 1369              	.L66:
1151:Libraries/uC-LIB/lib_mem.c ****         }
1152:Libraries/uC-LIB/lib_mem.c ****     }
1153:Libraries/uC-LIB/lib_mem.c **** 
1154:Libraries/uC-LIB/lib_mem.c **** 
1155:Libraries/uC-LIB/lib_mem.c **** /*$PAGE*/
1156:Libraries/uC-LIB/lib_mem.c ****                                                                     /* ---------------- ALLOC MEM B
1157:Libraries/uC-LIB/lib_mem.c ****     size_pool_ptrs =  blk_nbr * sizeof(void *);
 1370              		.loc 1 1157 0
 1371 07e6 3B68     		ldr	r3, [r7, #0]
 1372 07e8 4FEA8303 		lsl	r3, r3, #2
 1373 07ec 7B62     		str	r3, [r7, #36]
1158:Libraries/uC-LIB/lib_mem.c ****                                                                     /* Alloc stk of ptrs for mem bl
1159:Libraries/uC-LIB/lib_mem.c ****     ppool_ptr      = (void **)Mem_PoolSegAlloc((MEM_POOL *)pmem_pool_heap,
 1374              		.loc 1 1159 0
 1375 07ee 786C     		ldr	r0, [r7, #68]
 1376 07f0 796A     		ldr	r1, [r7, #36]
 1377 07f2 4FF00402 		mov	r2, #4
 1378 07f6 00F0A5F9 		bl	Mem_PoolSegAlloc
 1379 07fa 3862     		str	r0, [r7, #32]
1160:Libraries/uC-LIB/lib_mem.c ****                                                (CPU_SIZE_T)size_pool_ptrs,
1161:Libraries/uC-LIB/lib_mem.c ****                                                (CPU_SIZE_T)sizeof(void *));
1162:Libraries/uC-LIB/lib_mem.c ****     if (ppool_ptr == (void **)0) {                                  /* If mem pool ptrs alloc faile
 1380              		.loc 1 1162 0
 1381 07fc 3B6A     		ldr	r3, [r7, #32]
 1382 07fe 002B     		cmp	r3, #0
 1383 0800 2AD1     		bne	.L78
1163:Libraries/uC-LIB/lib_mem.c ****         size_rem = pmem_pool_heap->SegSizeRem;
 1384              		.loc 1 1163 0
 1385 0802 7B6C     		ldr	r3, [r7, #68]
 1386 0804 1B6C     		ldr	r3, [r3, #64]
 1387 0806 BB63     		str	r3, [r7, #56]
1164:Libraries/uC-LIB/lib_mem.c ****         CPU_CRITICAL_EXIT();
 1388              		.loc 1 1164 0
 1389 0808 FFF7FEFF 		bl	CPU_IntDisMeasStop
 1390 080c B86C     		ldr	r0, [r7, #72]
 1391 080e FFF7FEFF 		bl	CPU_SR_Restore
1165:Libraries/uC-LIB/lib_mem.c ****                                                                     /* ... rtn add'l heap size need
1166:Libraries/uC-LIB/lib_mem.c ****         if (pmem_base_addr == (void *)0) {
 1392              		.loc 1 1166 0
 1393 0812 BB68     		ldr	r3, [r7, #8]
 1394 0814 002B     		cmp	r3, #0
 1395 0816 0DD1     		bne	.L79
1167:Libraries/uC-LIB/lib_mem.c ****             if (size_tot > size_rem) {
 1396              		.loc 1 1167 0
 1397 0818 7A6D     		ldr	r2, [r7, #84]
 1398 081a BB6B     		ldr	r3, [r7, #56]
 1399 081c 9A42     		cmp	r2, r3
 1400 081e 05D9     		bls	.L80
1168:Libraries/uC-LIB/lib_mem.c ****                *poctets_reqd = size_tot       - size_rem;
 1401              		.loc 1 1168 0
 1402 0820 7A6D     		ldr	r2, [r7, #84]
 1403 0822 BB6B     		ldr	r3, [r7, #56]
 1404 0824 D21A     		subs	r2, r2, r3
 1405 0826 BB6F     		ldr	r3, [r7, #120]
 1406 0828 1A60     		str	r2, [r3, #0]
 1407 082a 10E0     		b	.L81
 1408              	.L80:
1169:Libraries/uC-LIB/lib_mem.c ****             } else {
1170:Libraries/uC-LIB/lib_mem.c ****                *poctets_reqd = size_tot;
 1409              		.loc 1 1170 0
 1410 082c BB6F     		ldr	r3, [r7, #120]
 1411 082e 7A6D     		ldr	r2, [r7, #84]
 1412 0830 1A60     		str	r2, [r3, #0]
 1413 0832 0CE0     		b	.L81
 1414              	.L79:
1171:Libraries/uC-LIB/lib_mem.c ****             }
1172:Libraries/uC-LIB/lib_mem.c ****         } else {
1173:Libraries/uC-LIB/lib_mem.c ****             if (size_pool_ptrs > size_rem) {
 1415              		.loc 1 1173 0
 1416 0834 7A6A     		ldr	r2, [r7, #36]
 1417 0836 BB6B     		ldr	r3, [r7, #56]
 1418 0838 9A42     		cmp	r2, r3
 1419 083a 05D9     		bls	.L82
1174:Libraries/uC-LIB/lib_mem.c ****                *poctets_reqd = size_pool_ptrs - size_rem;
 1420              		.loc 1 1174 0
 1421 083c 7A6A     		ldr	r2, [r7, #36]
 1422 083e BB6B     		ldr	r3, [r7, #56]
 1423 0840 D21A     		subs	r2, r2, r3
 1424 0842 BB6F     		ldr	r3, [r7, #120]
 1425 0844 1A60     		str	r2, [r3, #0]
 1426 0846 02E0     		b	.L81
 1427              	.L82:
1175:Libraries/uC-LIB/lib_mem.c ****             } else {
1176:Libraries/uC-LIB/lib_mem.c ****                *poctets_reqd = size_pool_ptrs;
 1428              		.loc 1 1176 0
 1429 0848 BB6F     		ldr	r3, [r7, #120]
 1430 084a 7A6A     		ldr	r2, [r7, #36]
 1431 084c 1A60     		str	r2, [r3, #0]
 1432              	.L81:
1177:Libraries/uC-LIB/lib_mem.c ****             }
1178:Libraries/uC-LIB/lib_mem.c ****         }
1179:Libraries/uC-LIB/lib_mem.c ****        *perr = LIB_MEM_ERR_HEAP_EMPTY;
 1433              		.loc 1 1179 0
 1434 084e FB6F     		ldr	r3, [r7, #124]
 1435 0850 42F2E372 		movw	r2, #10211
 1436 0854 1A80     		strh	r2, [r3, #0]	@ movhi
1180:Libraries/uC-LIB/lib_mem.c ****         return;
 1437              		.loc 1 1180 0
 1438 0856 A1E0     		b	.L60
 1439              	.L78:
1181:Libraries/uC-LIB/lib_mem.c ****     }
1182:Libraries/uC-LIB/lib_mem.c **** 
1183:Libraries/uC-LIB/lib_mem.c ****     for (i = 0u; i < blk_nbr; i++) {                                /* Alloc mem blks from blk seg 
 1440              		.loc 1 1183 0
 1441 0858 4FF00003 		mov	r3, #0
 1442 085c FB64     		str	r3, [r7, #76]
 1443 085e 3BE0     		b	.L83
 1444              	.L87:
1184:Libraries/uC-LIB/lib_mem.c ****         pmem_blk = (void *)Mem_PoolSegAlloc(pmem_pool_blk, blk_size, blk_align);
 1445              		.loc 1 1184 0
 1446 0860 F86D     		ldr	r0, [r7, #92]
 1447 0862 396F     		ldr	r1, [r7, #112]
 1448 0864 7A6F     		ldr	r2, [r7, #116]
 1449 0866 00F06DF9 		bl	Mem_PoolSegAlloc
 1450 086a F861     		str	r0, [r7, #28]
1185:Libraries/uC-LIB/lib_mem.c ****         if (pmem_blk == (void *)0) {                                /* If    mem blks alloc failed,
 1451              		.loc 1 1185 0
 1452 086c FB69     		ldr	r3, [r7, #28]
 1453 086e 002B     		cmp	r3, #0
 1454 0870 27D1     		bne	.L84
1186:Libraries/uC-LIB/lib_mem.c ****             pmem_addr_pool = (CPU_INT08U *)pmem_pool_blk->SegAddrNextAvail;
 1455              		.loc 1 1186 0
 1456 0872 FB6D     		ldr	r3, [r7, #92]
 1457 0874 9B6B     		ldr	r3, [r3, #56]
 1458 0876 BB65     		str	r3, [r7, #88]
1187:Libraries/uC-LIB/lib_mem.c ****             size_rem       = (CPU_SIZE_T  )pmem_pool_blk->SegSizeRem;
 1459              		.loc 1 1187 0
 1460 0878 FB6D     		ldr	r3, [r7, #92]
 1461 087a 1B6C     		ldr	r3, [r3, #64]
 1462 087c BB63     		str	r3, [r7, #56]
1188:Libraries/uC-LIB/lib_mem.c ****             CPU_CRITICAL_EXIT();
 1463              		.loc 1 1188 0
 1464 087e FFF7FEFF 		bl	CPU_IntDisMeasStop
 1465 0882 B86C     		ldr	r0, [r7, #72]
 1466 0884 FFF7FEFF 		bl	CPU_SR_Restore
1189:Libraries/uC-LIB/lib_mem.c ****             blk_rem        =  blk_nbr - i;
 1467              		.loc 1 1189 0
 1468 0888 3A68     		ldr	r2, [r7, #0]
 1469 088a FB6C     		ldr	r3, [r7, #76]
 1470 088c D31A     		subs	r3, r2, r3
 1471 088e BB61     		str	r3, [r7, #24]
1190:Libraries/uC-LIB/lib_mem.c ****             size_tot       =  Mem_PoolSegCalcTotSize((void     *)pmem_addr_pool,
 1472              		.loc 1 1190 0
 1473 0890 B86D     		ldr	r0, [r7, #88]
 1474 0892 B969     		ldr	r1, [r7, #24]
 1475 0894 3A6F     		ldr	r2, [r7, #112]
 1476 0896 7B6F     		ldr	r3, [r7, #116]
 1477 0898 00F010F9 		bl	Mem_PoolSegCalcTotSize
 1478 089c 7865     		str	r0, [r7, #84]
1191:Libraries/uC-LIB/lib_mem.c ****                                                      (CPU_SIZE_T)blk_rem,
1192:Libraries/uC-LIB/lib_mem.c ****                                                      (CPU_SIZE_T)blk_size,
1193:Libraries/uC-LIB/lib_mem.c ****                                                      (CPU_SIZE_T)blk_align);
1194:Libraries/uC-LIB/lib_mem.c ****                                                                     /* ... rtn add'l seg  size need
1195:Libraries/uC-LIB/lib_mem.c ****             if (size_tot > size_rem) {
 1479              		.loc 1 1195 0
 1480 089e 7A6D     		ldr	r2, [r7, #84]
 1481 08a0 BB6B     		ldr	r3, [r7, #56]
 1482 08a2 9A42     		cmp	r2, r3
 1483 08a4 05D9     		bls	.L85
1196:Libraries/uC-LIB/lib_mem.c ****                *poctets_reqd = size_tot - size_rem;
 1484              		.loc 1 1196 0
 1485 08a6 7A6D     		ldr	r2, [r7, #84]
 1486 08a8 BB6B     		ldr	r3, [r7, #56]
 1487 08aa D21A     		subs	r2, r2, r3
 1488 08ac BB6F     		ldr	r3, [r7, #120]
 1489 08ae 1A60     		str	r2, [r3, #0]
 1490 08b0 02E0     		b	.L86
 1491              	.L85:
1197:Libraries/uC-LIB/lib_mem.c ****             } else {
1198:Libraries/uC-LIB/lib_mem.c ****                *poctets_reqd = size_tot;
 1492              		.loc 1 1198 0
 1493 08b2 BB6F     		ldr	r3, [r7, #120]
 1494 08b4 7A6D     		ldr	r2, [r7, #84]
 1495 08b6 1A60     		str	r2, [r3, #0]
 1496              	.L86:
1199:Libraries/uC-LIB/lib_mem.c ****             }
1200:Libraries/uC-LIB/lib_mem.c ****            *perr = LIB_MEM_ERR_SEG_EMPTY;
 1497              		.loc 1 1200 0
 1498 08b8 FB6F     		ldr	r3, [r7, #124]
 1499 08ba 42F2D872 		movw	r2, #10200
 1500 08be 1A80     		strh	r2, [r3, #0]	@ movhi
1201:Libraries/uC-LIB/lib_mem.c ****             return;
 1501              		.loc 1 1201 0
 1502 08c0 6CE0     		b	.L60
 1503              	.L84:
1202:Libraries/uC-LIB/lib_mem.c ****         }
1203:Libraries/uC-LIB/lib_mem.c ****         ppool_ptr[i] = pmem_blk;
 1504              		.loc 1 1203 0
 1505 08c2 FB6C     		ldr	r3, [r7, #76]
 1506 08c4 4FEA8303 		lsl	r3, r3, #2
 1507 08c8 3A6A     		ldr	r2, [r7, #32]
 1508 08ca D318     		adds	r3, r2, r3
 1509 08cc FA69     		ldr	r2, [r7, #28]
 1510 08ce 1A60     		str	r2, [r3, #0]
1183:Libraries/uC-LIB/lib_mem.c ****     for (i = 0u; i < blk_nbr; i++) {                                /* Alloc mem blks from blk seg 
 1511              		.loc 1 1183 0
 1512 08d0 FB6C     		ldr	r3, [r7, #76]
 1513 08d2 03F10103 		add	r3, r3, #1
 1514 08d6 FB64     		str	r3, [r7, #76]
 1515              	.L83:
1183:Libraries/uC-LIB/lib_mem.c ****     for (i = 0u; i < blk_nbr; i++) {                                /* Alloc mem blks from blk seg 
 1516              		.loc 1 1183 0 is_stmt 0 discriminator 1
 1517 08d8 FA6C     		ldr	r2, [r7, #76]
 1518 08da 3B68     		ldr	r3, [r7, #0]
 1519 08dc 9A42     		cmp	r2, r3
 1520 08de BFD3     		bcc	.L87
1204:Libraries/uC-LIB/lib_mem.c ****     }
1205:Libraries/uC-LIB/lib_mem.c **** 
1206:Libraries/uC-LIB/lib_mem.c **** 
1207:Libraries/uC-LIB/lib_mem.c **** /*$PAGE*/
1208:Libraries/uC-LIB/lib_mem.c ****                                                                     /* ------------- UPDATE MEM POO
1209:Libraries/uC-LIB/lib_mem.c ****     if (pmem_pool_prev == pmem_pool_next) {                         /* Add new mem seg  to list.   
 1521              		.loc 1 1209 0 is_stmt 1
 1522 08e0 7A6E     		ldr	r2, [r7, #100]
 1523 08e2 3B6E     		ldr	r3, [r7, #96]
 1524 08e4 9A42     		cmp	r2, r3
 1525 08e6 12D1     		bne	.L88
1210:Libraries/uC-LIB/lib_mem.c **** 
1211:Libraries/uC-LIB/lib_mem.c ****         pmem_pool_next             = pmem_pool_blk->PoolNextPtr;
 1526              		.loc 1 1211 0
 1527 08e8 FB6D     		ldr	r3, [r7, #92]
 1528 08ea 1B69     		ldr	r3, [r3, #16]
 1529 08ec 3B66     		str	r3, [r7, #96]
1212:Libraries/uC-LIB/lib_mem.c ****         pmem_pool->PoolPrevPtr     = pmem_pool_blk;
 1530              		.loc 1 1212 0
 1531 08ee FB68     		ldr	r3, [r7, #12]
 1532 08f0 FA6D     		ldr	r2, [r7, #92]
 1533 08f2 DA60     		str	r2, [r3, #12]
1213:Libraries/uC-LIB/lib_mem.c ****         pmem_pool->PoolNextPtr     = pmem_pool_next;
 1534              		.loc 1 1213 0
 1535 08f4 FB68     		ldr	r3, [r7, #12]
 1536 08f6 3A6E     		ldr	r2, [r7, #96]
 1537 08f8 1A61     		str	r2, [r3, #16]
1214:Libraries/uC-LIB/lib_mem.c ****         pmem_pool_blk->PoolNextPtr = pmem_pool;
 1538              		.loc 1 1214 0
 1539 08fa FB6D     		ldr	r3, [r7, #92]
 1540 08fc FA68     		ldr	r2, [r7, #12]
 1541 08fe 1A61     		str	r2, [r3, #16]
1215:Libraries/uC-LIB/lib_mem.c ****         if (pmem_pool_next != (MEM_POOL *)0) {
 1542              		.loc 1 1215 0
 1543 0900 3B6E     		ldr	r3, [r7, #96]
 1544 0902 002B     		cmp	r3, #0
 1545 0904 1CD0     		beq	.L89
1216:Libraries/uC-LIB/lib_mem.c ****             pmem_pool_next->PoolPrevPtr = pmem_pool;
 1546              		.loc 1 1216 0
 1547 0906 3B6E     		ldr	r3, [r7, #96]
 1548 0908 FA68     		ldr	r2, [r7, #12]
 1549 090a DA60     		str	r2, [r3, #12]
 1550 090c 18E0     		b	.L89
 1551              	.L88:
1217:Libraries/uC-LIB/lib_mem.c ****         }
1218:Libraries/uC-LIB/lib_mem.c **** 
1219:Libraries/uC-LIB/lib_mem.c ****     } else {                                                        /* Add new mem pool to mem seg.
1220:Libraries/uC-LIB/lib_mem.c **** 
1221:Libraries/uC-LIB/lib_mem.c ****         pmem_pool->SegPrevPtr = pmem_pool_prev;
 1552              		.loc 1 1221 0
 1553 090e FB68     		ldr	r3, [r7, #12]
 1554 0910 7A6E     		ldr	r2, [r7, #100]
 1555 0912 5A60     		str	r2, [r3, #4]
1222:Libraries/uC-LIB/lib_mem.c ****         pmem_pool->SegNextPtr = pmem_pool_next;
 1556              		.loc 1 1222 0
 1557 0914 FB68     		ldr	r3, [r7, #12]
 1558 0916 3A6E     		ldr	r2, [r7, #96]
 1559 0918 9A60     		str	r2, [r3, #8]
1223:Libraries/uC-LIB/lib_mem.c **** 
1224:Libraries/uC-LIB/lib_mem.c ****         if (pmem_pool_prev != (MEM_POOL *)0) {                      /* Update prev mem pool link.  
 1560              		.loc 1 1224 0
 1561 091a 7B6E     		ldr	r3, [r7, #100]
 1562 091c 002B     		cmp	r3, #0
 1563 091e 03D0     		beq	.L90
1225:Libraries/uC-LIB/lib_mem.c ****             pmem_pool_prev->SegNextPtr = pmem_pool;
 1564              		.loc 1 1225 0
 1565 0920 7B6E     		ldr	r3, [r7, #100]
 1566 0922 FA68     		ldr	r2, [r7, #12]
 1567 0924 9A60     		str	r2, [r3, #8]
 1568 0926 05E0     		b	.L91
 1569              	.L90:
1226:Libraries/uC-LIB/lib_mem.c ****         } else {
1227:Libraries/uC-LIB/lib_mem.c ****             Mem_PoolTbl                = pmem_pool;                 /* Update      mem pool head.  
 1570              		.loc 1 1227 0
 1571 0928 40F20003 		movw	r3, #:lower16:Mem_PoolTbl
 1572 092c C0F20003 		movt	r3, #:upper16:Mem_PoolTbl
 1573 0930 FA68     		ldr	r2, [r7, #12]
 1574 0932 1A60     		str	r2, [r3, #0]
 1575              	.L91:
1228:Libraries/uC-LIB/lib_mem.c ****         }
1229:Libraries/uC-LIB/lib_mem.c **** 
1230:Libraries/uC-LIB/lib_mem.c ****         if (pmem_pool_next != (MEM_POOL *)0) {                      /* Update next mem pool link.  
 1576              		.loc 1 1230 0
 1577 0934 3B6E     		ldr	r3, [r7, #96]
 1578 0936 002B     		cmp	r3, #0
 1579 0938 02D0     		beq	.L89
1231:Libraries/uC-LIB/lib_mem.c ****             pmem_pool_next->SegPrevPtr = pmem_pool;
 1580              		.loc 1 1231 0
 1581 093a 3B6E     		ldr	r3, [r7, #96]
 1582 093c FA68     		ldr	r2, [r7, #12]
 1583 093e 5A60     		str	r2, [r3, #4]
 1584              	.L89:
1232:Libraries/uC-LIB/lib_mem.c ****         }
1233:Libraries/uC-LIB/lib_mem.c ****     }
1234:Libraries/uC-LIB/lib_mem.c **** 
1235:Libraries/uC-LIB/lib_mem.c **** 
1236:Libraries/uC-LIB/lib_mem.c ****                                                                     /* ----------------- CFG MEM PO
1237:Libraries/uC-LIB/lib_mem.c ****     pmem_pool->Type          = (LIB_MEM_TYPE) LIB_MEM_TYPE_POOL;
 1585              		.loc 1 1237 0
 1586 0940 FA68     		ldr	r2, [r7, #12]
 1587 0942 44F65073 		movw	r3, #20304
 1588 0946 C4F64F43 		movt	r3, 19535
 1589 094a 1360     		str	r3, [r2, #0]
1238:Libraries/uC-LIB/lib_mem.c ****     pmem_pool->PoolAddrStart = (void       *) pmem_addr_pool;
 1590              		.loc 1 1238 0
 1591 094c FB68     		ldr	r3, [r7, #12]
 1592 094e BA6D     		ldr	r2, [r7, #88]
 1593 0950 5A61     		str	r2, [r3, #20]
1239:Libraries/uC-LIB/lib_mem.c ****     pmem_pool->PoolAddrEnd   = (void       *)(pmem_addr_pool + size_tot_pool - 1);
 1594              		.loc 1 1239 0
 1595 0952 3B6D     		ldr	r3, [r7, #80]
 1596 0954 03F1FF33 		add	r3, r3, #-1
 1597 0958 BA6D     		ldr	r2, [r7, #88]
 1598 095a D218     		adds	r2, r2, r3
 1599 095c FB68     		ldr	r3, [r7, #12]
 1600 095e 9A61     		str	r2, [r3, #24]
1240:Libraries/uC-LIB/lib_mem.c ****     pmem_pool->PoolPtrs      = (void      **) ppool_ptr;
 1601              		.loc 1 1240 0
 1602 0960 FB68     		ldr	r3, [r7, #12]
 1603 0962 3A6A     		ldr	r2, [r7, #32]
 1604 0964 DA61     		str	r2, [r3, #28]
1241:Libraries/uC-LIB/lib_mem.c ****     pmem_pool->PoolSize      = (CPU_SIZE_T  ) size_tot_pool;
 1605              		.loc 1 1241 0
 1606 0966 FB68     		ldr	r3, [r7, #12]
 1607 0968 3A6D     		ldr	r2, [r7, #80]
 1608 096a 5A62     		str	r2, [r3, #36]
1242:Libraries/uC-LIB/lib_mem.c ****     pmem_pool->BlkAlign      = (CPU_SIZE_T  ) blk_align;
 1609              		.loc 1 1242 0
 1610 096c FB68     		ldr	r3, [r7, #12]
 1611 096e 7A6F     		ldr	r2, [r7, #116]
 1612 0970 1A63     		str	r2, [r3, #48]
1243:Libraries/uC-LIB/lib_mem.c ****     pmem_pool->BlkSize       = (CPU_SIZE_T  ) blk_size;
 1613              		.loc 1 1243 0
 1614 0972 FB68     		ldr	r3, [r7, #12]
 1615 0974 3A6F     		ldr	r2, [r7, #112]
 1616 0976 DA62     		str	r2, [r3, #44]
1244:Libraries/uC-LIB/lib_mem.c ****     pmem_pool->BlkNbr        = (CPU_SIZE_T  ) blk_nbr;
 1617              		.loc 1 1244 0
 1618 0978 FB68     		ldr	r3, [r7, #12]
 1619 097a 3A68     		ldr	r2, [r7, #0]
 1620 097c 9A62     		str	r2, [r3, #40]
1245:Libraries/uC-LIB/lib_mem.c ****     pmem_pool->BlkIx         = (MEM_POOL_IX ) blk_nbr;
 1621              		.loc 1 1245 0
 1622 097e 3B68     		ldr	r3, [r7, #0]
 1623 0980 9AB2     		uxth	r2, r3
 1624 0982 FB68     		ldr	r3, [r7, #12]
 1625 0984 1A84     		strh	r2, [r3, #32]	@ movhi
1246:Libraries/uC-LIB/lib_mem.c **** 
1247:Libraries/uC-LIB/lib_mem.c **** 
1248:Libraries/uC-LIB/lib_mem.c ****     CPU_CRITICAL_EXIT();
 1626              		.loc 1 1248 0
 1627 0986 FFF7FEFF 		bl	CPU_IntDisMeasStop
 1628 098a B86C     		ldr	r0, [r7, #72]
 1629 098c FFF7FEFF 		bl	CPU_SR_Restore
1249:Libraries/uC-LIB/lib_mem.c **** 
1250:Libraries/uC-LIB/lib_mem.c ****    *perr = LIB_MEM_ERR_NONE;
 1630              		.loc 1 1250 0
 1631 0990 FB6F     		ldr	r3, [r7, #124]
 1632 0992 42F21072 		movw	r2, #10000
 1633 0996 1A80     		strh	r2, [r3, #0]	@ movhi
 1634 0998 00E0     		b	.L60
 1635              	.L92:
 950:Libraries/uC-LIB/lib_mem.c ****          return;
 1636              		.loc 1 950 0
 1637 099a 00BF     		nop
 1638              	.L60:
1251:Libraries/uC-LIB/lib_mem.c **** }
 1639              		.loc 1 1251 0
 1640 099c 07F16807 		add	r7, r7, #104
 1641 09a0 BD46     		mov	sp, r7
 1642 09a2 80BD     		pop	{r7, pc}
 1643              		.cfi_endproc
 1644              	.LFE7:
 1646              		.align	2
 1647              		.global	Mem_PoolBlkGet
 1648              		.thumb
 1649              		.thumb_func
 1651              	Mem_PoolBlkGet:
 1652              	.LFB8:
1252:Libraries/uC-LIB/lib_mem.c **** #endif
1253:Libraries/uC-LIB/lib_mem.c **** 
1254:Libraries/uC-LIB/lib_mem.c **** 
1255:Libraries/uC-LIB/lib_mem.c **** /*$PAGE*/
1256:Libraries/uC-LIB/lib_mem.c **** /*
1257:Libraries/uC-LIB/lib_mem.c **** ***************************************************************************************************
1258:Libraries/uC-LIB/lib_mem.c **** *                                          Mem_PoolBlkGet()
1259:Libraries/uC-LIB/lib_mem.c **** *
1260:Libraries/uC-LIB/lib_mem.c **** * Description : Get a memory block from memory pool.
1261:Libraries/uC-LIB/lib_mem.c **** *
1262:Libraries/uC-LIB/lib_mem.c **** * Argument(s) : pmem_pool   Pointer to  memory pool to get memory block from.
1263:Libraries/uC-LIB/lib_mem.c **** *
1264:Libraries/uC-LIB/lib_mem.c **** *               size        Size of requested memory (in octets).
1265:Libraries/uC-LIB/lib_mem.c **** *
1266:Libraries/uC-LIB/lib_mem.c **** *               perr        Pointer to variable that will receive the return error code from this f
1267:Libraries/uC-LIB/lib_mem.c **** *
1268:Libraries/uC-LIB/lib_mem.c **** *                               LIB_MEM_ERR_NONE                   Memory block successfully return
1269:Libraries/uC-LIB/lib_mem.c **** *                               LIB_MEM_ERR_POOL_EMPTY          NO memory blocks available in memor
1270:Libraries/uC-LIB/lib_mem.c **** *
1271:Libraries/uC-LIB/lib_mem.c **** *                               LIB_MEM_ERR_NULL_PTR            Argument 'pmem_pool' passed a NULL 
1272:Libraries/uC-LIB/lib_mem.c **** *                               LIB_MEM_ERR_INVALID_POOL        Invalid memory pool type.
1273:Libraries/uC-LIB/lib_mem.c **** *                               LIB_MEM_ERR_INVALID_BLK_SIZE    Invalid memory pool block size requ
1274:Libraries/uC-LIB/lib_mem.c **** *                               LIB_MEM_ERR_INVALID_BLK_IX      Invalid memory pool block index.
1275:Libraries/uC-LIB/lib_mem.c **** *
1276:Libraries/uC-LIB/lib_mem.c **** * Return(s)   : Pointer to memory block, if NO error(s).
1277:Libraries/uC-LIB/lib_mem.c **** *
1278:Libraries/uC-LIB/lib_mem.c **** *               Pointer to NULL,         otherwise.
1279:Libraries/uC-LIB/lib_mem.c **** *
1280:Libraries/uC-LIB/lib_mem.c **** * Caller(s)   : Application.
1281:Libraries/uC-LIB/lib_mem.c **** *
1282:Libraries/uC-LIB/lib_mem.c **** * Note(s)     : (1) 'pmem_pool' variables MUST ALWAYS be accessed exclusively in critical sections.
1283:Libraries/uC-LIB/lib_mem.c **** ***************************************************************************************************
1284:Libraries/uC-LIB/lib_mem.c **** */
1285:Libraries/uC-LIB/lib_mem.c **** /*$PAGE*/
1286:Libraries/uC-LIB/lib_mem.c **** #if (LIB_MEM_CFG_ALLOC_EN == DEF_ENABLED)
1287:Libraries/uC-LIB/lib_mem.c **** void  *Mem_PoolBlkGet (MEM_POOL    *pmem_pool,
1288:Libraries/uC-LIB/lib_mem.c ****                        CPU_SIZE_T   size,
1289:Libraries/uC-LIB/lib_mem.c ****                        LIB_ERR     *perr)
1290:Libraries/uC-LIB/lib_mem.c **** {
 1653              		.loc 1 1290 0
 1654              		.cfi_startproc
 1655              		@ args = 0, pretend = 0, frame = 24
 1656              		@ frame_needed = 1, uses_anonymous_args = 0
 1657 09a4 80B5     		push	{r7, lr}
 1658              	.LCFI24:
 1659              		.cfi_def_cfa_offset 8
 1660              		.cfi_offset 14, -4
 1661              		.cfi_offset 7, -8
 1662 09a6 86B0     		sub	sp, sp, #24
 1663              	.LCFI25:
 1664              		.cfi_def_cfa_offset 32
 1665 09a8 00AF     		add	r7, sp, #0
 1666              	.LCFI26:
 1667              		.cfi_def_cfa_register 7
 1668 09aa F860     		str	r0, [r7, #12]
 1669 09ac B960     		str	r1, [r7, #8]
 1670 09ae 7A60     		str	r2, [r7, #4]
1291:Libraries/uC-LIB/lib_mem.c ****     void  *pmem_blk;
1292:Libraries/uC-LIB/lib_mem.c ****     CPU_SR_ALLOC();
 1671              		.loc 1 1292 0
 1672 09b0 4FF00003 		mov	r3, #0
 1673 09b4 7B61     		str	r3, [r7, #20]
1293:Libraries/uC-LIB/lib_mem.c **** 
1294:Libraries/uC-LIB/lib_mem.c **** 
1295:Libraries/uC-LIB/lib_mem.c **** #if (LIB_MEM_CFG_ARG_CHK_EXT_EN == DEF_ENABLED)                     /* ------------- VALIDATE RTN E
1296:Libraries/uC-LIB/lib_mem.c ****     if (perr == (LIB_ERR *)0) {
1297:Libraries/uC-LIB/lib_mem.c ****         CPU_SW_EXCEPTION((void *)0);
1298:Libraries/uC-LIB/lib_mem.c ****     }
1299:Libraries/uC-LIB/lib_mem.c **** #endif
1300:Libraries/uC-LIB/lib_mem.c **** 
1301:Libraries/uC-LIB/lib_mem.c ****                                                                     /* ------------ VALIDATE MEM PO
1302:Libraries/uC-LIB/lib_mem.c **** #if (LIB_MEM_CFG_ARG_CHK_EXT_EN == DEF_ENABLED)                     
1303:Libraries/uC-LIB/lib_mem.c ****     if (pmem_pool == (MEM_POOL *)0) {                               /* Validate mem ptr.           
1304:Libraries/uC-LIB/lib_mem.c ****        *perr = LIB_MEM_ERR_NULL_PTR;
1305:Libraries/uC-LIB/lib_mem.c ****         return ((void *)0);
1306:Libraries/uC-LIB/lib_mem.c ****     }
1307:Libraries/uC-LIB/lib_mem.c **** 
1308:Libraries/uC-LIB/lib_mem.c ****     if (size < 1) {                                                 /* Validate req'd size as non-N
1309:Libraries/uC-LIB/lib_mem.c ****        *perr = LIB_MEM_ERR_INVALID_BLK_SIZE;
1310:Libraries/uC-LIB/lib_mem.c ****         return ((void *)0);
1311:Libraries/uC-LIB/lib_mem.c ****     }
1312:Libraries/uC-LIB/lib_mem.c **** #endif
1313:Libraries/uC-LIB/lib_mem.c **** 
1314:Libraries/uC-LIB/lib_mem.c ****     CPU_CRITICAL_ENTER();
 1674              		.loc 1 1314 0
 1675 09b6 FFF7FEFF 		bl	CPU_SR_Save
 1676 09ba 7861     		str	r0, [r7, #20]
 1677 09bc FFF7FEFF 		bl	CPU_IntDisMeasStart
1315:Libraries/uC-LIB/lib_mem.c **** 
1316:Libraries/uC-LIB/lib_mem.c **** #if (LIB_MEM_CFG_ARG_CHK_EXT_EN == DEF_ENABLED)
1317:Libraries/uC-LIB/lib_mem.c ****     if (pmem_pool->Type != LIB_MEM_TYPE_POOL) {                     /* Validate mem pool type.     
1318:Libraries/uC-LIB/lib_mem.c ****         CPU_CRITICAL_EXIT();
1319:Libraries/uC-LIB/lib_mem.c ****        *perr = LIB_MEM_ERR_INVALID_POOL;
1320:Libraries/uC-LIB/lib_mem.c ****         return ((void *)0);
1321:Libraries/uC-LIB/lib_mem.c ****     }
1322:Libraries/uC-LIB/lib_mem.c **** 
1323:Libraries/uC-LIB/lib_mem.c ****     if (size > pmem_pool->BlkSize) {                                /* Validate req'd size <= mem p
1324:Libraries/uC-LIB/lib_mem.c ****         CPU_CRITICAL_EXIT();
1325:Libraries/uC-LIB/lib_mem.c ****        *perr = LIB_MEM_ERR_INVALID_BLK_SIZE;
1326:Libraries/uC-LIB/lib_mem.c ****         return ((void *)0);
1327:Libraries/uC-LIB/lib_mem.c ****     }
1328:Libraries/uC-LIB/lib_mem.c **** #endif
1329:Libraries/uC-LIB/lib_mem.c **** 
1330:Libraries/uC-LIB/lib_mem.c ****    (void)&size;                                                     /* Prevent possible 'variable u
1331:Libraries/uC-LIB/lib_mem.c **** 
1332:Libraries/uC-LIB/lib_mem.c ****     if (pmem_pool->BlkIx < 1) {                                     /* Validate mem pool as NOT emp
 1678              		.loc 1 1332 0
 1679 09c0 FB68     		ldr	r3, [r7, #12]
 1680 09c2 1B8C     		ldrh	r3, [r3, #32]
 1681 09c4 002B     		cmp	r3, #0
 1682 09c6 0BD1     		bne	.L95
1333:Libraries/uC-LIB/lib_mem.c ****         CPU_CRITICAL_EXIT();
 1683              		.loc 1 1333 0
 1684 09c8 FFF7FEFF 		bl	CPU_IntDisMeasStop
 1685 09cc 7869     		ldr	r0, [r7, #20]
 1686 09ce FFF7FEFF 		bl	CPU_SR_Restore
1334:Libraries/uC-LIB/lib_mem.c ****        *perr = LIB_MEM_ERR_POOL_EMPTY;
 1687              		.loc 1 1334 0
 1688 09d2 7B68     		ldr	r3, [r7, #4]
 1689 09d4 42F2DE72 		movw	r2, #10206
 1690 09d8 1A80     		strh	r2, [r3, #0]	@ movhi
1335:Libraries/uC-LIB/lib_mem.c ****         return ((void *)0);
 1691              		.loc 1 1335 0
 1692 09da 4FF00003 		mov	r3, #0
 1693 09de 2CE0     		b	.L96
 1694              	.L95:
1336:Libraries/uC-LIB/lib_mem.c ****     }
1337:Libraries/uC-LIB/lib_mem.c **** 
1338:Libraries/uC-LIB/lib_mem.c ****     if (pmem_pool->BlkIx > pmem_pool->BlkNbr) {                     /* Validate mem pool ix NOT cor
 1695              		.loc 1 1338 0
 1696 09e0 FB68     		ldr	r3, [r7, #12]
 1697 09e2 1B8C     		ldrh	r3, [r3, #32]
 1698 09e4 1A46     		mov	r2, r3
 1699 09e6 FB68     		ldr	r3, [r7, #12]
 1700 09e8 9B6A     		ldr	r3, [r3, #40]
 1701 09ea 9A42     		cmp	r2, r3
 1702 09ec 0BD9     		bls	.L97
1339:Libraries/uC-LIB/lib_mem.c ****         CPU_CRITICAL_EXIT();
 1703              		.loc 1 1339 0
 1704 09ee FFF7FEFF 		bl	CPU_IntDisMeasStop
 1705 09f2 7869     		ldr	r0, [r7, #20]
 1706 09f4 FFF7FEFF 		bl	CPU_SR_Restore
1340:Libraries/uC-LIB/lib_mem.c ****        *perr = LIB_MEM_ERR_INVALID_BLK_IX;
 1707              		.loc 1 1340 0
 1708 09f8 7B68     		ldr	r3, [r7, #4]
 1709 09fa 42F29572 		movw	r2, #10133
 1710 09fe 1A80     		strh	r2, [r3, #0]	@ movhi
1341:Libraries/uC-LIB/lib_mem.c ****         return ((void *)0);
 1711              		.loc 1 1341 0
 1712 0a00 4FF00003 		mov	r3, #0
 1713 0a04 19E0     		b	.L96
 1714              	.L97:
1342:Libraries/uC-LIB/lib_mem.c ****     }
1343:Libraries/uC-LIB/lib_mem.c **** 
1344:Libraries/uC-LIB/lib_mem.c ****                                                                     /* ------------ GET MEM BLK FRO
1345:Libraries/uC-LIB/lib_mem.c ****     pmem_pool->BlkIx--;
 1715              		.loc 1 1345 0
 1716 0a06 FB68     		ldr	r3, [r7, #12]
 1717 0a08 1B8C     		ldrh	r3, [r3, #32]
 1718 0a0a 03F1FF33 		add	r3, r3, #-1
 1719 0a0e 9AB2     		uxth	r2, r3
 1720 0a10 FB68     		ldr	r3, [r7, #12]
 1721 0a12 1A84     		strh	r2, [r3, #32]	@ movhi
1346:Libraries/uC-LIB/lib_mem.c ****     pmem_blk = pmem_pool->PoolPtrs[pmem_pool->BlkIx];
 1722              		.loc 1 1346 0
 1723 0a14 FB68     		ldr	r3, [r7, #12]
 1724 0a16 DA69     		ldr	r2, [r3, #28]
 1725 0a18 FB68     		ldr	r3, [r7, #12]
 1726 0a1a 1B8C     		ldrh	r3, [r3, #32]
 1727 0a1c 4FEA8303 		lsl	r3, r3, #2
 1728 0a20 D318     		adds	r3, r2, r3
 1729 0a22 1B68     		ldr	r3, [r3, #0]
 1730 0a24 3B61     		str	r3, [r7, #16]
1347:Libraries/uC-LIB/lib_mem.c **** 
1348:Libraries/uC-LIB/lib_mem.c ****     CPU_CRITICAL_EXIT();
 1731              		.loc 1 1348 0
 1732 0a26 FFF7FEFF 		bl	CPU_IntDisMeasStop
 1733 0a2a 7869     		ldr	r0, [r7, #20]
 1734 0a2c FFF7FEFF 		bl	CPU_SR_Restore
1349:Libraries/uC-LIB/lib_mem.c **** 
1350:Libraries/uC-LIB/lib_mem.c ****    *perr =  LIB_MEM_ERR_NONE;
 1735              		.loc 1 1350 0
 1736 0a30 7B68     		ldr	r3, [r7, #4]
 1737 0a32 42F21072 		movw	r2, #10000
 1738 0a36 1A80     		strh	r2, [r3, #0]	@ movhi
1351:Libraries/uC-LIB/lib_mem.c **** 
1352:Libraries/uC-LIB/lib_mem.c ****     return (pmem_blk);
 1739              		.loc 1 1352 0
 1740 0a38 3B69     		ldr	r3, [r7, #16]
 1741              	.L96:
1353:Libraries/uC-LIB/lib_mem.c **** }
 1742              		.loc 1 1353 0
 1743 0a3a 1846     		mov	r0, r3
 1744 0a3c 07F11807 		add	r7, r7, #24
 1745 0a40 BD46     		mov	sp, r7
 1746 0a42 80BD     		pop	{r7, pc}
 1747              		.cfi_endproc
 1748              	.LFE8:
 1750              		.align	2
 1751              		.global	Mem_PoolBlkFree
 1752              		.thumb
 1753              		.thumb_func
 1755              	Mem_PoolBlkFree:
 1756              	.LFB9:
1354:Libraries/uC-LIB/lib_mem.c **** #endif
1355:Libraries/uC-LIB/lib_mem.c **** 
1356:Libraries/uC-LIB/lib_mem.c **** 
1357:Libraries/uC-LIB/lib_mem.c **** /*$PAGE*/
1358:Libraries/uC-LIB/lib_mem.c **** /*
1359:Libraries/uC-LIB/lib_mem.c **** ***************************************************************************************************
1360:Libraries/uC-LIB/lib_mem.c **** *                                          Mem_PoolBlkFree()
1361:Libraries/uC-LIB/lib_mem.c **** *
1362:Libraries/uC-LIB/lib_mem.c **** * Description : Free a memory block to memory pool.
1363:Libraries/uC-LIB/lib_mem.c **** *
1364:Libraries/uC-LIB/lib_mem.c **** * Argument(s) : pmem_pool   Pointer to memory pool to free memory block.
1365:Libraries/uC-LIB/lib_mem.c **** *
1366:Libraries/uC-LIB/lib_mem.c **** *               pmem_blk    Pointer to memory block address to free.
1367:Libraries/uC-LIB/lib_mem.c **** *
1368:Libraries/uC-LIB/lib_mem.c **** *               perr        Pointer to variable that will receive the return error code from this f
1369:Libraries/uC-LIB/lib_mem.c **** *
1370:Libraries/uC-LIB/lib_mem.c **** *                               LIB_MEM_ERR_NONE                            Memory block successful
1371:Libraries/uC-LIB/lib_mem.c **** *                               LIB_MEM_ERR_POOL_FULL                   ALL memory blocks already a
1372:Libraries/uC-LIB/lib_mem.c **** *                                                                           memory pool.
1373:Libraries/uC-LIB/lib_mem.c **** *
1374:Libraries/uC-LIB/lib_mem.c **** *                               LIB_MEM_ERR_NULL_PTR                    Argument 'pmem_pool'/'pmem_
1375:Libraries/uC-LIB/lib_mem.c **** *                                                                           a NULL pointer.
1376:Libraries/uC-LIB/lib_mem.c **** *                               LIB_MEM_ERR_INVALID_POOL                Invalid memory pool  type.
1377:Libraries/uC-LIB/lib_mem.c **** *                               LIB_MEM_ERR_INVALID_BLK_ADDR            Invalid memory block addres
1378:Libraries/uC-LIB/lib_mem.c **** *                               LIB_MEM_ERR_INVALID_BLK_ADDR_IN_POOL            Memory block addres
1379:Libraries/uC-LIB/lib_mem.c **** *                                                                            in memory pool.
1380:Libraries/uC-LIB/lib_mem.c **** *
1381:Libraries/uC-LIB/lib_mem.c **** * Return(s)   : none.
1382:Libraries/uC-LIB/lib_mem.c **** *
1383:Libraries/uC-LIB/lib_mem.c **** * Caller(s)   : Application.
1384:Libraries/uC-LIB/lib_mem.c **** *
1385:Libraries/uC-LIB/lib_mem.c **** * Note(s)     : (1) 'pmem_pool' variables MUST ALWAYS be accessed exclusively in critical sections.
1386:Libraries/uC-LIB/lib_mem.c **** ***************************************************************************************************
1387:Libraries/uC-LIB/lib_mem.c **** */
1388:Libraries/uC-LIB/lib_mem.c **** /*$PAGE*/
1389:Libraries/uC-LIB/lib_mem.c **** #if (LIB_MEM_CFG_ALLOC_EN == DEF_ENABLED)
1390:Libraries/uC-LIB/lib_mem.c **** void  Mem_PoolBlkFree (MEM_POOL  *pmem_pool,
1391:Libraries/uC-LIB/lib_mem.c ****                        void      *pmem_blk,
1392:Libraries/uC-LIB/lib_mem.c ****                        LIB_ERR   *perr)
1393:Libraries/uC-LIB/lib_mem.c **** {
 1757              		.loc 1 1393 0
 1758              		.cfi_startproc
 1759              		@ args = 0, pretend = 0, frame = 24
 1760              		@ frame_needed = 1, uses_anonymous_args = 0
 1761 0a44 80B5     		push	{r7, lr}
 1762              	.LCFI27:
 1763              		.cfi_def_cfa_offset 8
 1764              		.cfi_offset 14, -4
 1765              		.cfi_offset 7, -8
 1766 0a46 86B0     		sub	sp, sp, #24
 1767              	.LCFI28:
 1768              		.cfi_def_cfa_offset 32
 1769 0a48 00AF     		add	r7, sp, #0
 1770              	.LCFI29:
 1771              		.cfi_def_cfa_register 7
 1772 0a4a F860     		str	r0, [r7, #12]
 1773 0a4c B960     		str	r1, [r7, #8]
 1774 0a4e 7A60     		str	r2, [r7, #4]
1394:Libraries/uC-LIB/lib_mem.c **** #if (LIB_MEM_CFG_ARG_CHK_EXT_EN == DEF_ENABLED)
1395:Libraries/uC-LIB/lib_mem.c ****     CPU_BOOLEAN  addr_valid;
1396:Libraries/uC-LIB/lib_mem.c ****     MEM_POOL_IX  i;
1397:Libraries/uC-LIB/lib_mem.c **** #endif
1398:Libraries/uC-LIB/lib_mem.c ****     CPU_SR_ALLOC();
 1775              		.loc 1 1398 0
 1776 0a50 4FF00003 		mov	r3, #0
 1777 0a54 7B61     		str	r3, [r7, #20]
1399:Libraries/uC-LIB/lib_mem.c **** 
1400:Libraries/uC-LIB/lib_mem.c **** 
1401:Libraries/uC-LIB/lib_mem.c **** #if (LIB_MEM_CFG_ARG_CHK_EXT_EN == DEF_ENABLED)                     /* ------------- VALIDATE RTN E
1402:Libraries/uC-LIB/lib_mem.c ****     if (perr == (LIB_ERR *)0) {
1403:Libraries/uC-LIB/lib_mem.c ****         CPU_SW_EXCEPTION(;);
1404:Libraries/uC-LIB/lib_mem.c ****     }
1405:Libraries/uC-LIB/lib_mem.c **** #endif
1406:Libraries/uC-LIB/lib_mem.c **** 
1407:Libraries/uC-LIB/lib_mem.c ****                                                                     /* ------------ VALIDATE MEM PO
1408:Libraries/uC-LIB/lib_mem.c **** #if (LIB_MEM_CFG_ARG_CHK_EXT_EN == DEF_ENABLED)                     /* Validate mem ptrs.          
1409:Libraries/uC-LIB/lib_mem.c ****     if (pmem_pool == (MEM_POOL *)0) {
1410:Libraries/uC-LIB/lib_mem.c ****        *perr = LIB_MEM_ERR_NULL_PTR;
1411:Libraries/uC-LIB/lib_mem.c ****         return;
1412:Libraries/uC-LIB/lib_mem.c ****     }
1413:Libraries/uC-LIB/lib_mem.c **** 
1414:Libraries/uC-LIB/lib_mem.c ****     if (pmem_blk == (void *)0) {
1415:Libraries/uC-LIB/lib_mem.c ****        *perr = LIB_MEM_ERR_NULL_PTR;
1416:Libraries/uC-LIB/lib_mem.c ****         return;
1417:Libraries/uC-LIB/lib_mem.c ****     }
1418:Libraries/uC-LIB/lib_mem.c **** #endif
1419:Libraries/uC-LIB/lib_mem.c **** 
1420:Libraries/uC-LIB/lib_mem.c ****     CPU_CRITICAL_ENTER();
 1778              		.loc 1 1420 0
 1779 0a56 FFF7FEFF 		bl	CPU_SR_Save
 1780 0a5a 7861     		str	r0, [r7, #20]
 1781 0a5c FFF7FEFF 		bl	CPU_IntDisMeasStart
1421:Libraries/uC-LIB/lib_mem.c **** 
1422:Libraries/uC-LIB/lib_mem.c **** #if (LIB_MEM_CFG_ARG_CHK_EXT_EN == DEF_ENABLED)
1423:Libraries/uC-LIB/lib_mem.c ****     if (pmem_pool->Type != LIB_MEM_TYPE_POOL) {                     /* Validate mem pool type.     
1424:Libraries/uC-LIB/lib_mem.c ****         CPU_CRITICAL_EXIT();
1425:Libraries/uC-LIB/lib_mem.c ****        *perr = LIB_MEM_ERR_INVALID_POOL;
1426:Libraries/uC-LIB/lib_mem.c ****         return;
1427:Libraries/uC-LIB/lib_mem.c ****     }
1428:Libraries/uC-LIB/lib_mem.c **** 
1429:Libraries/uC-LIB/lib_mem.c ****     addr_valid = Mem_PoolBlkIsValidAddr(pmem_pool, pmem_blk);       /* Validate mem blk as valid po
1430:Libraries/uC-LIB/lib_mem.c ****     if (addr_valid != DEF_OK) {
1431:Libraries/uC-LIB/lib_mem.c ****         CPU_CRITICAL_EXIT();
1432:Libraries/uC-LIB/lib_mem.c ****        *perr = LIB_MEM_ERR_INVALID_BLK_ADDR;
1433:Libraries/uC-LIB/lib_mem.c ****         return;
1434:Libraries/uC-LIB/lib_mem.c ****     }
1435:Libraries/uC-LIB/lib_mem.c **** 
1436:Libraries/uC-LIB/lib_mem.c ****     for (i = 0u; i < pmem_pool->BlkIx; i++) {                       /* Validate mem blk  NOT alread
1437:Libraries/uC-LIB/lib_mem.c ****         if (pmem_blk == pmem_pool->PoolPtrs[i]) {
1438:Libraries/uC-LIB/lib_mem.c ****             CPU_CRITICAL_EXIT();
1439:Libraries/uC-LIB/lib_mem.c ****            *perr = LIB_MEM_ERR_INVALID_BLK_ADDR_IN_POOL;
1440:Libraries/uC-LIB/lib_mem.c ****             return;
1441:Libraries/uC-LIB/lib_mem.c ****         }
1442:Libraries/uC-LIB/lib_mem.c ****     }
1443:Libraries/uC-LIB/lib_mem.c **** #endif
1444:Libraries/uC-LIB/lib_mem.c **** 
1445:Libraries/uC-LIB/lib_mem.c ****     if (pmem_pool->BlkIx >= pmem_pool->BlkNbr) {                    /* Validate mem pool NOT alread
 1782              		.loc 1 1445 0
 1783 0a60 FB68     		ldr	r3, [r7, #12]
 1784 0a62 1B8C     		ldrh	r3, [r3, #32]
 1785 0a64 1A46     		mov	r2, r3
 1786 0a66 FB68     		ldr	r3, [r7, #12]
 1787 0a68 9B6A     		ldr	r3, [r3, #40]
 1788 0a6a 9A42     		cmp	r2, r3
 1789 0a6c 09D3     		bcc	.L99
1446:Libraries/uC-LIB/lib_mem.c ****         CPU_CRITICAL_EXIT();
 1790              		.loc 1 1446 0
 1791 0a6e FFF7FEFF 		bl	CPU_IntDisMeasStop
 1792 0a72 7869     		ldr	r0, [r7, #20]
 1793 0a74 FFF7FEFF 		bl	CPU_SR_Restore
1447:Libraries/uC-LIB/lib_mem.c ****        *perr = LIB_MEM_ERR_POOL_FULL;
 1794              		.loc 1 1447 0
 1795 0a78 7B68     		ldr	r3, [r7, #4]
 1796 0a7a 42F2DD72 		movw	r2, #10205
 1797 0a7e 1A80     		strh	r2, [r3, #0]	@ movhi
1448:Libraries/uC-LIB/lib_mem.c ****         return;
 1798              		.loc 1 1448 0
 1799 0a80 18E0     		b	.L98
 1800              	.L99:
1449:Libraries/uC-LIB/lib_mem.c ****     }
1450:Libraries/uC-LIB/lib_mem.c **** 
1451:Libraries/uC-LIB/lib_mem.c ****                                                                     /* ------------- FREE MEM BLK T
1452:Libraries/uC-LIB/lib_mem.c ****     pmem_pool->PoolPtrs[pmem_pool->BlkIx] = pmem_blk;
 1801              		.loc 1 1452 0
 1802 0a82 FB68     		ldr	r3, [r7, #12]
 1803 0a84 DA69     		ldr	r2, [r3, #28]
 1804 0a86 FB68     		ldr	r3, [r7, #12]
 1805 0a88 1B8C     		ldrh	r3, [r3, #32]
 1806 0a8a 4FEA8303 		lsl	r3, r3, #2
 1807 0a8e D318     		adds	r3, r2, r3
 1808 0a90 BA68     		ldr	r2, [r7, #8]
 1809 0a92 1A60     		str	r2, [r3, #0]
1453:Libraries/uC-LIB/lib_mem.c ****     pmem_pool->BlkIx++;
 1810              		.loc 1 1453 0
 1811 0a94 FB68     		ldr	r3, [r7, #12]
 1812 0a96 1B8C     		ldrh	r3, [r3, #32]
 1813 0a98 03F10103 		add	r3, r3, #1
 1814 0a9c 9AB2     		uxth	r2, r3
 1815 0a9e FB68     		ldr	r3, [r7, #12]
 1816 0aa0 1A84     		strh	r2, [r3, #32]	@ movhi
1454:Libraries/uC-LIB/lib_mem.c **** 
1455:Libraries/uC-LIB/lib_mem.c ****     CPU_CRITICAL_EXIT();
 1817              		.loc 1 1455 0
 1818 0aa2 FFF7FEFF 		bl	CPU_IntDisMeasStop
 1819 0aa6 7869     		ldr	r0, [r7, #20]
 1820 0aa8 FFF7FEFF 		bl	CPU_SR_Restore
1456:Libraries/uC-LIB/lib_mem.c **** 
1457:Libraries/uC-LIB/lib_mem.c ****    *perr = LIB_MEM_ERR_NONE;
 1821              		.loc 1 1457 0
 1822 0aac 7B68     		ldr	r3, [r7, #4]
 1823 0aae 42F21072 		movw	r2, #10000
 1824 0ab2 1A80     		strh	r2, [r3, #0]	@ movhi
 1825              	.L98:
1458:Libraries/uC-LIB/lib_mem.c **** }
 1826              		.loc 1 1458 0
 1827 0ab4 07F11807 		add	r7, r7, #24
 1828 0ab8 BD46     		mov	sp, r7
 1829 0aba 80BD     		pop	{r7, pc}
 1830              		.cfi_endproc
 1831              	.LFE9:
 1833              		.align	2
 1834              		.thumb
 1835              		.thumb_func
 1837              	Mem_PoolSegCalcTotSize:
 1838              	.LFB10:
1459:Libraries/uC-LIB/lib_mem.c **** #endif
1460:Libraries/uC-LIB/lib_mem.c **** 
1461:Libraries/uC-LIB/lib_mem.c **** 
1462:Libraries/uC-LIB/lib_mem.c **** /*$PAGE*/
1463:Libraries/uC-LIB/lib_mem.c **** /*
1464:Libraries/uC-LIB/lib_mem.c **** ***************************************************************************************************
1465:Libraries/uC-LIB/lib_mem.c **** ***************************************************************************************************
1466:Libraries/uC-LIB/lib_mem.c **** *                                           LOCAL FUNCTIONS
1467:Libraries/uC-LIB/lib_mem.c **** ***************************************************************************************************
1468:Libraries/uC-LIB/lib_mem.c **** ***************************************************************************************************
1469:Libraries/uC-LIB/lib_mem.c **** */
1470:Libraries/uC-LIB/lib_mem.c **** 
1471:Libraries/uC-LIB/lib_mem.c **** /*
1472:Libraries/uC-LIB/lib_mem.c **** ***************************************************************************************************
1473:Libraries/uC-LIB/lib_mem.c **** *                                      Mem_PoolBlkIsValidAddr()
1474:Libraries/uC-LIB/lib_mem.c **** *
1475:Libraries/uC-LIB/lib_mem.c **** * Description : Calculates if a given memory block address is valid for the memory pool.
1476:Libraries/uC-LIB/lib_mem.c **** *
1477:Libraries/uC-LIB/lib_mem.c **** * Argument(s) : pmem_pool   Pointer to memory pool structure to validate memory block address.
1478:Libraries/uC-LIB/lib_mem.c **** *               ---------   Argument validated in Mem_PoolBlkFree().
1479:Libraries/uC-LIB/lib_mem.c **** *
1480:Libraries/uC-LIB/lib_mem.c **** *               pmem_blk    Pointer to memory block address to validate.
1481:Libraries/uC-LIB/lib_mem.c **** *               --------    Argument validated in Mem_PoolBlkFree().
1482:Libraries/uC-LIB/lib_mem.c **** *
1483:Libraries/uC-LIB/lib_mem.c **** * Return(s)   : DEF_YES, if valid memory pool block address.
1484:Libraries/uC-LIB/lib_mem.c **** *
1485:Libraries/uC-LIB/lib_mem.c **** *               DEF_NO,  otherwise.
1486:Libraries/uC-LIB/lib_mem.c **** *
1487:Libraries/uC-LIB/lib_mem.c **** * Caller(s)   : Mem_PoolBlkFree().
1488:Libraries/uC-LIB/lib_mem.c **** *
1489:Libraries/uC-LIB/lib_mem.c **** * Note(s)     : none.
1490:Libraries/uC-LIB/lib_mem.c **** ***************************************************************************************************
1491:Libraries/uC-LIB/lib_mem.c **** */
1492:Libraries/uC-LIB/lib_mem.c **** 
1493:Libraries/uC-LIB/lib_mem.c **** #if ((LIB_MEM_CFG_ALLOC_EN       == DEF_ENABLED) && \
1494:Libraries/uC-LIB/lib_mem.c ****      (LIB_MEM_CFG_ARG_CHK_EXT_EN == DEF_ENABLED))
1495:Libraries/uC-LIB/lib_mem.c **** static  CPU_BOOLEAN  Mem_PoolBlkIsValidAddr (MEM_POOL  *pmem_pool,
1496:Libraries/uC-LIB/lib_mem.c ****                                              void      *pmem_blk)
1497:Libraries/uC-LIB/lib_mem.c **** {
1498:Libraries/uC-LIB/lib_mem.c ****     CPU_INT08U   *ppool_addr_first;
1499:Libraries/uC-LIB/lib_mem.c ****     void         *ppool_addr_start;
1500:Libraries/uC-LIB/lib_mem.c ****     void         *ppool_addr_end;
1501:Libraries/uC-LIB/lib_mem.c ****     CPU_SIZE_T    align_offset;
1502:Libraries/uC-LIB/lib_mem.c ****     CPU_SIZE_T    blk_align;
1503:Libraries/uC-LIB/lib_mem.c ****     CPU_SIZE_T    blk_align_offset;
1504:Libraries/uC-LIB/lib_mem.c ****     CPU_SIZE_T    blk_size;
1505:Libraries/uC-LIB/lib_mem.c ****     CPU_SIZE_T    mem_align;
1506:Libraries/uC-LIB/lib_mem.c ****     CPU_SIZE_T    mem_align_offset;
1507:Libraries/uC-LIB/lib_mem.c ****     CPU_SIZE_T    mem_diff;
1508:Libraries/uC-LIB/lib_mem.c ****     CPU_BOOLEAN   addr_valid;
1509:Libraries/uC-LIB/lib_mem.c **** 
1510:Libraries/uC-LIB/lib_mem.c **** 
1511:Libraries/uC-LIB/lib_mem.c ****     ppool_addr_start = pmem_pool->PoolAddrStart;
1512:Libraries/uC-LIB/lib_mem.c ****     ppool_addr_end   = pmem_pool->PoolAddrEnd;
1513:Libraries/uC-LIB/lib_mem.c **** 
1514:Libraries/uC-LIB/lib_mem.c ****     if ((pmem_blk < ppool_addr_start) ||
1515:Libraries/uC-LIB/lib_mem.c ****         (pmem_blk > ppool_addr_end)) {
1516:Libraries/uC-LIB/lib_mem.c ****         return (DEF_NO);
1517:Libraries/uC-LIB/lib_mem.c ****     }
1518:Libraries/uC-LIB/lib_mem.c **** 
1519:Libraries/uC-LIB/lib_mem.c ****     blk_align      = (CPU_SIZE_T)pmem_pool->BlkAlign;
1520:Libraries/uC-LIB/lib_mem.c ****     align_offset   = (CPU_SIZE_T)((CPU_ADDR)ppool_addr_start % blk_align);
1521:Libraries/uC-LIB/lib_mem.c ****     if (align_offset != 0u) {
1522:Libraries/uC-LIB/lib_mem.c ****         mem_align_offset = blk_align - align_offset;
1523:Libraries/uC-LIB/lib_mem.c ****     } else {
1524:Libraries/uC-LIB/lib_mem.c ****         mem_align_offset = 0u;
1525:Libraries/uC-LIB/lib_mem.c ****     }
1526:Libraries/uC-LIB/lib_mem.c **** 
1527:Libraries/uC-LIB/lib_mem.c ****     blk_size     = pmem_pool->BlkSize;
1528:Libraries/uC-LIB/lib_mem.c ****     align_offset = blk_size % blk_align;
1529:Libraries/uC-LIB/lib_mem.c ****     if (align_offset != 0u) {
1530:Libraries/uC-LIB/lib_mem.c ****         blk_align_offset = blk_align - align_offset;
1531:Libraries/uC-LIB/lib_mem.c ****     } else {
1532:Libraries/uC-LIB/lib_mem.c ****         blk_align_offset = 0u;
1533:Libraries/uC-LIB/lib_mem.c ****     }
1534:Libraries/uC-LIB/lib_mem.c **** 
1535:Libraries/uC-LIB/lib_mem.c ****     ppool_addr_first = (CPU_INT08U *)((CPU_INT08U *)ppool_addr_start + mem_align_offset);
1536:Libraries/uC-LIB/lib_mem.c ****     mem_diff         = (CPU_SIZE_T  )((CPU_INT08U *)pmem_blk         - ppool_addr_first);
1537:Libraries/uC-LIB/lib_mem.c ****     mem_align        = (CPU_SIZE_T  )(              blk_size         + blk_align_offset);
1538:Libraries/uC-LIB/lib_mem.c **** 
1539:Libraries/uC-LIB/lib_mem.c ****     addr_valid       = ((mem_diff % mem_align) == 0u) ? DEF_YES : DEF_NO;
1540:Libraries/uC-LIB/lib_mem.c **** 
1541:Libraries/uC-LIB/lib_mem.c ****     return (addr_valid);
1542:Libraries/uC-LIB/lib_mem.c **** }
1543:Libraries/uC-LIB/lib_mem.c **** #endif
1544:Libraries/uC-LIB/lib_mem.c **** 
1545:Libraries/uC-LIB/lib_mem.c **** 
1546:Libraries/uC-LIB/lib_mem.c **** /*$PAGE*/
1547:Libraries/uC-LIB/lib_mem.c **** /*
1548:Libraries/uC-LIB/lib_mem.c **** ***************************************************************************************************
1549:Libraries/uC-LIB/lib_mem.c **** *                                      Mem_PoolSegCalcTotSize()
1550:Libraries/uC-LIB/lib_mem.c **** *
1551:Libraries/uC-LIB/lib_mem.c **** * Description : (1) Calculates total memory segment size for number of blocks with specific size & 
1552:Libraries/uC-LIB/lib_mem.c **** *
1553:Libraries/uC-LIB/lib_mem.c **** *
1554:Libraries/uC-LIB/lib_mem.c **** *                       -----                     ======================  ---
1555:Libraries/uC-LIB/lib_mem.c **** *                         ^       Mem Addr  --->  |  /  /  /  /  /  /  |   ^
1556:Libraries/uC-LIB/lib_mem.c **** *                         |    (see Note #1a)     | /  /  /  /  /  /  /|   |    Mem Align Offset
1557:Libraries/uC-LIB/lib_mem.c **** *                         |                       |/  /  /  /  /  /  / |   |  (see Notes #1e & #2a)
1558:Libraries/uC-LIB/lib_mem.c **** *                         |                       |  /  /  /  /  /  /  |   v
1559:Libraries/uC-LIB/lib_mem.c **** *                         |                       ======================  ---
1560:Libraries/uC-LIB/lib_mem.c **** *                         |                       |                    |   ^
1561:Libraries/uC-LIB/lib_mem.c **** *                         |                       |                    |   |
1562:Libraries/uC-LIB/lib_mem.c **** *                         |                       |     Mem Blk #1     |   |        Blk Size
1563:Libraries/uC-LIB/lib_mem.c **** *                         |                       |                    |   |     (see Note #1c)
1564:Libraries/uC-LIB/lib_mem.c **** *                         |                       |                    |   v
1565:Libraries/uC-LIB/lib_mem.c **** *                         |                       ----------------------  ---
1566:Libraries/uC-LIB/lib_mem.c **** *                         |                       |  /  /  /  /  /  /  |   ^
1567:Libraries/uC-LIB/lib_mem.c **** *                         |                       | /  /  /  /  /  /  /|   |    Blk Align Offset
1568:Libraries/uC-LIB/lib_mem.c **** *                         |                       |/  /  /  /  /  /  / |   |  (see Notes #1f & #2b)
1569:Libraries/uC-LIB/lib_mem.c **** *                         |                       |  /  /  /  /  /  /  |   v
1570:Libraries/uC-LIB/lib_mem.c **** *                         |                       ======================  ---
1571:Libraries/uC-LIB/lib_mem.c **** *                                                 |         .          |
1572:Libraries/uC-LIB/lib_mem.c **** *                     Total Size                  |         .          |
1573:Libraries/uC-LIB/lib_mem.c **** *                   (see Note #2c)                |         .          |
1574:Libraries/uC-LIB/lib_mem.c **** *                                                 ======================  ---
1575:Libraries/uC-LIB/lib_mem.c **** *                         |                       |                    |   ^
1576:Libraries/uC-LIB/lib_mem.c **** *                         |                       |                    |   |
1577:Libraries/uC-LIB/lib_mem.c **** *                         |                       |   Mem Blk #N - 1   |   |        Blk Size
1578:Libraries/uC-LIB/lib_mem.c **** *                         |                       |                    |   |     (see Note #1c)
1579:Libraries/uC-LIB/lib_mem.c **** *                         |                       |                    |   v
1580:Libraries/uC-LIB/lib_mem.c **** *                         |                       ----------------------  ---
1581:Libraries/uC-LIB/lib_mem.c **** *                         |                       |  /  /  /  /  /  /  |   ^
1582:Libraries/uC-LIB/lib_mem.c **** *                         |                       | /  /  /  /  /  /  /|   |    Blk Align Offset
1583:Libraries/uC-LIB/lib_mem.c **** *                         |                       |/  /  /  /  /  /  / |   |  (see Notes #1f & #2b)
1584:Libraries/uC-LIB/lib_mem.c **** *                         |                       |  /  /  /  /  /  /  |   v
1585:Libraries/uC-LIB/lib_mem.c **** *                         |                       ======================  ---
1586:Libraries/uC-LIB/lib_mem.c **** *                         |                       |                    |   ^
1587:Libraries/uC-LIB/lib_mem.c **** *                         |                       |                    |   |
1588:Libraries/uC-LIB/lib_mem.c **** *                         |                       |     Mem Blk #N     |   |        Blk Size
1589:Libraries/uC-LIB/lib_mem.c **** *                         |                       |                    |   |     (see Note #1c)
1590:Libraries/uC-LIB/lib_mem.c **** *                         v                       |                    |   v
1591:Libraries/uC-LIB/lib_mem.c **** *                       -----                     ======================  ---
1592:Libraries/uC-LIB/lib_mem.c **** *
1593:Libraries/uC-LIB/lib_mem.c **** *               where
1594:Libraries/uC-LIB/lib_mem.c **** *
1595:Libraries/uC-LIB/lib_mem.c **** *                   (a) Mem Addr            Memory address of the beginning of the memory block ('p
1596:Libraries/uC-LIB/lib_mem.c **** *
1597:Libraries/uC-LIB/lib_mem.c **** *                   (b) N                   Number of memory blocks to allocate ('blk_nbr')
1598:Libraries/uC-LIB/lib_mem.c **** *
1599:Libraries/uC-LIB/lib_mem.c **** *                   (c) Blk Size            Size   of memory block  to allocate ('blk_size')
1600:Libraries/uC-LIB/lib_mem.c **** *
1601:Libraries/uC-LIB/lib_mem.c **** *                   (d) Align               Required block memory alignment     ('blk_align')
1602:Libraries/uC-LIB/lib_mem.c **** *
1603:Libraries/uC-LIB/lib_mem.c **** *                   (e) Mem Align Offset    Offset required to align first memory block
1604:Libraries/uC-LIB/lib_mem.c **** *
1605:Libraries/uC-LIB/lib_mem.c **** *                   (f) Blk Align Offset    Offset required to align every memory block
1606:Libraries/uC-LIB/lib_mem.c **** *
1607:Libraries/uC-LIB/lib_mem.c **** *
1608:Libraries/uC-LIB/lib_mem.c **** *               (2) The total size is calculated based on the following equations :
1609:Libraries/uC-LIB/lib_mem.c **** *
1610:Libraries/uC-LIB/lib_mem.c **** *                                            { (1) Align - (Mem Addr % Align) , if memory address i
1611:Libraries/uC-LIB/lib_mem.c **** *                   (a) Mem Align Offset  =  {
1612:Libraries/uC-LIB/lib_mem.c **** *                                            { (2) 0                          , if memory address i
1613:Libraries/uC-LIB/lib_mem.c **** *
1614:Libraries/uC-LIB/lib_mem.c **** *
1615:Libraries/uC-LIB/lib_mem.c **** *                                            { (1) Align - (Size     % Align) , if memory block   i
1616:Libraries/uC-LIB/lib_mem.c **** *                   (b) Blk Align Offset  =  {
1617:Libraries/uC-LIB/lib_mem.c **** *                                            { (2) 0                          , if memory block   i
1618:Libraries/uC-LIB/lib_mem.c **** *
1619:Libraries/uC-LIB/lib_mem.c **** *
1620:Libraries/uC-LIB/lib_mem.c **** *                   (c) Total Size        =   Mem Align Offset
1621:Libraries/uC-LIB/lib_mem.c **** *                                         + ((Blk Size + Blk Align Offset) * (N - 1))
1622:Libraries/uC-LIB/lib_mem.c **** *                                         +   Blk Size
1623:Libraries/uC-LIB/lib_mem.c **** *
1624:Libraries/uC-LIB/lib_mem.c **** *
1625:Libraries/uC-LIB/lib_mem.c **** * Argument(s) : pmem_addr   Memory address of the beginning of the memory block.
1626:Libraries/uC-LIB/lib_mem.c **** *
1627:Libraries/uC-LIB/lib_mem.c **** *               blk_nbr     Number of memory blocks to allocate.
1628:Libraries/uC-LIB/lib_mem.c **** *
1629:Libraries/uC-LIB/lib_mem.c **** *               blk_size    Size   of memory block  to allocate.
1630:Libraries/uC-LIB/lib_mem.c **** *
1631:Libraries/uC-LIB/lib_mem.c **** *               blk_align   Required block word-boundary memory alignment (in octets).
1632:Libraries/uC-LIB/lib_mem.c **** *               ---------   Argument validated in Mem_HeapAlloc(),
1633:Libraries/uC-LIB/lib_mem.c **** *                                                 Mem_PoolCreate().
1634:Libraries/uC-LIB/lib_mem.c **** *
1635:Libraries/uC-LIB/lib_mem.c **** * Return(s)   : Total size of memory segment used to allocate the number of blocks, if NO error(s).
1636:Libraries/uC-LIB/lib_mem.c **** *
1637:Libraries/uC-LIB/lib_mem.c **** *               0,                                                                  otherwise.
1638:Libraries/uC-LIB/lib_mem.c **** *$PAGE*
1639:Libraries/uC-LIB/lib_mem.c **** * Caller(s)   : Mem_HeapAlloc(),
1640:Libraries/uC-LIB/lib_mem.c **** *               Mem_PoolCreate().
1641:Libraries/uC-LIB/lib_mem.c **** *
1642:Libraries/uC-LIB/lib_mem.c **** * Note(s)     : none.
1643:Libraries/uC-LIB/lib_mem.c **** ***************************************************************************************************
1644:Libraries/uC-LIB/lib_mem.c **** */
1645:Libraries/uC-LIB/lib_mem.c **** 
1646:Libraries/uC-LIB/lib_mem.c **** #if (LIB_MEM_CFG_ALLOC_EN == DEF_ENABLED)
1647:Libraries/uC-LIB/lib_mem.c **** static  CPU_SIZE_T  Mem_PoolSegCalcTotSize (void        *pmem_addr,
1648:Libraries/uC-LIB/lib_mem.c ****                                             CPU_SIZE_T   blk_nbr,
1649:Libraries/uC-LIB/lib_mem.c ****                                             CPU_SIZE_T   blk_size,
1650:Libraries/uC-LIB/lib_mem.c ****                                             CPU_SIZE_T   blk_align)
1651:Libraries/uC-LIB/lib_mem.c **** {
 1839              		.loc 1 1651 0
 1840              		.cfi_startproc
 1841              		@ args = 0, pretend = 0, frame = 32
 1842              		@ frame_needed = 1, uses_anonymous_args = 0
 1843              		@ link register save eliminated.
 1844 0abc 80B4     		push	{r7}
 1845              	.LCFI30:
 1846              		.cfi_def_cfa_offset 4
 1847              		.cfi_offset 7, -4
 1848 0abe 89B0     		sub	sp, sp, #36
 1849              	.LCFI31:
 1850              		.cfi_def_cfa_offset 40
 1851 0ac0 00AF     		add	r7, sp, #0
 1852              	.LCFI32:
 1853              		.cfi_def_cfa_register 7
 1854 0ac2 F860     		str	r0, [r7, #12]
 1855 0ac4 B960     		str	r1, [r7, #8]
 1856 0ac6 7A60     		str	r2, [r7, #4]
 1857 0ac8 3B60     		str	r3, [r7, #0]
1652:Libraries/uC-LIB/lib_mem.c **** #if (LIB_MEM_CFG_ARG_CHK_EXT_EN == DEF_ENABLED)
1653:Libraries/uC-LIB/lib_mem.c ****     CPU_SIZE_T  blk_size_mem_aligned;
1654:Libraries/uC-LIB/lib_mem.c ****     CPU_SIZE_T  blk_size_aligned;
1655:Libraries/uC-LIB/lib_mem.c ****     CPU_SIZE_T  blk_size_aligned_nbr;
1656:Libraries/uC-LIB/lib_mem.c ****     CPU_SIZE_T  blk_size_tot;
1657:Libraries/uC-LIB/lib_mem.c **** #endif
1658:Libraries/uC-LIB/lib_mem.c ****     CPU_SIZE_T  align_offset;
1659:Libraries/uC-LIB/lib_mem.c ****     CPU_SIZE_T  mem_align_offset;
1660:Libraries/uC-LIB/lib_mem.c ****     CPU_SIZE_T  blk_align_offset;
1661:Libraries/uC-LIB/lib_mem.c ****     CPU_SIZE_T  size_tot;
1662:Libraries/uC-LIB/lib_mem.c **** 
1663:Libraries/uC-LIB/lib_mem.c ****                                                                     /* Calc mem align (see Note #2a
1664:Libraries/uC-LIB/lib_mem.c ****     align_offset = (CPU_ADDR)pmem_addr % blk_align;
 1858              		.loc 1 1664 0
 1859 0aca FB68     		ldr	r3, [r7, #12]
 1860 0acc 3A68     		ldr	r2, [r7, #0]
 1861 0ace B3FBF2F2 		udiv	r2, r3, r2
 1862 0ad2 3968     		ldr	r1, [r7, #0]
 1863 0ad4 01FB02F2 		mul	r2, r1, r2
 1864 0ad8 9B1A     		subs	r3, r3, r2
 1865 0ada 7B61     		str	r3, [r7, #20]
1665:Libraries/uC-LIB/lib_mem.c ****     if (align_offset != 0u) {
 1866              		.loc 1 1665 0
 1867 0adc 7B69     		ldr	r3, [r7, #20]
 1868 0ade 002B     		cmp	r3, #0
 1869 0ae0 04D0     		beq	.L102
1666:Libraries/uC-LIB/lib_mem.c ****         mem_align_offset = blk_align - align_offset;
 1870              		.loc 1 1666 0
 1871 0ae2 3A68     		ldr	r2, [r7, #0]
 1872 0ae4 7B69     		ldr	r3, [r7, #20]
 1873 0ae6 D31A     		subs	r3, r2, r3
 1874 0ae8 FB61     		str	r3, [r7, #28]
 1875 0aea 02E0     		b	.L103
 1876              	.L102:
1667:Libraries/uC-LIB/lib_mem.c ****     } else {
1668:Libraries/uC-LIB/lib_mem.c ****         mem_align_offset = 0u;
 1877              		.loc 1 1668 0
 1878 0aec 4FF00003 		mov	r3, #0
 1879 0af0 FB61     		str	r3, [r7, #28]
 1880              	.L103:
1669:Libraries/uC-LIB/lib_mem.c ****     }
1670:Libraries/uC-LIB/lib_mem.c ****                                                                     /* Calc blk align (see Note #2b
1671:Libraries/uC-LIB/lib_mem.c ****     align_offset = blk_size % blk_align;
 1881              		.loc 1 1671 0
 1882 0af2 7B68     		ldr	r3, [r7, #4]
 1883 0af4 3A68     		ldr	r2, [r7, #0]
 1884 0af6 B3FBF2F2 		udiv	r2, r3, r2
 1885 0afa 3968     		ldr	r1, [r7, #0]
 1886 0afc 01FB02F2 		mul	r2, r1, r2
 1887 0b00 9B1A     		subs	r3, r3, r2
 1888 0b02 7B61     		str	r3, [r7, #20]
1672:Libraries/uC-LIB/lib_mem.c ****     if (align_offset != 0u) {
 1889              		.loc 1 1672 0
 1890 0b04 7B69     		ldr	r3, [r7, #20]
 1891 0b06 002B     		cmp	r3, #0
 1892 0b08 04D0     		beq	.L104
1673:Libraries/uC-LIB/lib_mem.c ****         blk_align_offset = blk_align - align_offset;
 1893              		.loc 1 1673 0
 1894 0b0a 3A68     		ldr	r2, [r7, #0]
 1895 0b0c 7B69     		ldr	r3, [r7, #20]
 1896 0b0e D31A     		subs	r3, r2, r3
 1897 0b10 BB61     		str	r3, [r7, #24]
 1898 0b12 02E0     		b	.L105
 1899              	.L104:
1674:Libraries/uC-LIB/lib_mem.c ****     } else {
1675:Libraries/uC-LIB/lib_mem.c ****         blk_align_offset = 0u;
 1900              		.loc 1 1675 0
 1901 0b14 4FF00003 		mov	r3, #0
 1902 0b18 BB61     		str	r3, [r7, #24]
 1903              	.L105:
1676:Libraries/uC-LIB/lib_mem.c ****     }
1677:Libraries/uC-LIB/lib_mem.c ****                                                                     /* Calc tot size  (see Note #2c
1678:Libraries/uC-LIB/lib_mem.c ****     size_tot = mem_align_offset + ((blk_size + blk_align_offset) * (blk_nbr - 1)) + blk_size;
 1904              		.loc 1 1678 0
 1905 0b1a 7A68     		ldr	r2, [r7, #4]
 1906 0b1c BB69     		ldr	r3, [r7, #24]
 1907 0b1e D318     		adds	r3, r2, r3
 1908 0b20 BA68     		ldr	r2, [r7, #8]
 1909 0b22 02F1FF32 		add	r2, r2, #-1
 1910 0b26 02FB03F2 		mul	r2, r2, r3
 1911 0b2a FB69     		ldr	r3, [r7, #28]
 1912 0b2c D218     		adds	r2, r2, r3
 1913 0b2e 7B68     		ldr	r3, [r7, #4]
 1914 0b30 D318     		adds	r3, r2, r3
 1915 0b32 3B61     		str	r3, [r7, #16]
1679:Libraries/uC-LIB/lib_mem.c **** 
1680:Libraries/uC-LIB/lib_mem.c **** #if (LIB_MEM_CFG_ARG_CHK_EXT_EN == DEF_ENABLED)                     /* Chk ovf of tot size = A + [(
1681:Libraries/uC-LIB/lib_mem.c ****     blk_size_mem_aligned = mem_align_offset + blk_size;             /* Chk ovf of A + E :          
1682:Libraries/uC-LIB/lib_mem.c ****     if ((blk_size_mem_aligned < mem_align_offset) ||
1683:Libraries/uC-LIB/lib_mem.c ****         (blk_size_mem_aligned < blk_size)) {
1684:Libraries/uC-LIB/lib_mem.c ****         return (0u);
1685:Libraries/uC-LIB/lib_mem.c ****     }
1686:Libraries/uC-LIB/lib_mem.c **** 
1687:Libraries/uC-LIB/lib_mem.c ****     if (blk_nbr > 1) {
1688:Libraries/uC-LIB/lib_mem.c ****         blk_size_aligned = blk_size + blk_align_offset;
1689:Libraries/uC-LIB/lib_mem.c ****         if ((blk_size_aligned < blk_align_offset) ||                /* Chk ovf of      (B + C) :   
1690:Libraries/uC-LIB/lib_mem.c ****             (blk_size_aligned < blk_size)) {
1691:Libraries/uC-LIB/lib_mem.c ****             return (0u);
1692:Libraries/uC-LIB/lib_mem.c ****         }
1693:Libraries/uC-LIB/lib_mem.c **** 
1694:Libraries/uC-LIB/lib_mem.c ****         blk_size_aligned_nbr = blk_size_aligned * (blk_nbr - 1);
1695:Libraries/uC-LIB/lib_mem.c ****         if ((blk_size_aligned_nbr < blk_size_aligned) ||            /* Chk ovf of     [(B + C) * D]
1696:Libraries/uC-LIB/lib_mem.c ****             (blk_size_aligned_nbr < blk_align_offset) ||
1697:Libraries/uC-LIB/lib_mem.c ****             (blk_size_aligned_nbr < blk_size)) {
1698:Libraries/uC-LIB/lib_mem.c ****             return (0u);
1699:Libraries/uC-LIB/lib_mem.c ****         }
1700:Libraries/uC-LIB/lib_mem.c **** 
1701:Libraries/uC-LIB/lib_mem.c ****         blk_size_tot = blk_size_aligned_nbr + blk_size;
1702:Libraries/uC-LIB/lib_mem.c ****         if ((blk_size_tot < blk_size_aligned_nbr) ||                /* Chk ovf of     [(B + C) * D]
1703:Libraries/uC-LIB/lib_mem.c ****             (blk_size_tot < blk_size)) {
1704:Libraries/uC-LIB/lib_mem.c ****             return (0u);
1705:Libraries/uC-LIB/lib_mem.c ****         }
1706:Libraries/uC-LIB/lib_mem.c **** 
1707:Libraries/uC-LIB/lib_mem.c ****         if ((size_tot < blk_size_mem_aligned) ||                    /* Chk ovf of A + [(B + C) * D]
1708:Libraries/uC-LIB/lib_mem.c ****             (size_tot < blk_size_aligned_nbr) ||
1709:Libraries/uC-LIB/lib_mem.c ****             (size_tot < blk_size_tot)) {
1710:Libraries/uC-LIB/lib_mem.c ****             return (0u);
1711:Libraries/uC-LIB/lib_mem.c ****         }
1712:Libraries/uC-LIB/lib_mem.c ****     }
1713:Libraries/uC-LIB/lib_mem.c **** #endif
1714:Libraries/uC-LIB/lib_mem.c **** 
1715:Libraries/uC-LIB/lib_mem.c ****     return (size_tot);
 1916              		.loc 1 1715 0
 1917 0b34 3B69     		ldr	r3, [r7, #16]
1716:Libraries/uC-LIB/lib_mem.c **** }
 1918              		.loc 1 1716 0
 1919 0b36 1846     		mov	r0, r3
 1920 0b38 07F12407 		add	r7, r7, #36
 1921 0b3c BD46     		mov	sp, r7
 1922 0b3e 80BC     		pop	{r7}
 1923 0b40 7047     		bx	lr
 1924              		.cfi_endproc
 1925              	.LFE10:
 1927 0b42 00BF     		.align	2
 1928              		.thumb
 1929              		.thumb_func
 1931              	Mem_PoolSegAlloc:
 1932              	.LFB11:
1717:Libraries/uC-LIB/lib_mem.c **** #endif
1718:Libraries/uC-LIB/lib_mem.c **** 
1719:Libraries/uC-LIB/lib_mem.c **** 
1720:Libraries/uC-LIB/lib_mem.c **** /*$PAGE*/
1721:Libraries/uC-LIB/lib_mem.c **** /*
1722:Libraries/uC-LIB/lib_mem.c **** ***************************************************************************************************
1723:Libraries/uC-LIB/lib_mem.c **** *                                         Mem_PoolSegAlloc()
1724:Libraries/uC-LIB/lib_mem.c **** *
1725:Libraries/uC-LIB/lib_mem.c **** * Description : Allocates memory from specific segment.
1726:Libraries/uC-LIB/lib_mem.c **** *
1727:Libraries/uC-LIB/lib_mem.c **** * Argument(s) : pmem_pool   Pointer to memory pool structure containing segment information.
1728:Libraries/uC-LIB/lib_mem.c **** *               ---------   Argument validated in Mem_HeapAlloc(),
1729:Libraries/uC-LIB/lib_mem.c **** *                                                 Mem_PoolCreate().
1730:Libraries/uC-LIB/lib_mem.c **** *
1731:Libraries/uC-LIB/lib_mem.c **** *               size        Size of memory to allocate.
1732:Libraries/uC-LIB/lib_mem.c **** *               ----        Argument validated in Mem_HeapAlloc(),
1733:Libraries/uC-LIB/lib_mem.c **** *                                                 Mem_PoolCreate().
1734:Libraries/uC-LIB/lib_mem.c **** *
1735:Libraries/uC-LIB/lib_mem.c **** *               align       Required starting word-boundary memory alignment (in octets).
1736:Libraries/uC-LIB/lib_mem.c **** *               -----       Argument validated in Mem_HeapAlloc(),
1737:Libraries/uC-LIB/lib_mem.c **** *                                                 Mem_PoolCreate().
1738:Libraries/uC-LIB/lib_mem.c **** *
1739:Libraries/uC-LIB/lib_mem.c **** * Return(s)   : Pointer to allocated memory, if NO error(s).
1740:Libraries/uC-LIB/lib_mem.c **** *
1741:Libraries/uC-LIB/lib_mem.c **** *               Pointer to NULL,             otherwise.
1742:Libraries/uC-LIB/lib_mem.c **** *
1743:Libraries/uC-LIB/lib_mem.c **** * Caller(s)   : Mem_HeapAlloc(),
1744:Libraries/uC-LIB/lib_mem.c **** *               Mem_PoolCreate().
1745:Libraries/uC-LIB/lib_mem.c **** *
1746:Libraries/uC-LIB/lib_mem.c **** * Note(s)     : (1) Allocated memory from the specific segment is NEVER freed after allocation.
1747:Libraries/uC-LIB/lib_mem.c **** *
1748:Libraries/uC-LIB/lib_mem.c **** *               (2) 'pmem_pool' variables MUST ALWAYS be accessed exclusively in critical sections.
1749:Libraries/uC-LIB/lib_mem.c **** *
1750:Libraries/uC-LIB/lib_mem.c **** *                   (a) However, this function is already called within critical sections.
1751:Libraries/uC-LIB/lib_mem.c **** ***************************************************************************************************
1752:Libraries/uC-LIB/lib_mem.c **** */
1753:Libraries/uC-LIB/lib_mem.c **** 
1754:Libraries/uC-LIB/lib_mem.c **** #if (LIB_MEM_CFG_ALLOC_EN == DEF_ENABLED)
1755:Libraries/uC-LIB/lib_mem.c **** static  void  *Mem_PoolSegAlloc (MEM_POOL    *pmem_pool,
1756:Libraries/uC-LIB/lib_mem.c ****                                  CPU_SIZE_T   size,
1757:Libraries/uC-LIB/lib_mem.c ****                                  CPU_SIZE_T   align)
1758:Libraries/uC-LIB/lib_mem.c **** {
 1933              		.loc 1 1758 0
 1934              		.cfi_startproc
 1935              		@ args = 0, pretend = 0, frame = 40
 1936              		@ frame_needed = 1, uses_anonymous_args = 0
 1937              		@ link register save eliminated.
 1938 0b44 80B4     		push	{r7}
 1939              	.LCFI33:
 1940              		.cfi_def_cfa_offset 4
 1941              		.cfi_offset 7, -4
 1942 0b46 8BB0     		sub	sp, sp, #44
 1943              	.LCFI34:
 1944              		.cfi_def_cfa_offset 48
 1945 0b48 00AF     		add	r7, sp, #0
 1946              	.LCFI35:
 1947              		.cfi_def_cfa_register 7
 1948 0b4a F860     		str	r0, [r7, #12]
 1949 0b4c B960     		str	r1, [r7, #8]
 1950 0b4e 7A60     		str	r2, [r7, #4]
1759:Libraries/uC-LIB/lib_mem.c ****     CPU_INT08U  *pmem_addr;
1760:Libraries/uC-LIB/lib_mem.c ****     CPU_INT08U  *pmem_addr_next;
1761:Libraries/uC-LIB/lib_mem.c ****     CPU_SIZE_T   mem_align;
1762:Libraries/uC-LIB/lib_mem.c ****     CPU_SIZE_T   align_offset;
1763:Libraries/uC-LIB/lib_mem.c ****     CPU_SIZE_T   size_tot;
1764:Libraries/uC-LIB/lib_mem.c **** 
1765:Libraries/uC-LIB/lib_mem.c **** 
1766:Libraries/uC-LIB/lib_mem.c ****     pmem_addr = (CPU_INT08U *)pmem_pool->SegAddrNextAvail;
 1951              		.loc 1 1766 0
 1952 0b50 FB68     		ldr	r3, [r7, #12]
 1953 0b52 9B6B     		ldr	r3, [r3, #56]
 1954 0b54 3B62     		str	r3, [r7, #32]
1767:Libraries/uC-LIB/lib_mem.c **** 
1768:Libraries/uC-LIB/lib_mem.c ****     mem_align = (CPU_SIZE_T)((CPU_ADDR)pmem_addr % align);          /* Calc mem align.             
 1955              		.loc 1 1768 0
 1956 0b56 3B6A     		ldr	r3, [r7, #32]
 1957 0b58 7A68     		ldr	r2, [r7, #4]
 1958 0b5a B3FBF2F2 		udiv	r2, r3, r2
 1959 0b5e 7968     		ldr	r1, [r7, #4]
 1960 0b60 01FB02F2 		mul	r2, r1, r2
 1961 0b64 9B1A     		subs	r3, r3, r2
 1962 0b66 FB61     		str	r3, [r7, #28]
1769:Libraries/uC-LIB/lib_mem.c **** 
1770:Libraries/uC-LIB/lib_mem.c ****     if (mem_align != 0u) {
 1963              		.loc 1 1770 0
 1964 0b68 FB69     		ldr	r3, [r7, #28]
 1965 0b6a 002B     		cmp	r3, #0
 1966 0b6c 04D0     		beq	.L107
1771:Libraries/uC-LIB/lib_mem.c ****         align_offset = align - mem_align;
 1967              		.loc 1 1771 0
 1968 0b6e 7A68     		ldr	r2, [r7, #4]
 1969 0b70 FB69     		ldr	r3, [r7, #28]
 1970 0b72 D31A     		subs	r3, r2, r3
 1971 0b74 7B62     		str	r3, [r7, #36]
 1972 0b76 02E0     		b	.L108
 1973              	.L107:
1772:Libraries/uC-LIB/lib_mem.c ****     } else {
1773:Libraries/uC-LIB/lib_mem.c ****         align_offset = 0u;
 1974              		.loc 1 1773 0
 1975 0b78 4FF00003 		mov	r3, #0
 1976 0b7c 7B62     		str	r3, [r7, #36]
 1977              	.L108:
1774:Libraries/uC-LIB/lib_mem.c ****     }
1775:Libraries/uC-LIB/lib_mem.c **** 
1776:Libraries/uC-LIB/lib_mem.c ****     size_tot = align_offset + size;
 1978              		.loc 1 1776 0
 1979 0b7e 7A6A     		ldr	r2, [r7, #36]
 1980 0b80 BB68     		ldr	r3, [r7, #8]
 1981 0b82 D318     		adds	r3, r2, r3
 1982 0b84 BB61     		str	r3, [r7, #24]
1777:Libraries/uC-LIB/lib_mem.c ****     if (size_tot > pmem_pool->SegSizeRem) {                         /* If insufficiemt mem seg size
 1983              		.loc 1 1777 0
 1984 0b86 FB68     		ldr	r3, [r7, #12]
 1985 0b88 1A6C     		ldr	r2, [r3, #64]
 1986 0b8a BB69     		ldr	r3, [r7, #24]
 1987 0b8c 9A42     		cmp	r2, r3
 1988 0b8e 02D2     		bcs	.L109
1778:Libraries/uC-LIB/lib_mem.c ****         return ((void *)0);                                         /* ... rtn NULL.               
 1989              		.loc 1 1778 0
 1990 0b90 4FF00003 		mov	r3, #0
 1991 0b94 11E0     		b	.L110
 1992              	.L109:
1779:Libraries/uC-LIB/lib_mem.c ****     }
1780:Libraries/uC-LIB/lib_mem.c **** 
1781:Libraries/uC-LIB/lib_mem.c **** #if (LIB_MEM_CFG_ARG_CHK_EXT_EN == DEF_ENABLED)
1782:Libraries/uC-LIB/lib_mem.c ****     if ((size_tot < align_offset) ||                                /* If size ovf, ...            
1783:Libraries/uC-LIB/lib_mem.c ****         (size_tot < size)) {
1784:Libraries/uC-LIB/lib_mem.c ****         return ((void *)0);                                         /* ... rtn NULL.               
1785:Libraries/uC-LIB/lib_mem.c ****     }
1786:Libraries/uC-LIB/lib_mem.c **** #endif
1787:Libraries/uC-LIB/lib_mem.c **** 
1788:Libraries/uC-LIB/lib_mem.c ****     pmem_addr_next = pmem_addr + size_tot;
 1993              		.loc 1 1788 0
 1994 0b96 3A6A     		ldr	r2, [r7, #32]
 1995 0b98 BB69     		ldr	r3, [r7, #24]
 1996 0b9a D318     		adds	r3, r2, r3
 1997 0b9c 7B61     		str	r3, [r7, #20]
1789:Libraries/uC-LIB/lib_mem.c **** 
1790:Libraries/uC-LIB/lib_mem.c **** #if (LIB_MEM_CFG_ARG_CHK_EXT_EN == DEF_ENABLED)
1791:Libraries/uC-LIB/lib_mem.c ****     if (pmem_addr_next < pmem_addr) {                               /* If addr ovf, ...            
1792:Libraries/uC-LIB/lib_mem.c ****         return ((void *)0);                                         /* ... rtn NULL.               
1793:Libraries/uC-LIB/lib_mem.c ****     }
1794:Libraries/uC-LIB/lib_mem.c **** #endif
1795:Libraries/uC-LIB/lib_mem.c **** 
1796:Libraries/uC-LIB/lib_mem.c ****     pmem_addr += align_offset;                                      /* Align mem addr.             
 1998              		.loc 1 1796 0
 1999 0b9e 3A6A     		ldr	r2, [r7, #32]
 2000 0ba0 7B6A     		ldr	r3, [r7, #36]
 2001 0ba2 D318     		adds	r3, r2, r3
 2002 0ba4 3B62     		str	r3, [r7, #32]
1797:Libraries/uC-LIB/lib_mem.c **** 
1798:Libraries/uC-LIB/lib_mem.c ****     pmem_pool->SegAddrNextAvail  = (void     *)pmem_addr_next;      /* Adv next avail addr.        
 2003              		.loc 1 1798 0
 2004 0ba6 FB68     		ldr	r3, [r7, #12]
 2005 0ba8 7A69     		ldr	r2, [r7, #20]
 2006 0baa 9A63     		str	r2, [r3, #56]
1799:Libraries/uC-LIB/lib_mem.c ****     pmem_pool->SegSizeRem       -= (CPU_SIZE_T)size_tot;            /* Adj rem mem seg size.       
 2007              		.loc 1 1799 0
 2008 0bac FB68     		ldr	r3, [r7, #12]
 2009 0bae 1A6C     		ldr	r2, [r3, #64]
 2010 0bb0 BB69     		ldr	r3, [r7, #24]
 2011 0bb2 D21A     		subs	r2, r2, r3
 2012 0bb4 FB68     		ldr	r3, [r7, #12]
 2013 0bb6 1A64     		str	r2, [r3, #64]
1800:Libraries/uC-LIB/lib_mem.c **** 
1801:Libraries/uC-LIB/lib_mem.c ****     return ((void *)pmem_addr);
 2014              		.loc 1 1801 0
 2015 0bb8 3B6A     		ldr	r3, [r7, #32]
 2016              	.L110:
1802:Libraries/uC-LIB/lib_mem.c **** }
 2017              		.loc 1 1802 0
 2018 0bba 1846     		mov	r0, r3
 2019 0bbc 07F12C07 		add	r7, r7, #44
 2020 0bc0 BD46     		mov	sp, r7
 2021 0bc2 80BC     		pop	{r7}
 2022 0bc4 7047     		bx	lr
 2023              		.cfi_endproc
 2024              	.LFE11:
 2026              	.Letext0:
 2027              		.file 2 "Libraries/uC-CPU/cpu.h"
 2028              		.file 3 "Libraries/uC-LIB/lib_def.h"
 2029              		.file 4 "Libraries/uC-LIB/lib_mem.h"
DEFINED SYMBOLS
                            *ABS*:00000000 lib_mem.c
                            *COM*:00000004 Mem_PoolTbl
                            *COM*:00000044 Mem_PoolHeap
     /tmp/cc0hhTRq.s:20     .text:00000000 $t
     /tmp/cc0hhTRq.s:25     .text:00000000 Mem_Init
     /tmp/cc0hhTRq.s:129    .text:000000b0 Mem_Clr
     /tmp/cc0hhTRq.s:165    .text:000000d0 Mem_Set
     /tmp/cc0hhTRq.s:334    .text:000001b4 Mem_Copy
     /tmp/cc0hhTRq.s:523    .text:000002bc Mem_Cmp
     /tmp/cc0hhTRq.s:761    .text:00000414 Mem_HeapAlloc
     /tmp/cc0hhTRq.s:1837   .text:00000abc Mem_PoolSegCalcTotSize
     /tmp/cc0hhTRq.s:1931   .text:00000b44 Mem_PoolSegAlloc
     /tmp/cc0hhTRq.s:893    .text:000004e4 Mem_PoolClr
     /tmp/cc0hhTRq.s:1010   .text:0000059c Mem_PoolCreate
     /tmp/cc0hhTRq.s:1651   .text:000009a4 Mem_PoolBlkGet
     /tmp/cc0hhTRq.s:1755   .text:00000a44 Mem_PoolBlkFree
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
CPU_SR_Save
CPU_IntDisMeasStart
CPU_IntDisMeasStop
CPU_SR_Restore
