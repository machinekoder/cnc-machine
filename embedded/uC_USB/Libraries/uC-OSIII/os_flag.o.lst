   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"os_flag.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.align	2
  19              		.global	OSFlagCreate
  20              		.thumb
  21              		.thumb_func
  23              	OSFlagCreate:
  24              	.LFB0:
  25              		.file 1 "Libraries/uC-OSIII/os_flag.c"
   1:Libraries/uC-OSIII/os_flag.c **** /*
   2:Libraries/uC-OSIII/os_flag.c **** ***************************************************************************************************
   3:Libraries/uC-OSIII/os_flag.c **** *                                                      uC/OS-III
   4:Libraries/uC-OSIII/os_flag.c **** *                                                 The Real-Time Kernel
   5:Libraries/uC-OSIII/os_flag.c **** *
   6:Libraries/uC-OSIII/os_flag.c **** *                                  (c) Copyright 2009-2010; Micrium, Inc.; Weston, FL
   7:Libraries/uC-OSIII/os_flag.c **** *                          All rights reserved.  Protected by international copyright laws.
   8:Libraries/uC-OSIII/os_flag.c **** *
   9:Libraries/uC-OSIII/os_flag.c **** *                                                 EVENT FLAG MANAGEMENT
  10:Libraries/uC-OSIII/os_flag.c **** *
  11:Libraries/uC-OSIII/os_flag.c **** * File    : OS_FLAG.C
  12:Libraries/uC-OSIII/os_flag.c **** * By      : JJL
  13:Libraries/uC-OSIII/os_flag.c **** * Version : V3.01.2
  14:Libraries/uC-OSIII/os_flag.c **** *
  15:Libraries/uC-OSIII/os_flag.c **** * LICENSING TERMS:
  16:Libraries/uC-OSIII/os_flag.c **** * ---------------
  17:Libraries/uC-OSIII/os_flag.c **** *               uC/OS-III is provided in source form to registered licensees ONLY.  It is
  18:Libraries/uC-OSIII/os_flag.c **** *               illegal to distribute this source code to any third party unless you receive
  19:Libraries/uC-OSIII/os_flag.c **** *               written permission by an authorized Micrium representative.  Knowledge of
  20:Libraries/uC-OSIII/os_flag.c **** *               the source code may NOT be used to develop a similar product.
  21:Libraries/uC-OSIII/os_flag.c **** *
  22:Libraries/uC-OSIII/os_flag.c **** *               Please help us continue to provide the Embedded community with the finest
  23:Libraries/uC-OSIII/os_flag.c **** *               software available.  Your honesty is greatly appreciated.
  24:Libraries/uC-OSIII/os_flag.c **** *
  25:Libraries/uC-OSIII/os_flag.c **** *               You can contact us at www.micrium.com.
  26:Libraries/uC-OSIII/os_flag.c **** ***************************************************************************************************
  27:Libraries/uC-OSIII/os_flag.c **** */
  28:Libraries/uC-OSIII/os_flag.c **** 
  29:Libraries/uC-OSIII/os_flag.c **** #include  <os.h>
  30:Libraries/uC-OSIII/os_flag.c **** 
  31:Libraries/uC-OSIII/os_flag.c **** #ifdef VSC_INCLUDE_SOURCE_FILE_NAMES
  32:Libraries/uC-OSIII/os_flag.c **** const  CPU_CHAR  *os_flag__c = "$Id: $";
  33:Libraries/uC-OSIII/os_flag.c **** #endif
  34:Libraries/uC-OSIII/os_flag.c **** 
  35:Libraries/uC-OSIII/os_flag.c **** 
  36:Libraries/uC-OSIII/os_flag.c **** #if OS_CFG_FLAG_EN > 0u
  37:Libraries/uC-OSIII/os_flag.c **** 
  38:Libraries/uC-OSIII/os_flag.c **** /*$PAGE*/
  39:Libraries/uC-OSIII/os_flag.c **** /*
  40:Libraries/uC-OSIII/os_flag.c **** ***************************************************************************************************
  41:Libraries/uC-OSIII/os_flag.c **** *                                                 CREATE AN EVENT FLAG
  42:Libraries/uC-OSIII/os_flag.c **** *
  43:Libraries/uC-OSIII/os_flag.c **** * Description: This function is called to create an event flag group.
  44:Libraries/uC-OSIII/os_flag.c **** *
  45:Libraries/uC-OSIII/os_flag.c **** * Arguments  : p_grp          is a pointer to the event flag group to create
  46:Libraries/uC-OSIII/os_flag.c **** *
  47:Libraries/uC-OSIII/os_flag.c **** *              p_name         is the name of the event flag group
  48:Libraries/uC-OSIII/os_flag.c **** *
  49:Libraries/uC-OSIII/os_flag.c **** *              flags          contains the initial value to store in the event flag group (typicall
  50:Libraries/uC-OSIII/os_flag.c **** *
  51:Libraries/uC-OSIII/os_flag.c **** *              p_err          is a pointer to an error code which will be returned to your applicat
  52:Libraries/uC-OSIII/os_flag.c **** *
  53:Libraries/uC-OSIII/os_flag.c **** *                                 OS_ERR_NONE                    if the call was successful.
  54:Libraries/uC-OSIII/os_flag.c **** *                                 OS_ERR_CREATE_ISR              if you attempted to create an Even
  55:Libraries/uC-OSIII/os_flag.c **** *                                 OS_ERR_ILLEGAL_CREATE_RUN_TIME if you are trying to create the Ev
  56:Libraries/uC-OSIII/os_flag.c **** *                                                                   called OSSafetyCriticalStart().
  57:Libraries/uC-OSIII/os_flag.c **** *                                 OS_ERR_NAME                    if 'p_name' is a NULL pointer
  58:Libraries/uC-OSIII/os_flag.c **** *                                 OS_ERR_OBJ_CREATED             if the event flag group has alread
  59:Libraries/uC-OSIII/os_flag.c **** *                                 OS_ERR_OBJ_PTR_NULL            if 'p_grp' is a NULL pointer
  60:Libraries/uC-OSIII/os_flag.c **** *
  61:Libraries/uC-OSIII/os_flag.c **** * Returns    : none
  62:Libraries/uC-OSIII/os_flag.c **** ***************************************************************************************************
  63:Libraries/uC-OSIII/os_flag.c **** */
  64:Libraries/uC-OSIII/os_flag.c **** 
  65:Libraries/uC-OSIII/os_flag.c **** void  OSFlagCreate (OS_FLAG_GRP  *p_grp,
  66:Libraries/uC-OSIII/os_flag.c ****                     CPU_CHAR     *p_name,
  67:Libraries/uC-OSIII/os_flag.c ****                     OS_FLAGS      flags,
  68:Libraries/uC-OSIII/os_flag.c ****                     OS_ERR       *p_err)
  69:Libraries/uC-OSIII/os_flag.c **** {
  26              		.loc 1 69 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 24
  29              		@ frame_needed = 1, uses_anonymous_args = 0
  30 0000 80B5     		push	{r7, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 8
  33              		.cfi_offset 14, -4
  34              		.cfi_offset 7, -8
  35 0002 86B0     		sub	sp, sp, #24
  36              	.LCFI1:
  37              		.cfi_def_cfa_offset 32
  38 0004 00AF     		add	r7, sp, #0
  39              	.LCFI2:
  40              		.cfi_def_cfa_register 7
  41 0006 F860     		str	r0, [r7, #12]
  42 0008 B960     		str	r1, [r7, #8]
  43 000a 7A60     		str	r2, [r7, #4]
  44 000c 3B60     		str	r3, [r7, #0]
  70:Libraries/uC-OSIII/os_flag.c ****     CPU_SR_ALLOC();
  45              		.loc 1 70 0
  46 000e 4FF00003 		mov	r3, #0
  47 0012 7B61     		str	r3, [r7, #20]
  71:Libraries/uC-OSIII/os_flag.c **** 
  72:Libraries/uC-OSIII/os_flag.c **** 
  73:Libraries/uC-OSIII/os_flag.c **** 
  74:Libraries/uC-OSIII/os_flag.c **** #ifdef OS_SAFETY_CRITICAL
  75:Libraries/uC-OSIII/os_flag.c ****     if (p_err == (OS_ERR *)0) {
  76:Libraries/uC-OSIII/os_flag.c ****         OS_SAFETY_CRITICAL_EXCEPTION();
  77:Libraries/uC-OSIII/os_flag.c ****     }
  78:Libraries/uC-OSIII/os_flag.c **** #endif
  79:Libraries/uC-OSIII/os_flag.c **** 
  80:Libraries/uC-OSIII/os_flag.c **** #ifdef OS_SAFETY_CRITICAL_IEC61508
  81:Libraries/uC-OSIII/os_flag.c ****     if (OSSafetyCriticalStartFlag == DEF_TRUE) {
  82:Libraries/uC-OSIII/os_flag.c ****         *p_err = OS_ERR_ILLEGAL_CREATE_RUN_TIME;
  83:Libraries/uC-OSIII/os_flag.c ****         return;
  84:Libraries/uC-OSIII/os_flag.c ****     }
  85:Libraries/uC-OSIII/os_flag.c **** #endif
  86:Libraries/uC-OSIII/os_flag.c **** 
  87:Libraries/uC-OSIII/os_flag.c **** #if OS_CFG_CALLED_FROM_ISR_CHK_EN > 0u
  88:Libraries/uC-OSIII/os_flag.c ****     if (OSIntNestingCtr > (OS_NESTING_CTR)0) {              /* See if called from ISR ...          
  48              		.loc 1 88 0
  49 0014 40F20003 		movw	r3, #:lower16:OSIntNestingCtr
  50 0018 C0F20003 		movt	r3, #:upper16:OSIntNestingCtr
  51 001c 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
  52 001e 002B     		cmp	r3, #0
  53 0020 04D0     		beq	.L2
  89:Libraries/uC-OSIII/os_flag.c ****         *p_err = OS_ERR_CREATE_ISR;                         /* ... can't CREATE from an ISR        
  54              		.loc 1 89 0
  55 0022 3B68     		ldr	r3, [r7, #0]
  56 0024 42F6E162 		movw	r2, #12001
  57 0028 1A80     		strh	r2, [r3, #0]	@ movhi
  90:Libraries/uC-OSIII/os_flag.c ****         return;
  58              		.loc 1 90 0
  59 002a 86E0     		b	.L1
  60              	.L2:
  91:Libraries/uC-OSIII/os_flag.c ****     }
  92:Libraries/uC-OSIII/os_flag.c **** #endif
  93:Libraries/uC-OSIII/os_flag.c **** 
  94:Libraries/uC-OSIII/os_flag.c **** #if OS_CFG_ARG_CHK_EN > 0u
  95:Libraries/uC-OSIII/os_flag.c ****     if (p_grp == (OS_FLAG_GRP *)0) {                        /* Validate 'p_grp'                    
  61              		.loc 1 95 0
  62 002c FB68     		ldr	r3, [r7, #12]
  63 002e 002B     		cmp	r3, #0
  64 0030 04D1     		bne	.L4
  96:Libraries/uC-OSIII/os_flag.c ****         *p_err = OS_ERR_OBJ_PTR_NULL;
  65              		.loc 1 96 0
  66 0032 3B68     		ldr	r3, [r7, #0]
  67 0034 45F6C352 		movw	r2, #24003
  68 0038 1A80     		strh	r2, [r3, #0]	@ movhi
  97:Libraries/uC-OSIII/os_flag.c ****         return;
  69              		.loc 1 97 0
  70 003a 7EE0     		b	.L1
  71              	.L4:
  98:Libraries/uC-OSIII/os_flag.c ****     }
  99:Libraries/uC-OSIII/os_flag.c **** #endif
 100:Libraries/uC-OSIII/os_flag.c **** 
 101:Libraries/uC-OSIII/os_flag.c ****     OS_CRITICAL_ENTER();
  72              		.loc 1 101 0
  73 003c FFF7FEFF 		bl	CPU_SR_Save
  74 0040 7861     		str	r0, [r7, #20]
  75 0042 FFF7FEFF 		bl	CPU_IntDisMeasStart
  76 0046 40F20003 		movw	r3, #:lower16:OSSchedLockNestingCtr
  77 004a C0F20003 		movt	r3, #:upper16:OSSchedLockNestingCtr
  78 004e 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
  79 0050 03F10103 		add	r3, r3, #1
  80 0054 DAB2     		uxtb	r2, r3
  81 0056 40F20003 		movw	r3, #:lower16:OSSchedLockNestingCtr
  82 005a C0F20003 		movt	r3, #:upper16:OSSchedLockNestingCtr
  83 005e 1A70     		strb	r2, [r3, #0]
  84 0060 40F20003 		movw	r3, #:lower16:OSSchedLockNestingCtr
  85 0064 C0F20003 		movt	r3, #:upper16:OSSchedLockNestingCtr
  86 0068 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
  87 006a 012B     		cmp	r3, #1
  88 006c 01D1     		bne	.L5
  89              		.loc 1 101 0 is_stmt 0 discriminator 1
  90 006e FFF7FEFF 		bl	OS_SchedLockTimeMeasStart
  91              	.L5:
  92              		.loc 1 101 0 discriminator 2
  93 0072 FFF7FEFF 		bl	CPU_IntDisMeasStop
  94 0076 7869     		ldr	r0, [r7, #20]
  95 0078 FFF7FEFF 		bl	CPU_SR_Restore
 102:Libraries/uC-OSIII/os_flag.c ****     p_grp->Type    = OS_OBJ_TYPE_FLAG;                      /* Set to event flag group type        
  96              		.loc 1 102 0 is_stmt 1 discriminator 2
  97 007c FA68     		ldr	r2, [r7, #12]
  98 007e 44F64643 		movw	r3, #19526
  99 0082 C4F24173 		movt	r3, 18241
 100 0086 1360     		str	r3, [r2, #0]
 103:Libraries/uC-OSIII/os_flag.c ****     p_grp->NamePtr = p_name;
 101              		.loc 1 103 0 discriminator 2
 102 0088 FB68     		ldr	r3, [r7, #12]
 103 008a BA68     		ldr	r2, [r7, #8]
 104 008c 5A60     		str	r2, [r3, #4]
 104:Libraries/uC-OSIII/os_flag.c ****     p_grp->Flags   = flags;                                 /* Set to desired initial value        
 105              		.loc 1 104 0 discriminator 2
 106 008e FB68     		ldr	r3, [r7, #12]
 107 0090 7A68     		ldr	r2, [r7, #4]
 108 0092 1A62     		str	r2, [r3, #32]
 105:Libraries/uC-OSIII/os_flag.c ****     p_grp->TS      = (CPU_TS)0;
 109              		.loc 1 105 0 discriminator 2
 110 0094 FB68     		ldr	r3, [r7, #12]
 111 0096 4FF00002 		mov	r2, #0
 112 009a 5A62     		str	r2, [r3, #36]
 106:Libraries/uC-OSIII/os_flag.c ****     OS_PendListInit(&p_grp->PendList);
 113              		.loc 1 106 0 discriminator 2
 114 009c FB68     		ldr	r3, [r7, #12]
 115 009e 03F10803 		add	r3, r3, #8
 116 00a2 1846     		mov	r0, r3
 117 00a4 FFF7FEFF 		bl	OS_PendListInit
 107:Libraries/uC-OSIII/os_flag.c **** 
 108:Libraries/uC-OSIII/os_flag.c **** #if OS_CFG_DBG_EN > 0u
 109:Libraries/uC-OSIII/os_flag.c ****     OS_FlagDbgListAdd(p_grp);
 118              		.loc 1 109 0 discriminator 2
 119 00a8 F868     		ldr	r0, [r7, #12]
 120 00aa FFF7FEFF 		bl	OS_FlagDbgListAdd
 110:Libraries/uC-OSIII/os_flag.c **** #endif
 111:Libraries/uC-OSIII/os_flag.c ****     OSFlagQty++;
 121              		.loc 1 111 0 discriminator 2
 122 00ae 40F20003 		movw	r3, #:lower16:OSFlagQty
 123 00b2 C0F20003 		movt	r3, #:upper16:OSFlagQty
 124 00b6 1B88     		ldrh	r3, [r3, #0]
 125 00b8 03F10103 		add	r3, r3, #1
 126 00bc 9AB2     		uxth	r2, r3
 127 00be 40F20003 		movw	r3, #:lower16:OSFlagQty
 128 00c2 C0F20003 		movt	r3, #:upper16:OSFlagQty
 129 00c6 1A80     		strh	r2, [r3, #0]	@ movhi
 112:Libraries/uC-OSIII/os_flag.c **** 
 113:Libraries/uC-OSIII/os_flag.c ****     OS_CRITICAL_EXIT();
 130              		.loc 1 113 0 discriminator 2
 131 00c8 FFF7FEFF 		bl	CPU_SR_Save
 132 00cc 7861     		str	r0, [r7, #20]
 133 00ce FFF7FEFF 		bl	CPU_IntDisMeasStart
 134 00d2 40F20003 		movw	r3, #:lower16:OSSchedLockNestingCtr
 135 00d6 C0F20003 		movt	r3, #:upper16:OSSchedLockNestingCtr
 136 00da 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 137 00dc 03F1FF33 		add	r3, r3, #-1
 138 00e0 DAB2     		uxtb	r2, r3
 139 00e2 40F20003 		movw	r3, #:lower16:OSSchedLockNestingCtr
 140 00e6 C0F20003 		movt	r3, #:upper16:OSSchedLockNestingCtr
 141 00ea 1A70     		strb	r2, [r3, #0]
 142 00ec 40F20003 		movw	r3, #:lower16:OSSchedLockNestingCtr
 143 00f0 C0F20003 		movt	r3, #:upper16:OSSchedLockNestingCtr
 144 00f4 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 145 00f6 002B     		cmp	r3, #0
 146 00f8 16D1     		bne	.L6
 147              		.loc 1 113 0 is_stmt 0 discriminator 1
 148 00fa FFF7FEFF 		bl	OS_SchedLockTimeMeasStop
 149 00fe 40F20003 		movw	r3, #:lower16:OSIntQNbrEntries
 150 0102 C0F20003 		movt	r3, #:upper16:OSIntQNbrEntries
 151 0106 1B88     		ldrh	r3, [r3, #0]
 152 0108 002B     		cmp	r3, #0
 153 010a 07D0     		beq	.L7
 154              		.loc 1 113 0 discriminator 3
 155 010c FFF7FEFF 		bl	CPU_IntDisMeasStop
 156 0110 7869     		ldr	r0, [r7, #20]
 157 0112 FFF7FEFF 		bl	CPU_SR_Restore
 158 0116 FFF7FEFF 		bl	OS_Sched0
 159 011a 0AE0     		b	.L8
 160              	.L7:
 161              		.loc 1 113 0 discriminator 4
 162 011c FFF7FEFF 		bl	CPU_IntDisMeasStop
 163 0120 7869     		ldr	r0, [r7, #20]
 164 0122 FFF7FEFF 		bl	CPU_SR_Restore
 165 0126 04E0     		b	.L8
 166              	.L6:
 167              		.loc 1 113 0 discriminator 2
 168 0128 FFF7FEFF 		bl	CPU_IntDisMeasStop
 169 012c 7869     		ldr	r0, [r7, #20]
 170 012e FFF7FEFF 		bl	CPU_SR_Restore
 171              	.L8:
 114:Libraries/uC-OSIII/os_flag.c ****     *p_err = OS_ERR_NONE;
 172              		.loc 1 114 0 is_stmt 1
 173 0132 3B68     		ldr	r3, [r7, #0]
 174 0134 4FF00002 		mov	r2, #0
 175 0138 1A80     		strh	r2, [r3, #0]	@ movhi
 176              	.L1:
 115:Libraries/uC-OSIII/os_flag.c **** }
 177              		.loc 1 115 0
 178 013a 07F11807 		add	r7, r7, #24
 179 013e BD46     		mov	sp, r7
 180 0140 80BD     		pop	{r7, pc}
 181              		.cfi_endproc
 182              	.LFE0:
 184 0142 00BF     		.align	2
 185              		.global	OSFlagDel
 186              		.thumb
 187              		.thumb_func
 189              	OSFlagDel:
 190              	.LFB1:
 116:Libraries/uC-OSIII/os_flag.c **** 
 117:Libraries/uC-OSIII/os_flag.c **** /*$PAGE*/
 118:Libraries/uC-OSIII/os_flag.c **** /*
 119:Libraries/uC-OSIII/os_flag.c **** ***************************************************************************************************
 120:Libraries/uC-OSIII/os_flag.c **** *                                             DELETE AN EVENT FLAG GROUP
 121:Libraries/uC-OSIII/os_flag.c **** *
 122:Libraries/uC-OSIII/os_flag.c **** * Description: This function deletes an event flag group and readies all tasks pending on the event
 123:Libraries/uC-OSIII/os_flag.c **** *
 124:Libraries/uC-OSIII/os_flag.c **** * Arguments  : p_grp     is a pointer to the desired event flag group.
 125:Libraries/uC-OSIII/os_flag.c **** *
 126:Libraries/uC-OSIII/os_flag.c **** *              opt       determines delete options as follows:
 127:Libraries/uC-OSIII/os_flag.c **** *
 128:Libraries/uC-OSIII/os_flag.c **** *                            OS_OPT_DEL_NO_PEND           Deletes the event flag group ONLY if no t
 129:Libraries/uC-OSIII/os_flag.c **** *                            OS_OPT_DEL_ALWAYS            Deletes the event flag group even if task
 130:Libraries/uC-OSIII/os_flag.c **** *                                                         In this case, all the tasks pending will 
 131:Libraries/uC-OSIII/os_flag.c **** *
 132:Libraries/uC-OSIII/os_flag.c **** *              p_err     is a pointer to an error code that can contain one of the following values
 133:Libraries/uC-OSIII/os_flag.c **** *
 134:Libraries/uC-OSIII/os_flag.c **** *                            OS_ERR_NONE                  The call was successful and the event fla
 135:Libraries/uC-OSIII/os_flag.c **** *                            OS_ERR_DEL_ISR               If you attempted to delete the event flag
 136:Libraries/uC-OSIII/os_flag.c **** *                            OS_ERR_OBJ_PTR_NULL          If 'p_grp' is a NULL pointer.
 137:Libraries/uC-OSIII/os_flag.c **** *                            OS_ERR_OBJ_TYPE              If you didn't pass a pointer to an event 
 138:Libraries/uC-OSIII/os_flag.c **** *                            OS_ERR_OPT_INVALID           An invalid option was specified
 139:Libraries/uC-OSIII/os_flag.c **** *                            OS_ERR_TASK_WAITING          One or more tasks were waiting on the eve
 140:Libraries/uC-OSIII/os_flag.c **** *
 141:Libraries/uC-OSIII/os_flag.c **** * Returns    : == 0          if no tasks were waiting on the event flag group, or upon error.
 142:Libraries/uC-OSIII/os_flag.c **** *              >  0          if one or more tasks waiting on the event flag group are now readied a
 143:Libraries/uC-OSIII/os_flag.c **** *
 144:Libraries/uC-OSIII/os_flag.c **** * Note(s)    : 1) This function must be used with care.  Tasks that would normally expect the prese
 145:Libraries/uC-OSIII/os_flag.c **** *                 group MUST check the return code of OSFlagPost and OSFlagPend().
 146:Libraries/uC-OSIII/os_flag.c **** ***************************************************************************************************
 147:Libraries/uC-OSIII/os_flag.c **** */
 148:Libraries/uC-OSIII/os_flag.c **** 
 149:Libraries/uC-OSIII/os_flag.c **** #if OS_CFG_FLAG_DEL_EN > 0u
 150:Libraries/uC-OSIII/os_flag.c **** OS_OBJ_QTY  OSFlagDel (OS_FLAG_GRP  *p_grp,
 151:Libraries/uC-OSIII/os_flag.c ****                        OS_OPT        opt,
 152:Libraries/uC-OSIII/os_flag.c ****                        OS_ERR       *p_err)
 153:Libraries/uC-OSIII/os_flag.c **** {
 191              		.loc 1 153 0
 192              		.cfi_startproc
 193              		@ args = 0, pretend = 0, frame = 48
 194              		@ frame_needed = 1, uses_anonymous_args = 0
 195 0144 80B5     		push	{r7, lr}
 196              	.LCFI3:
 197              		.cfi_def_cfa_offset 8
 198              		.cfi_offset 14, -4
 199              		.cfi_offset 7, -8
 200 0146 8CB0     		sub	sp, sp, #48
 201              	.LCFI4:
 202              		.cfi_def_cfa_offset 56
 203 0148 00AF     		add	r7, sp, #0
 204              	.LCFI5:
 205              		.cfi_def_cfa_register 7
 206 014a F860     		str	r0, [r7, #12]
 207 014c 0B46     		mov	r3, r1
 208 014e 7A60     		str	r2, [r7, #4]
 209 0150 7B81     		strh	r3, [r7, #10]	@ movhi
 154:Libraries/uC-OSIII/os_flag.c ****     OS_OBJ_QTY        cnt;
 155:Libraries/uC-OSIII/os_flag.c ****     OS_OBJ_QTY        nbr_tasks;
 156:Libraries/uC-OSIII/os_flag.c ****     OS_PEND_DATA     *p_pend_data;
 157:Libraries/uC-OSIII/os_flag.c ****     OS_PEND_LIST     *p_pend_list;
 158:Libraries/uC-OSIII/os_flag.c ****     OS_TCB           *p_tcb;
 159:Libraries/uC-OSIII/os_flag.c ****     CPU_TS            ts;
 160:Libraries/uC-OSIII/os_flag.c ****     CPU_SR_ALLOC();
 210              		.loc 1 160 0
 211 0152 4FF00003 		mov	r3, #0
 212 0156 BB62     		str	r3, [r7, #40]
 161:Libraries/uC-OSIII/os_flag.c **** 
 162:Libraries/uC-OSIII/os_flag.c **** 
 163:Libraries/uC-OSIII/os_flag.c **** 
 164:Libraries/uC-OSIII/os_flag.c **** #ifdef OS_SAFETY_CRITICAL
 165:Libraries/uC-OSIII/os_flag.c ****     if (p_err == (OS_ERR *)0) {
 166:Libraries/uC-OSIII/os_flag.c ****         OS_SAFETY_CRITICAL_EXCEPTION();
 167:Libraries/uC-OSIII/os_flag.c ****     }
 168:Libraries/uC-OSIII/os_flag.c **** #endif
 169:Libraries/uC-OSIII/os_flag.c **** 
 170:Libraries/uC-OSIII/os_flag.c **** #if OS_CFG_CALLED_FROM_ISR_CHK_EN > 0u
 171:Libraries/uC-OSIII/os_flag.c ****     if (OSIntNestingCtr > (OS_NESTING_CTR)0) {              /* See if called from ISR ...          
 213              		.loc 1 171 0
 214 0158 40F20003 		movw	r3, #:lower16:OSIntNestingCtr
 215 015c C0F20003 		movt	r3, #:upper16:OSIntNestingCtr
 216 0160 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 217 0162 002B     		cmp	r3, #0
 218 0164 06D0     		beq	.L10
 172:Libraries/uC-OSIII/os_flag.c ****         *p_err = OS_ERR_DEL_ISR;                            /* ... can't DELETE from an ISR        
 219              		.loc 1 172 0
 220 0166 7B68     		ldr	r3, [r7, #4]
 221 0168 43F2C922 		movw	r2, #13001
 222 016c 1A80     		strh	r2, [r3, #0]	@ movhi
 173:Libraries/uC-OSIII/os_flag.c ****         return ((OS_OBJ_QTY)0);
 223              		.loc 1 173 0
 224 016e 4FF00003 		mov	r3, #0
 225 0172 6BE1     		b	.L11
 226              	.L10:
 174:Libraries/uC-OSIII/os_flag.c ****     }
 175:Libraries/uC-OSIII/os_flag.c **** #endif
 176:Libraries/uC-OSIII/os_flag.c **** 
 177:Libraries/uC-OSIII/os_flag.c **** #if OS_CFG_ARG_CHK_EN > 0u
 178:Libraries/uC-OSIII/os_flag.c ****     if (p_grp == (OS_FLAG_GRP *)0) {                        /* Validate 'p_grp'                    
 227              		.loc 1 178 0
 228 0174 FB68     		ldr	r3, [r7, #12]
 229 0176 002B     		cmp	r3, #0
 230 0178 06D1     		bne	.L12
 179:Libraries/uC-OSIII/os_flag.c ****         *p_err = OS_ERR_OBJ_PTR_NULL;
 231              		.loc 1 179 0
 232 017a 7B68     		ldr	r3, [r7, #4]
 233 017c 45F6C352 		movw	r2, #24003
 234 0180 1A80     		strh	r2, [r3, #0]	@ movhi
 180:Libraries/uC-OSIII/os_flag.c ****         return ((OS_OBJ_QTY)0);
 235              		.loc 1 180 0
 236 0182 4FF00003 		mov	r3, #0
 237 0186 61E1     		b	.L11
 238              	.L12:
 181:Libraries/uC-OSIII/os_flag.c ****     }
 182:Libraries/uC-OSIII/os_flag.c ****     switch (opt) {
 239              		.loc 1 182 0
 240 0188 7B89     		ldrh	r3, [r7, #10]
 241 018a 03F10003 		add	r3, r3, #0
 242 018e 012B     		cmp	r3, #1
 243 0190 09D8     		bhi	.L13
 183:Libraries/uC-OSIII/os_flag.c ****         case OS_OPT_DEL_NO_PEND:
 184:Libraries/uC-OSIII/os_flag.c ****         case OS_OPT_DEL_ALWAYS:
 185:Libraries/uC-OSIII/os_flag.c ****              break;
 244              		.loc 1 185 0
 245 0192 00BF     		nop
 186:Libraries/uC-OSIII/os_flag.c **** 
 187:Libraries/uC-OSIII/os_flag.c ****         default:
 188:Libraries/uC-OSIII/os_flag.c ****              *p_err = OS_ERR_OPT_INVALID;
 189:Libraries/uC-OSIII/os_flag.c ****              return ((OS_OBJ_QTY)0);
 190:Libraries/uC-OSIII/os_flag.c ****     }
 191:Libraries/uC-OSIII/os_flag.c **** #endif
 192:Libraries/uC-OSIII/os_flag.c **** 
 193:Libraries/uC-OSIII/os_flag.c **** #if OS_CFG_OBJ_TYPE_CHK_EN > 0u
 194:Libraries/uC-OSIII/os_flag.c ****     if (p_grp->Type != OS_OBJ_TYPE_FLAG) {                  /* Validate event group object         
 246              		.loc 1 194 0
 247 0194 FB68     		ldr	r3, [r7, #12]
 248 0196 1A68     		ldr	r2, [r3, #0]
 249 0198 44F64643 		movw	r3, #19526
 250 019c C4F24173 		movt	r3, 18241
 251 01a0 9A42     		cmp	r2, r3
 252 01a2 0ED0     		beq	.L16
 253 01a4 06E0     		b	.L36
 254              	.L13:
 188:Libraries/uC-OSIII/os_flag.c ****              *p_err = OS_ERR_OPT_INVALID;
 255              		.loc 1 188 0
 256 01a6 7B68     		ldr	r3, [r7, #4]
 257 01a8 45F62562 		movw	r2, #24101
 258 01ac 1A80     		strh	r2, [r3, #0]	@ movhi
 189:Libraries/uC-OSIII/os_flag.c ****              return ((OS_OBJ_QTY)0);
 259              		.loc 1 189 0
 260 01ae 4FF00003 		mov	r3, #0
 261 01b2 4BE1     		b	.L11
 262              	.L36:
 195:Libraries/uC-OSIII/os_flag.c ****         *p_err = OS_ERR_OBJ_TYPE;
 263              		.loc 1 195 0
 264 01b4 7B68     		ldr	r3, [r7, #4]
 265 01b6 45F6C452 		movw	r2, #24004
 266 01ba 1A80     		strh	r2, [r3, #0]	@ movhi
 196:Libraries/uC-OSIII/os_flag.c ****         return ((OS_OBJ_QTY)0);
 267              		.loc 1 196 0
 268 01bc 4FF00003 		mov	r3, #0
 269 01c0 44E1     		b	.L11
 270              	.L16:
 197:Libraries/uC-OSIII/os_flag.c ****     }
 198:Libraries/uC-OSIII/os_flag.c **** #endif
 199:Libraries/uC-OSIII/os_flag.c ****     OS_CRITICAL_ENTER();
 271              		.loc 1 199 0
 272 01c2 FFF7FEFF 		bl	CPU_SR_Save
 273 01c6 B862     		str	r0, [r7, #40]
 274 01c8 FFF7FEFF 		bl	CPU_IntDisMeasStart
 275 01cc 40F20003 		movw	r3, #:lower16:OSSchedLockNestingCtr
 276 01d0 C0F20003 		movt	r3, #:upper16:OSSchedLockNestingCtr
 277 01d4 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 278 01d6 03F10103 		add	r3, r3, #1
 279 01da DAB2     		uxtb	r2, r3
 280 01dc 40F20003 		movw	r3, #:lower16:OSSchedLockNestingCtr
 281 01e0 C0F20003 		movt	r3, #:upper16:OSSchedLockNestingCtr
 282 01e4 1A70     		strb	r2, [r3, #0]
 283 01e6 40F20003 		movw	r3, #:lower16:OSSchedLockNestingCtr
 284 01ea C0F20003 		movt	r3, #:upper16:OSSchedLockNestingCtr
 285 01ee 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 286 01f0 012B     		cmp	r3, #1
 287 01f2 01D1     		bne	.L17
 288              		.loc 1 199 0 is_stmt 0 discriminator 1
 289 01f4 FFF7FEFF 		bl	OS_SchedLockTimeMeasStart
 290              	.L17:
 291              		.loc 1 199 0 discriminator 2
 292 01f8 FFF7FEFF 		bl	CPU_IntDisMeasStop
 293 01fc B86A     		ldr	r0, [r7, #40]
 294 01fe FFF7FEFF 		bl	CPU_SR_Restore
 200:Libraries/uC-OSIII/os_flag.c ****     p_pend_list = &p_grp->PendList;
 295              		.loc 1 200 0 is_stmt 1 discriminator 2
 296 0202 FB68     		ldr	r3, [r7, #12]
 297 0204 03F10803 		add	r3, r3, #8
 298 0208 7B62     		str	r3, [r7, #36]
 201:Libraries/uC-OSIII/os_flag.c ****     cnt         = p_pend_list->NbrEntries;
 299              		.loc 1 201 0 discriminator 2
 300 020a 7B6A     		ldr	r3, [r7, #36]
 301 020c 1B89     		ldrh	r3, [r3, #8]	@ movhi
 302 020e FB85     		strh	r3, [r7, #46]	@ movhi
 202:Libraries/uC-OSIII/os_flag.c ****     nbr_tasks   = cnt;
 303              		.loc 1 202 0 discriminator 2
 304 0210 FB8D     		ldrh	r3, [r7, #46]	@ movhi
 305 0212 7B84     		strh	r3, [r7, #34]	@ movhi
 203:Libraries/uC-OSIII/os_flag.c ****     switch (opt) {
 306              		.loc 1 203 0 discriminator 2
 307 0214 7B89     		ldrh	r3, [r7, #10]
 308 0216 002B     		cmp	r3, #0
 309 0218 03D0     		beq	.L19
 310 021a 012B     		cmp	r3, #1
 311 021c 00F08B80 		beq	.L20
 312              		.loc 1 203 0 is_stmt 0
 313 0220 D9E0     		b	.L37
 314              	.L19:
 204:Libraries/uC-OSIII/os_flag.c ****         case OS_OPT_DEL_NO_PEND:                            /* Delete group if no task waiting     
 205:Libraries/uC-OSIII/os_flag.c ****              if (nbr_tasks == (OS_OBJ_QTY)0) {
 315              		.loc 1 205 0 is_stmt 1
 316 0222 7B8C     		ldrh	r3, [r7, #34]
 317 0224 002B     		cmp	r3, #0
 318 0226 4CD1     		bne	.L21
 206:Libraries/uC-OSIII/os_flag.c **** #if OS_CFG_DBG_EN > 0u
 207:Libraries/uC-OSIII/os_flag.c ****                  OS_FlagDbgListRemove(p_grp);
 319              		.loc 1 207 0
 320 0228 F868     		ldr	r0, [r7, #12]
 321 022a FFF7FEFF 		bl	OS_FlagDbgListRemove
 208:Libraries/uC-OSIII/os_flag.c **** #endif
 209:Libraries/uC-OSIII/os_flag.c ****                  OSFlagQty--;
 322              		.loc 1 209 0
 323 022e 40F20003 		movw	r3, #:lower16:OSFlagQty
 324 0232 C0F20003 		movt	r3, #:upper16:OSFlagQty
 325 0236 1B88     		ldrh	r3, [r3, #0]
 326 0238 03F1FF33 		add	r3, r3, #-1
 327 023c 9AB2     		uxth	r2, r3
 328 023e 40F20003 		movw	r3, #:lower16:OSFlagQty
 329 0242 C0F20003 		movt	r3, #:upper16:OSFlagQty
 330 0246 1A80     		strh	r2, [r3, #0]	@ movhi
 210:Libraries/uC-OSIII/os_flag.c ****                  OS_FlagClr(p_grp);
 331              		.loc 1 210 0
 332 0248 F868     		ldr	r0, [r7, #12]
 333 024a FFF7FEFF 		bl	OS_FlagClr
 211:Libraries/uC-OSIII/os_flag.c **** 
 212:Libraries/uC-OSIII/os_flag.c ****                  OS_CRITICAL_EXIT();
 334              		.loc 1 212 0
 335 024e FFF7FEFF 		bl	CPU_SR_Save
 336 0252 B862     		str	r0, [r7, #40]
 337 0254 FFF7FEFF 		bl	CPU_IntDisMeasStart
 338 0258 40F20003 		movw	r3, #:lower16:OSSchedLockNestingCtr
 339 025c C0F20003 		movt	r3, #:upper16:OSSchedLockNestingCtr
 340 0260 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 341 0262 03F1FF33 		add	r3, r3, #-1
 342 0266 DAB2     		uxtb	r2, r3
 343 0268 40F20003 		movw	r3, #:lower16:OSSchedLockNestingCtr
 344 026c C0F20003 		movt	r3, #:upper16:OSSchedLockNestingCtr
 345 0270 1A70     		strb	r2, [r3, #0]
 346 0272 40F20003 		movw	r3, #:lower16:OSSchedLockNestingCtr
 347 0276 C0F20003 		movt	r3, #:upper16:OSSchedLockNestingCtr
 348 027a 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 349 027c 002B     		cmp	r3, #0
 350 027e 16D1     		bne	.L22
 351              		.loc 1 212 0 is_stmt 0 discriminator 1
 352 0280 FFF7FEFF 		bl	OS_SchedLockTimeMeasStop
 353 0284 40F20003 		movw	r3, #:lower16:OSIntQNbrEntries
 354 0288 C0F20003 		movt	r3, #:upper16:OSIntQNbrEntries
 355 028c 1B88     		ldrh	r3, [r3, #0]
 356 028e 002B     		cmp	r3, #0
 357 0290 07D0     		beq	.L23
 358              		.loc 1 212 0 discriminator 3
 359 0292 FFF7FEFF 		bl	CPU_IntDisMeasStop
 360 0296 B86A     		ldr	r0, [r7, #40]
 361 0298 FFF7FEFF 		bl	CPU_SR_Restore
 362 029c FFF7FEFF 		bl	OS_Sched0
 363 02a0 0AE0     		b	.L24
 364              	.L23:
 365              		.loc 1 212 0 discriminator 4
 366 02a2 FFF7FEFF 		bl	CPU_IntDisMeasStop
 367 02a6 B86A     		ldr	r0, [r7, #40]
 368 02a8 FFF7FEFF 		bl	CPU_SR_Restore
 369 02ac 04E0     		b	.L24
 370              	.L22:
 371              		.loc 1 212 0 discriminator 2
 372 02ae FFF7FEFF 		bl	CPU_IntDisMeasStop
 373 02b2 B86A     		ldr	r0, [r7, #40]
 374 02b4 FFF7FEFF 		bl	CPU_SR_Restore
 375              	.L24:
 213:Libraries/uC-OSIII/os_flag.c ****                  *p_err = OS_ERR_NONE;
 376              		.loc 1 213 0 is_stmt 1
 377 02b8 7B68     		ldr	r3, [r7, #4]
 378 02ba 4FF00002 		mov	r2, #0
 379 02be 1A80     		strh	r2, [r3, #0]	@ movhi
 214:Libraries/uC-OSIII/os_flag.c ****              } else {
 215:Libraries/uC-OSIII/os_flag.c ****                  OS_CRITICAL_EXIT();
 216:Libraries/uC-OSIII/os_flag.c ****                  *p_err = OS_ERR_TASK_WAITING;
 217:Libraries/uC-OSIII/os_flag.c ****              }
 218:Libraries/uC-OSIII/os_flag.c ****              break;
 380              		.loc 1 218 0
 381 02c0 C3E0     		b	.L29
 382              	.L21:
 215:Libraries/uC-OSIII/os_flag.c ****                  OS_CRITICAL_EXIT();
 383              		.loc 1 215 0
 384 02c2 FFF7FEFF 		bl	CPU_SR_Save
 385 02c6 B862     		str	r0, [r7, #40]
 386 02c8 FFF7FEFF 		bl	CPU_IntDisMeasStart
 387 02cc 40F20003 		movw	r3, #:lower16:OSSchedLockNestingCtr
 388 02d0 C0F20003 		movt	r3, #:upper16:OSSchedLockNestingCtr
 389 02d4 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 390 02d6 03F1FF33 		add	r3, r3, #-1
 391 02da DAB2     		uxtb	r2, r3
 392 02dc 40F20003 		movw	r3, #:lower16:OSSchedLockNestingCtr
 393 02e0 C0F20003 		movt	r3, #:upper16:OSSchedLockNestingCtr
 394 02e4 1A70     		strb	r2, [r3, #0]
 395 02e6 40F20003 		movw	r3, #:lower16:OSSchedLockNestingCtr
 396 02ea C0F20003 		movt	r3, #:upper16:OSSchedLockNestingCtr
 397 02ee 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 398 02f0 002B     		cmp	r3, #0
 399 02f2 16D1     		bne	.L26
 215:Libraries/uC-OSIII/os_flag.c ****                  OS_CRITICAL_EXIT();
 400              		.loc 1 215 0 is_stmt 0 discriminator 1
 401 02f4 FFF7FEFF 		bl	OS_SchedLockTimeMeasStop
 402 02f8 40F20003 		movw	r3, #:lower16:OSIntQNbrEntries
 403 02fc C0F20003 		movt	r3, #:upper16:OSIntQNbrEntries
 404 0300 1B88     		ldrh	r3, [r3, #0]
 405 0302 002B     		cmp	r3, #0
 406 0304 07D0     		beq	.L27
 215:Libraries/uC-OSIII/os_flag.c ****                  OS_CRITICAL_EXIT();
 407              		.loc 1 215 0 discriminator 3
 408 0306 FFF7FEFF 		bl	CPU_IntDisMeasStop
 409 030a B86A     		ldr	r0, [r7, #40]
 410 030c FFF7FEFF 		bl	CPU_SR_Restore
 411 0310 FFF7FEFF 		bl	OS_Sched0
 412 0314 0AE0     		b	.L28
 413              	.L27:
 215:Libraries/uC-OSIII/os_flag.c ****                  OS_CRITICAL_EXIT();
 414              		.loc 1 215 0 discriminator 4
 415 0316 FFF7FEFF 		bl	CPU_IntDisMeasStop
 416 031a B86A     		ldr	r0, [r7, #40]
 417 031c FFF7FEFF 		bl	CPU_SR_Restore
 418 0320 04E0     		b	.L28
 419              	.L26:
 215:Libraries/uC-OSIII/os_flag.c ****                  OS_CRITICAL_EXIT();
 420              		.loc 1 215 0 discriminator 2
 421 0322 FFF7FEFF 		bl	CPU_IntDisMeasStop
 422 0326 B86A     		ldr	r0, [r7, #40]
 423 0328 FFF7FEFF 		bl	CPU_SR_Restore
 424              	.L28:
 216:Libraries/uC-OSIII/os_flag.c ****                  *p_err = OS_ERR_TASK_WAITING;
 425              		.loc 1 216 0 is_stmt 1
 426 032c 7B68     		ldr	r3, [r7, #4]
 427 032e 47F25E12 		movw	r2, #29022
 428 0332 1A80     		strh	r2, [r3, #0]	@ movhi
 429              		.loc 1 218 0
 430 0334 89E0     		b	.L29
 431              	.L20:
 219:Libraries/uC-OSIII/os_flag.c **** 
 220:Libraries/uC-OSIII/os_flag.c ****         case OS_OPT_DEL_ALWAYS:                             /* Always delete the event flag group  
 221:Libraries/uC-OSIII/os_flag.c ****              ts = OS_TS_GET();                              /* Get local time stamp so all tasks ge
 432              		.loc 1 221 0
 433 0336 FFF7FEFF 		bl	CPU_TS_TmrRd
 434 033a F861     		str	r0, [r7, #28]
 222:Libraries/uC-OSIII/os_flag.c ****              while (cnt > 0u) {                             /* Remove all tasks from the pend list 
 435              		.loc 1 222 0
 436 033c 0EE0     		b	.L30
 437              	.L31:
 223:Libraries/uC-OSIII/os_flag.c ****                  p_pend_data = p_pend_list->HeadPtr;
 438              		.loc 1 223 0
 439 033e 7B6A     		ldr	r3, [r7, #36]
 440 0340 1B68     		ldr	r3, [r3, #0]
 441 0342 BB61     		str	r3, [r7, #24]
 224:Libraries/uC-OSIII/os_flag.c ****                  p_tcb       = p_pend_data->TCBPtr;
 442              		.loc 1 224 0
 443 0344 BB69     		ldr	r3, [r7, #24]
 444 0346 9B68     		ldr	r3, [r3, #8]
 445 0348 7B61     		str	r3, [r7, #20]
 225:Libraries/uC-OSIII/os_flag.c ****                  OS_PendObjDel((OS_PEND_OBJ *)((void *)p_grp),
 446              		.loc 1 225 0
 447 034a F868     		ldr	r0, [r7, #12]
 448 034c 7969     		ldr	r1, [r7, #20]
 449 034e FA69     		ldr	r2, [r7, #28]
 450 0350 FFF7FEFF 		bl	OS_PendObjDel
 226:Libraries/uC-OSIII/os_flag.c ****                                p_tcb,
 227:Libraries/uC-OSIII/os_flag.c ****                                ts);
 228:Libraries/uC-OSIII/os_flag.c ****                  cnt--;
 451              		.loc 1 228 0
 452 0354 FB8D     		ldrh	r3, [r7, #46]	@ movhi
 453 0356 03F1FF33 		add	r3, r3, #-1
 454 035a FB85     		strh	r3, [r7, #46]	@ movhi
 455              	.L30:
 222:Libraries/uC-OSIII/os_flag.c ****              while (cnt > 0u) {                             /* Remove all tasks from the pend list 
 456              		.loc 1 222 0 discriminator 1
 457 035c FB8D     		ldrh	r3, [r7, #46]
 458 035e 002B     		cmp	r3, #0
 459 0360 EDD1     		bne	.L31
 229:Libraries/uC-OSIII/os_flag.c ****              }
 230:Libraries/uC-OSIII/os_flag.c **** #if OS_CFG_DBG_EN > 0u
 231:Libraries/uC-OSIII/os_flag.c ****              OS_FlagDbgListRemove(p_grp);
 460              		.loc 1 231 0
 461 0362 F868     		ldr	r0, [r7, #12]
 462 0364 FFF7FEFF 		bl	OS_FlagDbgListRemove
 232:Libraries/uC-OSIII/os_flag.c **** #endif
 233:Libraries/uC-OSIII/os_flag.c ****              OSFlagQty--;
 463              		.loc 1 233 0
 464 0368 40F20003 		movw	r3, #:lower16:OSFlagQty
 465 036c C0F20003 		movt	r3, #:upper16:OSFlagQty
 466 0370 1B88     		ldrh	r3, [r3, #0]
 467 0372 03F1FF33 		add	r3, r3, #-1
 468 0376 9AB2     		uxth	r2, r3
 469 0378 40F20003 		movw	r3, #:lower16:OSFlagQty
 470 037c C0F20003 		movt	r3, #:upper16:OSFlagQty
 471 0380 1A80     		strh	r2, [r3, #0]	@ movhi
 234:Libraries/uC-OSIII/os_flag.c ****              OS_FlagClr(p_grp);
 472              		.loc 1 234 0
 473 0382 F868     		ldr	r0, [r7, #12]
 474 0384 FFF7FEFF 		bl	OS_FlagClr
 235:Libraries/uC-OSIII/os_flag.c ****              OS_CRITICAL_EXIT_NO_SCHED();
 475              		.loc 1 235 0
 476 0388 FFF7FEFF 		bl	CPU_SR_Save
 477 038c B862     		str	r0, [r7, #40]
 478 038e FFF7FEFF 		bl	CPU_IntDisMeasStart
 479 0392 40F20003 		movw	r3, #:lower16:OSSchedLockNestingCtr
 480 0396 C0F20003 		movt	r3, #:upper16:OSSchedLockNestingCtr
 481 039a 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 482 039c 03F1FF33 		add	r3, r3, #-1
 483 03a0 DAB2     		uxtb	r2, r3
 484 03a2 40F20003 		movw	r3, #:lower16:OSSchedLockNestingCtr
 485 03a6 C0F20003 		movt	r3, #:upper16:OSSchedLockNestingCtr
 486 03aa 1A70     		strb	r2, [r3, #0]
 487 03ac 40F20003 		movw	r3, #:lower16:OSSchedLockNestingCtr
 488 03b0 C0F20003 		movt	r3, #:upper16:OSSchedLockNestingCtr
 489 03b4 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 490 03b6 002B     		cmp	r3, #0
 491 03b8 01D1     		bne	.L32
 492              		.loc 1 235 0 is_stmt 0 discriminator 1
 493 03ba FFF7FEFF 		bl	OS_SchedLockTimeMeasStop
 494              	.L32:
 495              		.loc 1 235 0 discriminator 2
 496 03be FFF7FEFF 		bl	CPU_IntDisMeasStop
 497 03c2 B86A     		ldr	r0, [r7, #40]
 498 03c4 FFF7FEFF 		bl	CPU_SR_Restore
 236:Libraries/uC-OSIII/os_flag.c ****              OSSched();                                     /* Find highest priority task ready to 
 499              		.loc 1 236 0 is_stmt 1 discriminator 2
 500 03c8 FFF7FEFF 		bl	OSSched
 237:Libraries/uC-OSIII/os_flag.c ****              *p_err = OS_ERR_NONE;
 501              		.loc 1 237 0 discriminator 2
 502 03cc 7B68     		ldr	r3, [r7, #4]
 503 03ce 4FF00002 		mov	r2, #0
 504 03d2 1A80     		strh	r2, [r3, #0]	@ movhi
 238:Libraries/uC-OSIII/os_flag.c ****              break;
 505              		.loc 1 238 0 discriminator 2
 506 03d4 39E0     		b	.L29
 507              	.L37:
 239:Libraries/uC-OSIII/os_flag.c **** 
 240:Libraries/uC-OSIII/os_flag.c ****         default:
 241:Libraries/uC-OSIII/os_flag.c ****              OS_CRITICAL_EXIT();
 508              		.loc 1 241 0
 509 03d6 FFF7FEFF 		bl	CPU_SR_Save
 510 03da B862     		str	r0, [r7, #40]
 511 03dc FFF7FEFF 		bl	CPU_IntDisMeasStart
 512 03e0 40F20003 		movw	r3, #:lower16:OSSchedLockNestingCtr
 513 03e4 C0F20003 		movt	r3, #:upper16:OSSchedLockNestingCtr
 514 03e8 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 515 03ea 03F1FF33 		add	r3, r3, #-1
 516 03ee DAB2     		uxtb	r2, r3
 517 03f0 40F20003 		movw	r3, #:lower16:OSSchedLockNestingCtr
 518 03f4 C0F20003 		movt	r3, #:upper16:OSSchedLockNestingCtr
 519 03f8 1A70     		strb	r2, [r3, #0]
 520 03fa 40F20003 		movw	r3, #:lower16:OSSchedLockNestingCtr
 521 03fe C0F20003 		movt	r3, #:upper16:OSSchedLockNestingCtr
 522 0402 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 523 0404 002B     		cmp	r3, #0
 524 0406 16D1     		bne	.L33
 525              		.loc 1 241 0 is_stmt 0 discriminator 1
 526 0408 FFF7FEFF 		bl	OS_SchedLockTimeMeasStop
 527 040c 40F20003 		movw	r3, #:lower16:OSIntQNbrEntries
 528 0410 C0F20003 		movt	r3, #:upper16:OSIntQNbrEntries
 529 0414 1B88     		ldrh	r3, [r3, #0]
 530 0416 002B     		cmp	r3, #0
 531 0418 07D0     		beq	.L34
 532              		.loc 1 241 0 discriminator 3
 533 041a FFF7FEFF 		bl	CPU_IntDisMeasStop
 534 041e B86A     		ldr	r0, [r7, #40]
 535 0420 FFF7FEFF 		bl	CPU_SR_Restore
 536 0424 FFF7FEFF 		bl	OS_Sched0
 537 0428 0AE0     		b	.L35
 538              	.L34:
 539              		.loc 1 241 0 discriminator 4
 540 042a FFF7FEFF 		bl	CPU_IntDisMeasStop
 541 042e B86A     		ldr	r0, [r7, #40]
 542 0430 FFF7FEFF 		bl	CPU_SR_Restore
 543 0434 04E0     		b	.L35
 544              	.L33:
 545              		.loc 1 241 0 discriminator 2
 546 0436 FFF7FEFF 		bl	CPU_IntDisMeasStop
 547 043a B86A     		ldr	r0, [r7, #40]
 548 043c FFF7FEFF 		bl	CPU_SR_Restore
 549              	.L35:
 242:Libraries/uC-OSIII/os_flag.c ****              *p_err = OS_ERR_OPT_INVALID;
 550              		.loc 1 242 0 is_stmt 1
 551 0440 7B68     		ldr	r3, [r7, #4]
 552 0442 45F62562 		movw	r2, #24101
 553 0446 1A80     		strh	r2, [r3, #0]	@ movhi
 243:Libraries/uC-OSIII/os_flag.c ****              break;
 554              		.loc 1 243 0
 555 0448 00BF     		nop
 556              	.L29:
 244:Libraries/uC-OSIII/os_flag.c ****     }
 245:Libraries/uC-OSIII/os_flag.c ****     return (nbr_tasks);
 557              		.loc 1 245 0
 558 044a 7B8C     		ldrh	r3, [r7, #34]
 559              	.L11:
 246:Libraries/uC-OSIII/os_flag.c **** }
 560              		.loc 1 246 0
 561 044c 1846     		mov	r0, r3
 562 044e 07F13007 		add	r7, r7, #48
 563 0452 BD46     		mov	sp, r7
 564 0454 80BD     		pop	{r7, pc}
 565              		.cfi_endproc
 566              	.LFE1:
 568 0456 00BF     		.align	2
 569              		.global	OSFlagPend
 570              		.thumb
 571              		.thumb_func
 573              	OSFlagPend:
 574              	.LFB2:
 247:Libraries/uC-OSIII/os_flag.c **** #endif
 248:Libraries/uC-OSIII/os_flag.c **** /*
 249:Libraries/uC-OSIII/os_flag.c **** ***************************************************************************************************
 250:Libraries/uC-OSIII/os_flag.c **** *                                             WAIT ON AN EVENT FLAG GROUP
 251:Libraries/uC-OSIII/os_flag.c **** *
 252:Libraries/uC-OSIII/os_flag.c **** * Description: This function is called to wait for a combination of bits to be set in an event flag
 253:Libraries/uC-OSIII/os_flag.c **** *              application can wait for ANY bit to be set or ALL bits to be set.
 254:Libraries/uC-OSIII/os_flag.c **** *
 255:Libraries/uC-OSIII/os_flag.c **** * Arguments  : p_grp         is a pointer to the desired event flag group.
 256:Libraries/uC-OSIII/os_flag.c **** *
 257:Libraries/uC-OSIII/os_flag.c **** *              flags         Is a bit pattern indicating which bit(s) (i.e. flags) you wish to wait
 258:Libraries/uC-OSIII/os_flag.c **** *                            The bits you want are specified by setting the corresponding bits in '
 259:Libraries/uC-OSIII/os_flag.c **** *                            e.g. if your application wants to wait for bits 0 and 1 then 'flags' w
 260:Libraries/uC-OSIII/os_flag.c **** *
 261:Libraries/uC-OSIII/os_flag.c **** *              timeout       is an optional timeout (in clock ticks) that your task will wait for t
 262:Libraries/uC-OSIII/os_flag.c **** *                            desired bit combination.  If you specify 0, however, your task will wa
 263:Libraries/uC-OSIII/os_flag.c **** *                            forever at the specified event flag group or, until a message arrives.
 264:Libraries/uC-OSIII/os_flag.c **** *
 265:Libraries/uC-OSIII/os_flag.c **** *              opt           specifies whether you want ALL bits to be set or ANY of the bits to be
 266:Libraries/uC-OSIII/os_flag.c **** *                            You can specify the 'ONE' of the following arguments:
 267:Libraries/uC-OSIII/os_flag.c **** *
 268:Libraries/uC-OSIII/os_flag.c **** *                                OS_OPT_PEND_FLAG_CLR_ALL   You will wait for ALL bits in 'flags' t
 269:Libraries/uC-OSIII/os_flag.c **** *                                OS_OPT_PEND_FLAG_CLR_ANY   You will wait for ANY bit  in 'flags' t
 270:Libraries/uC-OSIII/os_flag.c **** *                                OS_OPT_PEND_FLAG_SET_ALL   You will wait for ALL bits in 'flags' t
 271:Libraries/uC-OSIII/os_flag.c **** *                                OS_OPT_PEND_FLAG_SET_ANY   You will wait for ANY bit  in 'flags' t
 272:Libraries/uC-OSIII/os_flag.c **** *
 273:Libraries/uC-OSIII/os_flag.c **** *                            You can 'ADD' OS_OPT_PEND_FLAG_CONSUME if you want the event flag to b
 274:Libraries/uC-OSIII/os_flag.c **** *                                      the call.  Example, to wait for any flag in a group AND then
 275:Libraries/uC-OSIII/os_flag.c **** *                                      the flags that are present, set 'wait_opt' to:
 276:Libraries/uC-OSIII/os_flag.c **** *
 277:Libraries/uC-OSIII/os_flag.c **** *                                      OS_OPT_PEND_FLAG_SET_ANY + OS_OPT_PEND_FLAG_CONSUME
 278:Libraries/uC-OSIII/os_flag.c **** *
 279:Libraries/uC-OSIII/os_flag.c **** *                            You can also 'ADD' the type of pend with 'ONE' of the two option:
 280:Libraries/uC-OSIII/os_flag.c **** *
 281:Libraries/uC-OSIII/os_flag.c **** *                                OS_OPT_PEND_NON_BLOCKING   Task will NOT block if flags are not av
 282:Libraries/uC-OSIII/os_flag.c **** *                                OS_OPT_PEND_BLOCKING       Task will     block if flags are not av
 283:Libraries/uC-OSIII/os_flag.c **** *
 284:Libraries/uC-OSIII/os_flag.c **** *              p_ts          is a pointer to a variable that will receive the timestamp of when the
 285:Libraries/uC-OSIII/os_flag.c **** *                            posted, aborted or the event flag group deleted.  If you pass a NULL p
 286:Libraries/uC-OSIII/os_flag.c **** *                            then you will not get the timestamp.  In other words, passing a NULL p
 287:Libraries/uC-OSIII/os_flag.c **** *                            indicates that you don't need the timestamp.
 288:Libraries/uC-OSIII/os_flag.c **** *
 289:Libraries/uC-OSIII/os_flag.c **** *              p_err         is a pointer to an error code and can be:
 290:Libraries/uC-OSIII/os_flag.c **** *
 291:Libraries/uC-OSIII/os_flag.c **** *                                OS_ERR_NONE                The desired bits have been set within t
 292:Libraries/uC-OSIII/os_flag.c **** *                                OS_ERR_OBJ_PTR_NULL        If 'p_grp' is a NULL pointer.
 293:Libraries/uC-OSIII/os_flag.c **** *                                OS_ERR_OBJ_TYPE            You are not pointing to an event flag g
 294:Libraries/uC-OSIII/os_flag.c **** *                                OS_ERR_OPT_INVALID         You didn't specify a proper 'opt' argum
 295:Libraries/uC-OSIII/os_flag.c **** *                                OS_ERR_PEND_ABORT          The wait on the flag was aborted.
 296:Libraries/uC-OSIII/os_flag.c **** *                                OS_ERR_PEND_ISR            If you tried to PEND from an ISR
 297:Libraries/uC-OSIII/os_flag.c **** *                                OS_ERR_PEND_WOULD_BLOCK    If you specified non-blocking but the f
 298:Libraries/uC-OSIII/os_flag.c **** *                                                           available.
 299:Libraries/uC-OSIII/os_flag.c **** *                                OS_ERR_SCHED_LOCKED        If you called this function when the sc
 300:Libraries/uC-OSIII/os_flag.c **** *                                OS_ERR_TIMEOUT             The bit(s) have not been set in the spe
 301:Libraries/uC-OSIII/os_flag.c **** *
 302:Libraries/uC-OSIII/os_flag.c **** * Returns    : The flags in the event flag group that made the task ready or, 0 if a timeout or an 
 303:Libraries/uC-OSIII/os_flag.c **** *              occurred.
 304:Libraries/uC-OSIII/os_flag.c **** ***************************************************************************************************
 305:Libraries/uC-OSIII/os_flag.c **** */
 306:Libraries/uC-OSIII/os_flag.c **** 
 307:Libraries/uC-OSIII/os_flag.c **** OS_FLAGS  OSFlagPend (OS_FLAG_GRP *p_grp,
 308:Libraries/uC-OSIII/os_flag.c ****                       OS_FLAGS     flags,
 309:Libraries/uC-OSIII/os_flag.c ****                       OS_TICK      timeout,
 310:Libraries/uC-OSIII/os_flag.c ****                       OS_OPT       opt,
 311:Libraries/uC-OSIII/os_flag.c ****                       CPU_TS      *p_ts,
 312:Libraries/uC-OSIII/os_flag.c ****                       OS_ERR      *p_err)
 313:Libraries/uC-OSIII/os_flag.c **** {
 575              		.loc 1 313 0
 576              		.cfi_startproc
 577              		@ args = 8, pretend = 0, frame = 64
 578              		@ frame_needed = 1, uses_anonymous_args = 0
 579 0458 80B5     		push	{r7, lr}
 580              	.LCFI6:
 581              		.cfi_def_cfa_offset 8
 582              		.cfi_offset 14, -4
 583              		.cfi_offset 7, -8
 584 045a 92B0     		sub	sp, sp, #72
 585              	.LCFI7:
 586              		.cfi_def_cfa_offset 80
 587 045c 02AF     		add	r7, sp, #8
 588              	.LCFI8:
 589              		.cfi_def_cfa 7, 72
 590 045e F860     		str	r0, [r7, #12]
 591 0460 B960     		str	r1, [r7, #8]
 592 0462 7A60     		str	r2, [r7, #4]
 593 0464 7B80     		strh	r3, [r7, #2]	@ movhi
 314:Libraries/uC-OSIII/os_flag.c ****     CPU_BOOLEAN   consume;
 315:Libraries/uC-OSIII/os_flag.c ****     OS_FLAGS      flags_rdy;
 316:Libraries/uC-OSIII/os_flag.c ****     OS_OPT        mode;
 317:Libraries/uC-OSIII/os_flag.c ****     OS_PEND_DATA  pend_data;
 318:Libraries/uC-OSIII/os_flag.c ****     CPU_SR_ALLOC();
 594              		.loc 1 318 0
 595 0466 4FF00003 		mov	r3, #0
 596 046a BB63     		str	r3, [r7, #56]
 319:Libraries/uC-OSIII/os_flag.c **** 
 320:Libraries/uC-OSIII/os_flag.c **** 
 321:Libraries/uC-OSIII/os_flag.c **** 
 322:Libraries/uC-OSIII/os_flag.c **** #ifdef OS_SAFETY_CRITICAL
 323:Libraries/uC-OSIII/os_flag.c ****     if (p_err == (OS_ERR *)0) {
 324:Libraries/uC-OSIII/os_flag.c ****         OS_SAFETY_CRITICAL_EXCEPTION();
 325:Libraries/uC-OSIII/os_flag.c ****     }
 326:Libraries/uC-OSIII/os_flag.c **** #endif
 327:Libraries/uC-OSIII/os_flag.c **** 
 328:Libraries/uC-OSIII/os_flag.c **** #if OS_CFG_CALLED_FROM_ISR_CHK_EN > 0u
 329:Libraries/uC-OSIII/os_flag.c ****     if (OSIntNestingCtr > (OS_NESTING_CTR)0) {              /* See if called from ISR ...          
 597              		.loc 1 329 0
 598 046c 40F20003 		movw	r3, #:lower16:OSIntNestingCtr
 599 0470 C0F20003 		movt	r3, #:upper16:OSIntNestingCtr
 600 0474 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 601 0476 002B     		cmp	r3, #0
 602 0478 06D0     		beq	.L39
 330:Libraries/uC-OSIII/os_flag.c ****         *p_err = OS_ERR_PEND_ISR;                           /* ... can't PEND from an ISR          
 603              		.loc 1 330 0
 604 047a FB6C     		ldr	r3, [r7, #76]
 605 047c 46F2AE12 		movw	r2, #25006
 606 0480 1A80     		strh	r2, [r3, #0]	@ movhi
 331:Libraries/uC-OSIII/os_flag.c ****         return ((OS_FLAGS)0);
 607              		.loc 1 331 0
 608 0482 4FF00003 		mov	r3, #0
 609 0486 79E3     		b	.L40
 610              	.L39:
 332:Libraries/uC-OSIII/os_flag.c ****     }
 333:Libraries/uC-OSIII/os_flag.c **** #endif
 334:Libraries/uC-OSIII/os_flag.c **** 
 335:Libraries/uC-OSIII/os_flag.c **** #if OS_CFG_ARG_CHK_EN > 0u
 336:Libraries/uC-OSIII/os_flag.c ****     if (p_grp == (OS_FLAG_GRP *)0) {                        /* Validate arguments                  
 611              		.loc 1 336 0
 612 0488 FB68     		ldr	r3, [r7, #12]
 613 048a 002B     		cmp	r3, #0
 614 048c 06D1     		bne	.L41
 337:Libraries/uC-OSIII/os_flag.c ****         *p_err = OS_ERR_OBJ_PTR_NULL;
 615              		.loc 1 337 0
 616 048e FB6C     		ldr	r3, [r7, #76]
 617 0490 45F6C352 		movw	r2, #24003
 618 0494 1A80     		strh	r2, [r3, #0]	@ movhi
 338:Libraries/uC-OSIII/os_flag.c ****         return ((OS_FLAGS)0);
 619              		.loc 1 338 0
 620 0496 4FF00003 		mov	r3, #0
 621 049a 6FE3     		b	.L40
 622              	.L41:
 339:Libraries/uC-OSIII/os_flag.c ****     }
 340:Libraries/uC-OSIII/os_flag.c **** #endif
 341:Libraries/uC-OSIII/os_flag.c **** 
 342:Libraries/uC-OSIII/os_flag.c **** #if OS_CFG_OBJ_TYPE_CHK_EN > 0u
 343:Libraries/uC-OSIII/os_flag.c ****     if (p_grp->Type != OS_OBJ_TYPE_FLAG) {                  /* Validate that we are pointing at an 
 623              		.loc 1 343 0
 624 049c FB68     		ldr	r3, [r7, #12]
 625 049e 1A68     		ldr	r2, [r3, #0]
 626 04a0 44F64643 		movw	r3, #19526
 627 04a4 C4F24173 		movt	r3, 18241
 628 04a8 9A42     		cmp	r2, r3
 629 04aa 06D0     		beq	.L42
 344:Libraries/uC-OSIII/os_flag.c ****         *p_err = OS_ERR_OBJ_TYPE;
 630              		.loc 1 344 0
 631 04ac FB6C     		ldr	r3, [r7, #76]
 632 04ae 45F6C452 		movw	r2, #24004
 633 04b2 1A80     		strh	r2, [r3, #0]	@ movhi
 345:Libraries/uC-OSIII/os_flag.c ****         return ((OS_FLAGS)0);
 634              		.loc 1 345 0
 635 04b4 4FF00003 		mov	r3, #0
 636 04b8 60E3     		b	.L40
 637              	.L42:
 346:Libraries/uC-OSIII/os_flag.c ****     }
 347:Libraries/uC-OSIII/os_flag.c **** #endif
 348:Libraries/uC-OSIII/os_flag.c **** 
 349:Libraries/uC-OSIII/os_flag.c ****     if ((opt & OS_OPT_PEND_FLAG_CONSUME) != (OS_OPT)0) {    /* See if we need to consume the flags 
 638              		.loc 1 349 0
 639 04ba 7B88     		ldrh	r3, [r7, #2]
 640 04bc 03F48073 		and	r3, r3, #256
 641 04c0 002B     		cmp	r3, #0
 642 04c2 04D0     		beq	.L43
 350:Libraries/uC-OSIII/os_flag.c ****         consume = DEF_TRUE;
 643              		.loc 1 350 0
 644 04c4 4FF00103 		mov	r3, #1
 645 04c8 87F83F30 		strb	r3, [r7, #63]
 646 04cc 03E0     		b	.L44
 647              	.L43:
 351:Libraries/uC-OSIII/os_flag.c ****     } else {
 352:Libraries/uC-OSIII/os_flag.c ****         consume = DEF_FALSE;
 648              		.loc 1 352 0
 649 04ce 4FF00003 		mov	r3, #0
 650 04d2 87F83F30 		strb	r3, [r7, #63]
 651              	.L44:
 353:Libraries/uC-OSIII/os_flag.c ****     }
 354:Libraries/uC-OSIII/os_flag.c **** 
 355:Libraries/uC-OSIII/os_flag.c ****     if (p_ts != (CPU_TS *)0) {
 652              		.loc 1 355 0
 653 04d6 BB6C     		ldr	r3, [r7, #72]
 654 04d8 002B     		cmp	r3, #0
 655 04da 03D0     		beq	.L45
 356:Libraries/uC-OSIII/os_flag.c ****         *p_ts = (CPU_TS)0;                                  /* Initialize the returned timestamp   
 656              		.loc 1 356 0
 657 04dc BB6C     		ldr	r3, [r7, #72]
 658 04de 4FF00002 		mov	r2, #0
 659 04e2 1A60     		str	r2, [r3, #0]
 660              	.L45:
 357:Libraries/uC-OSIII/os_flag.c ****     }
 358:Libraries/uC-OSIII/os_flag.c **** 
 359:Libraries/uC-OSIII/os_flag.c ****     mode = opt & OS_OPT_PEND_FLAG_MASK;
 661              		.loc 1 359 0
 662 04e4 7B88     		ldrh	r3, [r7, #2]	@ movhi
 663 04e6 03F00F03 		and	r3, r3, #15
 664 04ea FB86     		strh	r3, [r7, #54]	@ movhi
 360:Libraries/uC-OSIII/os_flag.c ****     CPU_CRITICAL_ENTER();
 665              		.loc 1 360 0
 666 04ec FFF7FEFF 		bl	CPU_SR_Save
 667 04f0 B863     		str	r0, [r7, #56]
 668 04f2 FFF7FEFF 		bl	CPU_IntDisMeasStart
 361:Libraries/uC-OSIII/os_flag.c ****     switch (mode) {
 669              		.loc 1 361 0
 670 04f6 FB8E     		ldrh	r3, [r7, #54]
 671 04f8 03F1FF33 		add	r3, r3, #-1
 672 04fc 072B     		cmp	r3, #7
 673 04fe 00F26D82 		bhi	.L46
 674 0502 01A2     		adr	r2, .L51
 675 0504 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 676              		.align	2
 677              	.L51:
 678 0508 83070000 		.word	.L47+1
 679 050c B1080000 		.word	.L48+1
 680 0510 DD090000 		.word	.L46+1
 681 0514 29050000 		.word	.L49+1
 682 0518 DD090000 		.word	.L46+1
 683 051c DD090000 		.word	.L46+1
 684 0520 DD090000 		.word	.L46+1
 685 0524 57060000 		.word	.L50+1
 686              	.L49:
 362:Libraries/uC-OSIII/os_flag.c ****         case OS_OPT_PEND_FLAG_SET_ALL:                      /* See if all required flags are set   
 363:Libraries/uC-OSIII/os_flag.c ****              flags_rdy = (OS_FLAGS)(p_grp->Flags & flags);  /* Extract only the bits we want       
 687              		.loc 1 363 0
 688 0528 FB68     		ldr	r3, [r7, #12]
 689 052a 1A6A     		ldr	r2, [r3, #32]
 690 052c BB68     		ldr	r3, [r7, #8]
 691 052e 1340     		ands	r3, r3, r2
 692 0530 3B63     		str	r3, [r7, #48]
 364:Libraries/uC-OSIII/os_flag.c ****              if (flags_rdy == flags) {                      /* Must match ALL the bits that we want
 693              		.loc 1 364 0
 694 0532 3A6B     		ldr	r2, [r7, #48]
 695 0534 BB68     		ldr	r3, [r7, #8]
 696 0536 9A42     		cmp	r2, r3
 697 0538 24D1     		bne	.L52
 365:Libraries/uC-OSIII/os_flag.c ****                  if (consume == DEF_TRUE) {                 /* See if we need to consume the flags 
 698              		.loc 1 365 0
 699 053a 97F83F30 		ldrb	r3, [r7, #63]	@ zero_extendqisi2
 700 053e 012B     		cmp	r3, #1
 701 0540 07D1     		bne	.L53
 366:Libraries/uC-OSIII/os_flag.c ****                      p_grp->Flags &= ~flags_rdy;            /* Clear ONLY the flags that we wanted 
 702              		.loc 1 366 0
 703 0542 FB68     		ldr	r3, [r7, #12]
 704 0544 1A6A     		ldr	r2, [r3, #32]
 705 0546 3B6B     		ldr	r3, [r7, #48]
 706 0548 6FEA0303 		mvn	r3, r3
 707 054c 1A40     		ands	r2, r2, r3
 708 054e FB68     		ldr	r3, [r7, #12]
 709 0550 1A62     		str	r2, [r3, #32]
 710              	.L53:
 367:Libraries/uC-OSIII/os_flag.c ****                  }
 368:Libraries/uC-OSIII/os_flag.c ****                  OSTCBCurPtr->FlagsRdy = flags_rdy;         /* Save flags that were ready          
 711              		.loc 1 368 0
 712 0552 40F20003 		movw	r3, #:lower16:OSTCBCurPtr
 713 0556 C0F20003 		movt	r3, #:upper16:OSTCBCurPtr
 714 055a 1B68     		ldr	r3, [r3, #0]
 715 055c 3A6B     		ldr	r2, [r7, #48]
 716 055e 5A66     		str	r2, [r3, #100]
 369:Libraries/uC-OSIII/os_flag.c ****                  if (p_ts != (CPU_TS *)0) {
 717              		.loc 1 369 0
 718 0560 BB6C     		ldr	r3, [r7, #72]
 719 0562 002B     		cmp	r3, #0
 720 0564 03D0     		beq	.L54
 370:Libraries/uC-OSIII/os_flag.c ****                     *p_ts  = p_grp->TS;
 721              		.loc 1 370 0
 722 0566 FB68     		ldr	r3, [r7, #12]
 723 0568 5A6A     		ldr	r2, [r3, #36]
 724 056a BB6C     		ldr	r3, [r7, #72]
 725 056c 1A60     		str	r2, [r3, #0]
 726              	.L54:
 371:Libraries/uC-OSIII/os_flag.c ****                  }
 372:Libraries/uC-OSIII/os_flag.c ****                  CPU_CRITICAL_EXIT();                       /* Yes, condition met, return to caller
 727              		.loc 1 372 0
 728 056e FFF7FEFF 		bl	CPU_IntDisMeasStop
 729 0572 B86B     		ldr	r0, [r7, #56]
 730 0574 FFF7FEFF 		bl	CPU_SR_Restore
 373:Libraries/uC-OSIII/os_flag.c ****                  *p_err = OS_ERR_NONE;
 731              		.loc 1 373 0
 732 0578 FB6C     		ldr	r3, [r7, #76]
 733 057a 4FF00002 		mov	r2, #0
 734 057e 1A80     		strh	r2, [r3, #0]	@ movhi
 374:Libraries/uC-OSIII/os_flag.c ****                  return (flags_rdy);
 735              		.loc 1 374 0
 736 0580 3B6B     		ldr	r3, [r7, #48]
 737 0582 FBE2     		b	.L40
 738              	.L52:
 375:Libraries/uC-OSIII/os_flag.c ****              } else {                                       /* Block task until events occur or tim
 376:Libraries/uC-OSIII/os_flag.c ****                  if ((opt & OS_OPT_PEND_NON_BLOCKING) != (OS_OPT)0) {
 739              		.loc 1 376 0
 740 0584 7B88     		ldrh	r3, [r7, #2]
 741 0586 1BB2     		sxth	r3, r3
 742 0588 002B     		cmp	r3, #0
 743 058a 0BDA     		bge	.L55
 377:Libraries/uC-OSIII/os_flag.c ****                      CPU_CRITICAL_EXIT();
 744              		.loc 1 377 0
 745 058c FFF7FEFF 		bl	CPU_IntDisMeasStop
 746 0590 B86B     		ldr	r0, [r7, #56]
 747 0592 FFF7FEFF 		bl	CPU_SR_Restore
 378:Libraries/uC-OSIII/os_flag.c ****                      *p_err = OS_ERR_PEND_WOULD_BLOCK;      /* Specified non-blocking so task would
 748              		.loc 1 378 0
 749 0596 FB6C     		ldr	r3, [r7, #76]
 750 0598 46F2B012 		movw	r2, #25008
 751 059c 1A80     		strh	r2, [r3, #0]	@ movhi
 379:Libraries/uC-OSIII/os_flag.c ****                      return ((OS_FLAGS)0);
 752              		.loc 1 379 0
 753 059e 4FF00003 		mov	r3, #0
 754 05a2 EBE2     		b	.L40
 755              	.L55:
 380:Libraries/uC-OSIII/os_flag.c ****                  } else {                                   /* Specified blocking so check is sched
 381:Libraries/uC-OSIII/os_flag.c ****                      if (OSSchedLockNestingCtr > (OS_NESTING_CTR)0) { /* See if called with schedul
 756              		.loc 1 381 0
 757 05a4 40F20003 		movw	r3, #:lower16:OSSchedLockNestingCtr
 758 05a8 C0F20003 		movt	r3, #:upper16:OSSchedLockNestingCtr
 759 05ac 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 760 05ae 002B     		cmp	r3, #0
 761 05b0 0BD0     		beq	.L56
 382:Libraries/uC-OSIII/os_flag.c ****                          CPU_CRITICAL_EXIT();
 762              		.loc 1 382 0
 763 05b2 FFF7FEFF 		bl	CPU_IntDisMeasStop
 764 05b6 B86B     		ldr	r0, [r7, #56]
 765 05b8 FFF7FEFF 		bl	CPU_SR_Restore
 383:Libraries/uC-OSIII/os_flag.c ****                          *p_err = OS_ERR_SCHED_LOCKED;                /* ... can't PEND when locked
 766              		.loc 1 383 0
 767 05bc FB6C     		ldr	r3, [r7, #76]
 768 05be 46F66252 		movw	r2, #28002
 769 05c2 1A80     		strh	r2, [r3, #0]	@ movhi
 384:Libraries/uC-OSIII/os_flag.c ****                          return ((OS_FLAGS)0);
 770              		.loc 1 384 0
 771 05c4 4FF00003 		mov	r3, #0
 772 05c8 D8E2     		b	.L40
 773              	.L56:
 385:Libraries/uC-OSIII/os_flag.c ****                      }
 386:Libraries/uC-OSIII/os_flag.c ****                  }
 387:Libraries/uC-OSIII/os_flag.c **** 
 388:Libraries/uC-OSIII/os_flag.c ****                  OS_CRITICAL_ENTER_CPU_CRITICAL_EXIT();     /* Lock the scheduler/re-enable interru
 774              		.loc 1 388 0
 775 05ca 40F20003 		movw	r3, #:lower16:OSSchedLockNestingCtr
 776 05ce C0F20003 		movt	r3, #:upper16:OSSchedLockNestingCtr
 777 05d2 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 778 05d4 03F10103 		add	r3, r3, #1
 779 05d8 DAB2     		uxtb	r2, r3
 780 05da 40F20003 		movw	r3, #:lower16:OSSchedLockNestingCtr
 781 05de C0F20003 		movt	r3, #:upper16:OSSchedLockNestingCtr
 782 05e2 1A70     		strb	r2, [r3, #0]
 783 05e4 40F20003 		movw	r3, #:lower16:OSSchedLockNestingCtr
 784 05e8 C0F20003 		movt	r3, #:upper16:OSSchedLockNestingCtr
 785 05ec 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 786 05ee 012B     		cmp	r3, #1
 787 05f0 01D1     		bne	.L57
 788              		.loc 1 388 0 is_stmt 0 discriminator 1
 789 05f2 FFF7FEFF 		bl	OS_SchedLockTimeMeasStart
 790              	.L57:
 791              		.loc 1 388 0 discriminator 2
 792 05f6 FFF7FEFF 		bl	CPU_IntDisMeasStop
 793 05fa B86B     		ldr	r0, [r7, #56]
 794 05fc FFF7FEFF 		bl	CPU_SR_Restore
 389:Libraries/uC-OSIII/os_flag.c ****                  OS_FlagBlock(&pend_data,
 795              		.loc 1 389 0 is_stmt 1 discriminator 2
 796 0600 7B88     		ldrh	r3, [r7, #2]
 797 0602 7A68     		ldr	r2, [r7, #4]
 798 0604 0092     		str	r2, [sp, #0]
 799 0606 07F11002 		add	r2, r7, #16
 800 060a 1046     		mov	r0, r2
 801 060c F968     		ldr	r1, [r7, #12]
 802 060e BA68     		ldr	r2, [r7, #8]
 803 0610 FFF7FEFF 		bl	OS_FlagBlock
 390:Libraries/uC-OSIII/os_flag.c ****                               p_grp,
 391:Libraries/uC-OSIII/os_flag.c ****                               flags,
 392:Libraries/uC-OSIII/os_flag.c ****                               opt,
 393:Libraries/uC-OSIII/os_flag.c ****                               timeout);
 394:Libraries/uC-OSIII/os_flag.c ****                  OS_CRITICAL_EXIT_NO_SCHED();
 804              		.loc 1 394 0 discriminator 2
 805 0614 FFF7FEFF 		bl	CPU_SR_Save
 806 0618 B863     		str	r0, [r7, #56]
 807 061a FFF7FEFF 		bl	CPU_IntDisMeasStart
 808 061e 40F20003 		movw	r3, #:lower16:OSSchedLockNestingCtr
 809 0622 C0F20003 		movt	r3, #:upper16:OSSchedLockNestingCtr
 810 0626 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 811 0628 03F1FF33 		add	r3, r3, #-1
 812 062c DAB2     		uxtb	r2, r3
 813 062e 40F20003 		movw	r3, #:lower16:OSSchedLockNestingCtr
 814 0632 C0F20003 		movt	r3, #:upper16:OSSchedLockNestingCtr
 815 0636 1A70     		strb	r2, [r3, #0]
 816 0638 40F20003 		movw	r3, #:lower16:OSSchedLockNestingCtr
 817 063c C0F20003 		movt	r3, #:upper16:OSSchedLockNestingCtr
 818 0640 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 819 0642 002B     		cmp	r3, #0
 820 0644 01D1     		bne	.L58
 821              		.loc 1 394 0 is_stmt 0 discriminator 1
 822 0646 FFF7FEFF 		bl	OS_SchedLockTimeMeasStop
 823              	.L58:
 824              		.loc 1 394 0 discriminator 2
 825 064a FFF7FEFF 		bl	CPU_IntDisMeasStop
 826 064e B86B     		ldr	r0, [r7, #56]
 827 0650 FFF7FEFF 		bl	CPU_SR_Restore
 395:Libraries/uC-OSIII/os_flag.c ****              }
 396:Libraries/uC-OSIII/os_flag.c ****              break;
 828              		.loc 1 396 0 is_stmt 1 discriminator 2
 829 0654 CEE1     		b	.L59
 830              	.L50:
 397:Libraries/uC-OSIII/os_flag.c **** 
 398:Libraries/uC-OSIII/os_flag.c ****         case OS_OPT_PEND_FLAG_SET_ANY:
 399:Libraries/uC-OSIII/os_flag.c ****              flags_rdy = (OS_FLAGS)(p_grp->Flags & flags);  /* Extract only the bits we want       
 831              		.loc 1 399 0
 832 0656 FB68     		ldr	r3, [r7, #12]
 833 0658 1A6A     		ldr	r2, [r3, #32]
 834 065a BB68     		ldr	r3, [r7, #8]
 835 065c 1340     		ands	r3, r3, r2
 836 065e 3B63     		str	r3, [r7, #48]
 400:Libraries/uC-OSIII/os_flag.c ****              if (flags_rdy != (OS_FLAGS)0) {                /* See if any flag set                 
 837              		.loc 1 400 0
 838 0660 3B6B     		ldr	r3, [r7, #48]
 839 0662 002B     		cmp	r3, #0
 840 0664 24D0     		beq	.L60
 401:Libraries/uC-OSIII/os_flag.c ****                  if (consume == DEF_TRUE) {                 /* See if we need to consume the flags 
 841              		.loc 1 401 0
 842 0666 97F83F30 		ldrb	r3, [r7, #63]	@ zero_extendqisi2
 843 066a 012B     		cmp	r3, #1
 844 066c 07D1     		bne	.L61
 402:Libraries/uC-OSIII/os_flag.c ****                      p_grp->Flags &= ~flags_rdy;            /* Clear ONLY the flags that we got    
 845              		.loc 1 402 0
 846 066e FB68     		ldr	r3, [r7, #12]
 847 0670 1A6A     		ldr	r2, [r3, #32]
 848 0672 3B6B     		ldr	r3, [r7, #48]
 849 0674 6FEA0303 		mvn	r3, r3
 850 0678 1A40     		ands	r2, r2, r3
 851 067a FB68     		ldr	r3, [r7, #12]
 852 067c 1A62     		str	r2, [r3, #32]
 853              	.L61:
 403:Libraries/uC-OSIII/os_flag.c ****                  }
 404:Libraries/uC-OSIII/os_flag.c ****                  OSTCBCurPtr->FlagsRdy = flags_rdy;         /* Save flags that were ready          
 854              		.loc 1 404 0
 855 067e 40F20003 		movw	r3, #:lower16:OSTCBCurPtr
 856 0682 C0F20003 		movt	r3, #:upper16:OSTCBCurPtr
 857 0686 1B68     		ldr	r3, [r3, #0]
 858 0688 3A6B     		ldr	r2, [r7, #48]
 859 068a 5A66     		str	r2, [r3, #100]
 405:Libraries/uC-OSIII/os_flag.c ****                  if (p_ts != (CPU_TS *)0) {
 860              		.loc 1 405 0
 861 068c BB6C     		ldr	r3, [r7, #72]
 862 068e 002B     		cmp	r3, #0
 863 0690 03D0     		beq	.L62
 406:Libraries/uC-OSIII/os_flag.c ****                     *p_ts  = p_grp->TS;
 864              		.loc 1 406 0
 865 0692 FB68     		ldr	r3, [r7, #12]
 866 0694 5A6A     		ldr	r2, [r3, #36]
 867 0696 BB6C     		ldr	r3, [r7, #72]
 868 0698 1A60     		str	r2, [r3, #0]
 869              	.L62:
 407:Libraries/uC-OSIII/os_flag.c ****                  }
 408:Libraries/uC-OSIII/os_flag.c ****                  CPU_CRITICAL_EXIT();                       /* Yes, condition met, return to caller
 870              		.loc 1 408 0
 871 069a FFF7FEFF 		bl	CPU_IntDisMeasStop
 872 069e B86B     		ldr	r0, [r7, #56]
 873 06a0 FFF7FEFF 		bl	CPU_SR_Restore
 409:Libraries/uC-OSIII/os_flag.c ****                  *p_err = OS_ERR_NONE;
 874              		.loc 1 409 0
 875 06a4 FB6C     		ldr	r3, [r7, #76]
 876 06a6 4FF00002 		mov	r2, #0
 877 06aa 1A80     		strh	r2, [r3, #0]	@ movhi
 410:Libraries/uC-OSIII/os_flag.c ****                  return (flags_rdy);
 878              		.loc 1 410 0
 879 06ac 3B6B     		ldr	r3, [r7, #48]
 880 06ae 65E2     		b	.L40
 881              	.L60:
 411:Libraries/uC-OSIII/os_flag.c ****              } else {                                       /* Block task until events occur or tim
 412:Libraries/uC-OSIII/os_flag.c ****                  if ((opt & OS_OPT_PEND_NON_BLOCKING) != (OS_OPT)0) {
 882              		.loc 1 412 0
 883 06b0 7B88     		ldrh	r3, [r7, #2]
 884 06b2 1BB2     		sxth	r3, r3
 885 06b4 002B     		cmp	r3, #0
 886 06b6 0BDA     		bge	.L63
 413:Libraries/uC-OSIII/os_flag.c ****                      CPU_CRITICAL_EXIT();
 887              		.loc 1 413 0
 888 06b8 FFF7FEFF 		bl	CPU_IntDisMeasStop
 889 06bc B86B     		ldr	r0, [r7, #56]
 890 06be FFF7FEFF 		bl	CPU_SR_Restore
 414:Libraries/uC-OSIII/os_flag.c ****                      *p_err = OS_ERR_PEND_WOULD_BLOCK;      /* Specified non-blocking so task would
 891              		.loc 1 414 0
 892 06c2 FB6C     		ldr	r3, [r7, #76]
 893 06c4 46F2B012 		movw	r2, #25008
 894 06c8 1A80     		strh	r2, [r3, #0]	@ movhi
 415:Libraries/uC-OSIII/os_flag.c ****                      return ((OS_FLAGS)0);
 895              		.loc 1 415 0
 896 06ca 4FF00003 		mov	r3, #0
 897 06ce 55E2     		b	.L40
 898              	.L63:
 416:Libraries/uC-OSIII/os_flag.c ****                  } else {                                   /* Specified blocking so check is sched
 417:Libraries/uC-OSIII/os_flag.c ****                      if (OSSchedLockNestingCtr > (OS_NESTING_CTR)0) { /* See if called with schedul
 899              		.loc 1 417 0
 900 06d0 40F20003 		movw	r3, #:lower16:OSSchedLockNestingCtr
 901 06d4 C0F20003 		movt	r3, #:upper16:OSSchedLockNestingCtr
 902 06d8 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 903 06da 002B     		cmp	r3, #0
 904 06dc 0BD0     		beq	.L64
 418:Libraries/uC-OSIII/os_flag.c ****                          CPU_CRITICAL_EXIT();
 905              		.loc 1 418 0
 906 06de FFF7FEFF 		bl	CPU_IntDisMeasStop
 907 06e2 B86B     		ldr	r0, [r7, #56]
 908 06e4 FFF7FEFF 		bl	CPU_SR_Restore
 419:Libraries/uC-OSIII/os_flag.c ****                          *p_err = OS_ERR_SCHED_LOCKED;                /* ... can't PEND when locked
 909              		.loc 1 419 0
 910 06e8 FB6C     		ldr	r3, [r7, #76]
 911 06ea 46F66252 		movw	r2, #28002
 912 06ee 1A80     		strh	r2, [r3, #0]	@ movhi
 420:Libraries/uC-OSIII/os_flag.c ****                          return ((OS_FLAGS)0);
 913              		.loc 1 420 0
 914 06f0 4FF00003 		mov	r3, #0
 915 06f4 42E2     		b	.L40
 916              	.L64:
 421:Libraries/uC-OSIII/os_flag.c ****                      }
 422:Libraries/uC-OSIII/os_flag.c ****                  }
 423:Libraries/uC-OSIII/os_flag.c **** 
 424:Libraries/uC-OSIII/os_flag.c ****                  OS_CRITICAL_ENTER_CPU_CRITICAL_EXIT();     /* Lock the scheduler/re-enable interru
 917              		.loc 1 424 0
 918 06f6 40F20003 		movw	r3, #:lower16:OSSchedLockNestingCtr
 919 06fa C0F20003 		movt	r3, #:upper16:OSSchedLockNestingCtr
 920 06fe 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 921 0700 03F10103 		add	r3, r3, #1
 922 0704 DAB2     		uxtb	r2, r3
 923 0706 40F20003 		movw	r3, #:lower16:OSSchedLockNestingCtr
 924 070a C0F20003 		movt	r3, #:upper16:OSSchedLockNestingCtr
 925 070e 1A70     		strb	r2, [r3, #0]
 926 0710 40F20003 		movw	r3, #:lower16:OSSchedLockNestingCtr
 927 0714 C0F20003 		movt	r3, #:upper16:OSSchedLockNestingCtr
 928 0718 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 929 071a 012B     		cmp	r3, #1
 930 071c 01D1     		bne	.L65
 931              		.loc 1 424 0 is_stmt 0 discriminator 1
 932 071e FFF7FEFF 		bl	OS_SchedLockTimeMeasStart
 933              	.L65:
 934              		.loc 1 424 0 discriminator 2
 935 0722 FFF7FEFF 		bl	CPU_IntDisMeasStop
 936 0726 B86B     		ldr	r0, [r7, #56]
 937 0728 FFF7FEFF 		bl	CPU_SR_Restore
 425:Libraries/uC-OSIII/os_flag.c ****                  OS_FlagBlock(&pend_data,
 938              		.loc 1 425 0 is_stmt 1 discriminator 2
 939 072c 7B88     		ldrh	r3, [r7, #2]
 940 072e 7A68     		ldr	r2, [r7, #4]
 941 0730 0092     		str	r2, [sp, #0]
 942 0732 07F11002 		add	r2, r7, #16
 943 0736 1046     		mov	r0, r2
 944 0738 F968     		ldr	r1, [r7, #12]
 945 073a BA68     		ldr	r2, [r7, #8]
 946 073c FFF7FEFF 		bl	OS_FlagBlock
 426:Libraries/uC-OSIII/os_flag.c ****                               p_grp,
 427:Libraries/uC-OSIII/os_flag.c ****                               flags,
 428:Libraries/uC-OSIII/os_flag.c ****                               opt,
 429:Libraries/uC-OSIII/os_flag.c ****                               timeout);
 430:Libraries/uC-OSIII/os_flag.c ****                  OS_CRITICAL_EXIT_NO_SCHED();
 947              		.loc 1 430 0 discriminator 2
 948 0740 FFF7FEFF 		bl	CPU_SR_Save
 949 0744 B863     		str	r0, [r7, #56]
 950 0746 FFF7FEFF 		bl	CPU_IntDisMeasStart
 951 074a 40F20003 		movw	r3, #:lower16:OSSchedLockNestingCtr
 952 074e C0F20003 		movt	r3, #:upper16:OSSchedLockNestingCtr
 953 0752 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 954 0754 03F1FF33 		add	r3, r3, #-1
 955 0758 DAB2     		uxtb	r2, r3
 956 075a 40F20003 		movw	r3, #:lower16:OSSchedLockNestingCtr
 957 075e C0F20003 		movt	r3, #:upper16:OSSchedLockNestingCtr
 958 0762 1A70     		strb	r2, [r3, #0]
 959 0764 40F20003 		movw	r3, #:lower16:OSSchedLockNestingCtr
 960 0768 C0F20003 		movt	r3, #:upper16:OSSchedLockNestingCtr
 961 076c 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 962 076e 002B     		cmp	r3, #0
 963 0770 01D1     		bne	.L66
 964              		.loc 1 430 0 is_stmt 0 discriminator 1
 965 0772 FFF7FEFF 		bl	OS_SchedLockTimeMeasStop
 966              	.L66:
 967              		.loc 1 430 0 discriminator 2
 968 0776 FFF7FEFF 		bl	CPU_IntDisMeasStop
 969 077a B86B     		ldr	r0, [r7, #56]
 970 077c FFF7FEFF 		bl	CPU_SR_Restore
 431:Libraries/uC-OSIII/os_flag.c ****              }
 432:Libraries/uC-OSIII/os_flag.c ****              break;
 971              		.loc 1 432 0 is_stmt 1 discriminator 2
 972 0780 38E1     		b	.L59
 973              	.L47:
 433:Libraries/uC-OSIII/os_flag.c **** 
 434:Libraries/uC-OSIII/os_flag.c **** #if OS_CFG_FLAG_MODE_CLR_EN > 0u
 435:Libraries/uC-OSIII/os_flag.c ****         case OS_OPT_PEND_FLAG_CLR_ALL:                      /* See if all required flags are cleare
 436:Libraries/uC-OSIII/os_flag.c ****              flags_rdy = (OS_FLAGS)(~p_grp->Flags & flags); /* Extract only the bits we want       
 974              		.loc 1 436 0
 975 0782 FB68     		ldr	r3, [r7, #12]
 976 0784 1B6A     		ldr	r3, [r3, #32]
 977 0786 6FEA0302 		mvn	r2, r3
 978 078a BB68     		ldr	r3, [r7, #8]
 979 078c 1340     		ands	r3, r3, r2
 980 078e 3B63     		str	r3, [r7, #48]
 437:Libraries/uC-OSIII/os_flag.c ****              if (flags_rdy == flags) {                      /* Must match ALL the bits that we want
 981              		.loc 1 437 0
 982 0790 3A6B     		ldr	r2, [r7, #48]
 983 0792 BB68     		ldr	r3, [r7, #8]
 984 0794 9A42     		cmp	r2, r3
 985 0796 22D1     		bne	.L67
 438:Libraries/uC-OSIII/os_flag.c ****                  if (consume == DEF_TRUE) {                 /* See if we need to consume the flags 
 986              		.loc 1 438 0
 987 0798 97F83F30 		ldrb	r3, [r7, #63]	@ zero_extendqisi2
 988 079c 012B     		cmp	r3, #1
 989 079e 05D1     		bne	.L68
 439:Libraries/uC-OSIII/os_flag.c ****                      p_grp->Flags |= flags_rdy;             /* Set ONLY the flags that we wanted   
 990              		.loc 1 439 0
 991 07a0 FB68     		ldr	r3, [r7, #12]
 992 07a2 1A6A     		ldr	r2, [r3, #32]
 993 07a4 3B6B     		ldr	r3, [r7, #48]
 994 07a6 1A43     		orrs	r2, r2, r3
 995 07a8 FB68     		ldr	r3, [r7, #12]
 996 07aa 1A62     		str	r2, [r3, #32]
 997              	.L68:
 440:Libraries/uC-OSIII/os_flag.c ****                  }
 441:Libraries/uC-OSIII/os_flag.c ****                  OSTCBCurPtr->FlagsRdy = flags_rdy;         /* Save flags that were ready          
 998              		.loc 1 441 0
 999 07ac 40F20003 		movw	r3, #:lower16:OSTCBCurPtr
 1000 07b0 C0F20003 		movt	r3, #:upper16:OSTCBCurPtr
 1001 07b4 1B68     		ldr	r3, [r3, #0]
 1002 07b6 3A6B     		ldr	r2, [r7, #48]
 1003 07b8 5A66     		str	r2, [r3, #100]
 442:Libraries/uC-OSIII/os_flag.c ****                  if (p_ts != (CPU_TS *)0) {
 1004              		.loc 1 442 0
 1005 07ba BB6C     		ldr	r3, [r7, #72]
 1006 07bc 002B     		cmp	r3, #0
 1007 07be 03D0     		beq	.L69
 443:Libraries/uC-OSIII/os_flag.c ****                     *p_ts  = p_grp->TS;
 1008              		.loc 1 443 0
 1009 07c0 FB68     		ldr	r3, [r7, #12]
 1010 07c2 5A6A     		ldr	r2, [r3, #36]
 1011 07c4 BB6C     		ldr	r3, [r7, #72]
 1012 07c6 1A60     		str	r2, [r3, #0]
 1013              	.L69:
 444:Libraries/uC-OSIII/os_flag.c ****                  }
 445:Libraries/uC-OSIII/os_flag.c ****                  CPU_CRITICAL_EXIT();                       /* Yes, condition met, return to caller
 1014              		.loc 1 445 0
 1015 07c8 FFF7FEFF 		bl	CPU_IntDisMeasStop
 1016 07cc B86B     		ldr	r0, [r7, #56]
 1017 07ce FFF7FEFF 		bl	CPU_SR_Restore
 446:Libraries/uC-OSIII/os_flag.c ****                  *p_err = OS_ERR_NONE;
 1018              		.loc 1 446 0
 1019 07d2 FB6C     		ldr	r3, [r7, #76]
 1020 07d4 4FF00002 		mov	r2, #0
 1021 07d8 1A80     		strh	r2, [r3, #0]	@ movhi
 447:Libraries/uC-OSIII/os_flag.c ****                  return (flags_rdy);
 1022              		.loc 1 447 0
 1023 07da 3B6B     		ldr	r3, [r7, #48]
 1024 07dc CEE1     		b	.L40
 1025              	.L67:
 448:Libraries/uC-OSIII/os_flag.c ****              } else {                                       /* Block task until events occur or tim
 449:Libraries/uC-OSIII/os_flag.c ****                  if ((opt & OS_OPT_PEND_NON_BLOCKING) != (OS_OPT)0) {
 1026              		.loc 1 449 0
 1027 07de 7B88     		ldrh	r3, [r7, #2]
 1028 07e0 1BB2     		sxth	r3, r3
 1029 07e2 002B     		cmp	r3, #0
 1030 07e4 0BDA     		bge	.L70
 450:Libraries/uC-OSIII/os_flag.c ****                      CPU_CRITICAL_EXIT();
 1031              		.loc 1 450 0
 1032 07e6 FFF7FEFF 		bl	CPU_IntDisMeasStop
 1033 07ea B86B     		ldr	r0, [r7, #56]
 1034 07ec FFF7FEFF 		bl	CPU_SR_Restore
 451:Libraries/uC-OSIII/os_flag.c ****                      *p_err = OS_ERR_PEND_WOULD_BLOCK;      /* Specified non-blocking so task would
 1035              		.loc 1 451 0
 1036 07f0 FB6C     		ldr	r3, [r7, #76]
 1037 07f2 46F2B012 		movw	r2, #25008
 1038 07f6 1A80     		strh	r2, [r3, #0]	@ movhi
 452:Libraries/uC-OSIII/os_flag.c ****                      return ((OS_FLAGS)0);
 1039              		.loc 1 452 0
 1040 07f8 4FF00003 		mov	r3, #0
 1041 07fc BEE1     		b	.L40
 1042              	.L70:
 453:Libraries/uC-OSIII/os_flag.c ****                  } else {                                   /* Specified blocking so check is sched
 454:Libraries/uC-OSIII/os_flag.c ****                      if (OSSchedLockNestingCtr > (OS_NESTING_CTR)0) { /* See if called with schedul
 1043              		.loc 1 454 0
 1044 07fe 40F20003 		movw	r3, #:lower16:OSSchedLockNestingCtr
 1045 0802 C0F20003 		movt	r3, #:upper16:OSSchedLockNestingCtr
 1046 0806 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1047 0808 002B     		cmp	r3, #0
 1048 080a 0BD0     		beq	.L71
 455:Libraries/uC-OSIII/os_flag.c ****                          CPU_CRITICAL_EXIT();
 1049              		.loc 1 455 0
 1050 080c FFF7FEFF 		bl	CPU_IntDisMeasStop
 1051 0810 B86B     		ldr	r0, [r7, #56]
 1052 0812 FFF7FEFF 		bl	CPU_SR_Restore
 456:Libraries/uC-OSIII/os_flag.c ****                          *p_err = OS_ERR_SCHED_LOCKED;                /* ... can't PEND when locked
 1053              		.loc 1 456 0
 1054 0816 FB6C     		ldr	r3, [r7, #76]
 1055 0818 46F66252 		movw	r2, #28002
 1056 081c 1A80     		strh	r2, [r3, #0]	@ movhi
 457:Libraries/uC-OSIII/os_flag.c ****                          return ((OS_FLAGS)0);
 1057              		.loc 1 457 0
 1058 081e 4FF00003 		mov	r3, #0
 1059 0822 ABE1     		b	.L40
 1060              	.L71:
 458:Libraries/uC-OSIII/os_flag.c ****                      }
 459:Libraries/uC-OSIII/os_flag.c ****                  }
 460:Libraries/uC-OSIII/os_flag.c **** 
 461:Libraries/uC-OSIII/os_flag.c ****                  OS_CRITICAL_ENTER_CPU_CRITICAL_EXIT();     /* Lock the scheduler/re-enable interru
 1061              		.loc 1 461 0
 1062 0824 40F20003 		movw	r3, #:lower16:OSSchedLockNestingCtr
 1063 0828 C0F20003 		movt	r3, #:upper16:OSSchedLockNestingCtr
 1064 082c 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1065 082e 03F10103 		add	r3, r3, #1
 1066 0832 DAB2     		uxtb	r2, r3
 1067 0834 40F20003 		movw	r3, #:lower16:OSSchedLockNestingCtr
 1068 0838 C0F20003 		movt	r3, #:upper16:OSSchedLockNestingCtr
 1069 083c 1A70     		strb	r2, [r3, #0]
 1070 083e 40F20003 		movw	r3, #:lower16:OSSchedLockNestingCtr
 1071 0842 C0F20003 		movt	r3, #:upper16:OSSchedLockNestingCtr
 1072 0846 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1073 0848 012B     		cmp	r3, #1
 1074 084a 01D1     		bne	.L72
 1075              		.loc 1 461 0 is_stmt 0 discriminator 1
 1076 084c FFF7FEFF 		bl	OS_SchedLockTimeMeasStart
 1077              	.L72:
 1078              		.loc 1 461 0 discriminator 2
 1079 0850 FFF7FEFF 		bl	CPU_IntDisMeasStop
 1080 0854 B86B     		ldr	r0, [r7, #56]
 1081 0856 FFF7FEFF 		bl	CPU_SR_Restore
 462:Libraries/uC-OSIII/os_flag.c ****                  OS_FlagBlock(&pend_data,
 1082              		.loc 1 462 0 is_stmt 1 discriminator 2
 1083 085a 7B88     		ldrh	r3, [r7, #2]
 1084 085c 7A68     		ldr	r2, [r7, #4]
 1085 085e 0092     		str	r2, [sp, #0]
 1086 0860 07F11002 		add	r2, r7, #16
 1087 0864 1046     		mov	r0, r2
 1088 0866 F968     		ldr	r1, [r7, #12]
 1089 0868 BA68     		ldr	r2, [r7, #8]
 1090 086a FFF7FEFF 		bl	OS_FlagBlock
 463:Libraries/uC-OSIII/os_flag.c ****                               p_grp,
 464:Libraries/uC-OSIII/os_flag.c ****                               flags,
 465:Libraries/uC-OSIII/os_flag.c ****                               opt,
 466:Libraries/uC-OSIII/os_flag.c ****                               timeout);
 467:Libraries/uC-OSIII/os_flag.c ****                  OS_CRITICAL_EXIT_NO_SCHED();
 1091              		.loc 1 467 0 discriminator 2
 1092 086e FFF7FEFF 		bl	CPU_SR_Save
 1093 0872 B863     		str	r0, [r7, #56]
 1094 0874 FFF7FEFF 		bl	CPU_IntDisMeasStart
 1095 0878 40F20003 		movw	r3, #:lower16:OSSchedLockNestingCtr
 1096 087c C0F20003 		movt	r3, #:upper16:OSSchedLockNestingCtr
 1097 0880 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1098 0882 03F1FF33 		add	r3, r3, #-1
 1099 0886 DAB2     		uxtb	r2, r3
 1100 0888 40F20003 		movw	r3, #:lower16:OSSchedLockNestingCtr
 1101 088c C0F20003 		movt	r3, #:upper16:OSSchedLockNestingCtr
 1102 0890 1A70     		strb	r2, [r3, #0]
 1103 0892 40F20003 		movw	r3, #:lower16:OSSchedLockNestingCtr
 1104 0896 C0F20003 		movt	r3, #:upper16:OSSchedLockNestingCtr
 1105 089a 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1106 089c 002B     		cmp	r3, #0
 1107 089e 01D1     		bne	.L73
 1108              		.loc 1 467 0 is_stmt 0 discriminator 1
 1109 08a0 FFF7FEFF 		bl	OS_SchedLockTimeMeasStop
 1110              	.L73:
 1111              		.loc 1 467 0 discriminator 2
 1112 08a4 FFF7FEFF 		bl	CPU_IntDisMeasStop
 1113 08a8 B86B     		ldr	r0, [r7, #56]
 1114 08aa FFF7FEFF 		bl	CPU_SR_Restore
 468:Libraries/uC-OSIII/os_flag.c ****              }
 469:Libraries/uC-OSIII/os_flag.c ****              break;
 1115              		.loc 1 469 0 is_stmt 1 discriminator 2
 1116 08ae A1E0     		b	.L59
 1117              	.L48:
 470:Libraries/uC-OSIII/os_flag.c **** 
 471:Libraries/uC-OSIII/os_flag.c ****         case OS_OPT_PEND_FLAG_CLR_ANY:
 472:Libraries/uC-OSIII/os_flag.c ****              flags_rdy = (OS_FLAGS)(~p_grp->Flags & flags); /* Extract only the bits we want       
 1118              		.loc 1 472 0
 1119 08b0 FB68     		ldr	r3, [r7, #12]
 1120 08b2 1B6A     		ldr	r3, [r3, #32]
 1121 08b4 6FEA0302 		mvn	r2, r3
 1122 08b8 BB68     		ldr	r3, [r7, #8]
 1123 08ba 1340     		ands	r3, r3, r2
 1124 08bc 3B63     		str	r3, [r7, #48]
 473:Libraries/uC-OSIII/os_flag.c ****              if (flags_rdy != (OS_FLAGS)0) {                /* See if any flag cleared             
 1125              		.loc 1 473 0
 1126 08be 3B6B     		ldr	r3, [r7, #48]
 1127 08c0 002B     		cmp	r3, #0
 1128 08c2 22D0     		beq	.L74
 474:Libraries/uC-OSIII/os_flag.c ****                  if (consume == DEF_TRUE) {                 /* See if we need to consume the flags 
 1129              		.loc 1 474 0
 1130 08c4 97F83F30 		ldrb	r3, [r7, #63]	@ zero_extendqisi2
 1131 08c8 012B     		cmp	r3, #1
 1132 08ca 05D1     		bne	.L75
 475:Libraries/uC-OSIII/os_flag.c ****                      p_grp->Flags |= flags_rdy;             /* Set ONLY the flags that we got      
 1133              		.loc 1 475 0
 1134 08cc FB68     		ldr	r3, [r7, #12]
 1135 08ce 1A6A     		ldr	r2, [r3, #32]
 1136 08d0 3B6B     		ldr	r3, [r7, #48]
 1137 08d2 1A43     		orrs	r2, r2, r3
 1138 08d4 FB68     		ldr	r3, [r7, #12]
 1139 08d6 1A62     		str	r2, [r3, #32]
 1140              	.L75:
 476:Libraries/uC-OSIII/os_flag.c ****                  }
 477:Libraries/uC-OSIII/os_flag.c ****                  OSTCBCurPtr->FlagsRdy = flags_rdy;         /* Save flags that were ready          
 1141              		.loc 1 477 0
 1142 08d8 40F20003 		movw	r3, #:lower16:OSTCBCurPtr
 1143 08dc C0F20003 		movt	r3, #:upper16:OSTCBCurPtr
 1144 08e0 1B68     		ldr	r3, [r3, #0]
 1145 08e2 3A6B     		ldr	r2, [r7, #48]
 1146 08e4 5A66     		str	r2, [r3, #100]
 478:Libraries/uC-OSIII/os_flag.c ****                  if (p_ts != (CPU_TS *)0) {
 1147              		.loc 1 478 0
 1148 08e6 BB6C     		ldr	r3, [r7, #72]
 1149 08e8 002B     		cmp	r3, #0
 1150 08ea 03D0     		beq	.L76
 479:Libraries/uC-OSIII/os_flag.c ****                     *p_ts  = p_grp->TS;
 1151              		.loc 1 479 0
 1152 08ec FB68     		ldr	r3, [r7, #12]
 1153 08ee 5A6A     		ldr	r2, [r3, #36]
 1154 08f0 BB6C     		ldr	r3, [r7, #72]
 1155 08f2 1A60     		str	r2, [r3, #0]
 1156              	.L76:
 480:Libraries/uC-OSIII/os_flag.c ****                  }
 481:Libraries/uC-OSIII/os_flag.c ****                  CPU_CRITICAL_EXIT();                       /* Yes, condition met, return to caller
 1157              		.loc 1 481 0
 1158 08f4 FFF7FEFF 		bl	CPU_IntDisMeasStop
 1159 08f8 B86B     		ldr	r0, [r7, #56]
 1160 08fa FFF7FEFF 		bl	CPU_SR_Restore
 482:Libraries/uC-OSIII/os_flag.c ****                  *p_err    = OS_ERR_NONE;
 1161              		.loc 1 482 0
 1162 08fe FB6C     		ldr	r3, [r7, #76]
 1163 0900 4FF00002 		mov	r2, #0
 1164 0904 1A80     		strh	r2, [r3, #0]	@ movhi
 483:Libraries/uC-OSIII/os_flag.c ****                  return (flags_rdy);
 1165              		.loc 1 483 0
 1166 0906 3B6B     		ldr	r3, [r7, #48]
 1167 0908 38E1     		b	.L40
 1168              	.L74:
 484:Libraries/uC-OSIII/os_flag.c ****              } else {                                       /* Block task until events occur or tim
 485:Libraries/uC-OSIII/os_flag.c ****                  if ((opt & OS_OPT_PEND_NON_BLOCKING) != (OS_OPT)0) {
 1169              		.loc 1 485 0
 1170 090a 7B88     		ldrh	r3, [r7, #2]
 1171 090c 1BB2     		sxth	r3, r3
 1172 090e 002B     		cmp	r3, #0
 1173 0910 0BDA     		bge	.L77
 486:Libraries/uC-OSIII/os_flag.c ****                      CPU_CRITICAL_EXIT();
 1174              		.loc 1 486 0
 1175 0912 FFF7FEFF 		bl	CPU_IntDisMeasStop
 1176 0916 B86B     		ldr	r0, [r7, #56]
 1177 0918 FFF7FEFF 		bl	CPU_SR_Restore
 487:Libraries/uC-OSIII/os_flag.c ****                      *p_err = OS_ERR_PEND_WOULD_BLOCK;      /* Specified non-blocking so task would
 1178              		.loc 1 487 0
 1179 091c FB6C     		ldr	r3, [r7, #76]
 1180 091e 46F2B012 		movw	r2, #25008
 1181 0922 1A80     		strh	r2, [r3, #0]	@ movhi
 488:Libraries/uC-OSIII/os_flag.c ****                      return ((OS_FLAGS)0);
 1182              		.loc 1 488 0
 1183 0924 4FF00003 		mov	r3, #0
 1184 0928 28E1     		b	.L40
 1185              	.L77:
 489:Libraries/uC-OSIII/os_flag.c ****                  } else {                                   /* Specified blocking so check is sched
 490:Libraries/uC-OSIII/os_flag.c ****                      if (OSSchedLockNestingCtr > (OS_NESTING_CTR)0) { /* See if called with schedul
 1186              		.loc 1 490 0
 1187 092a 40F20003 		movw	r3, #:lower16:OSSchedLockNestingCtr
 1188 092e C0F20003 		movt	r3, #:upper16:OSSchedLockNestingCtr
 1189 0932 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1190 0934 002B     		cmp	r3, #0
 1191 0936 0BD0     		beq	.L78
 491:Libraries/uC-OSIII/os_flag.c ****                          CPU_CRITICAL_EXIT();
 1192              		.loc 1 491 0
 1193 0938 FFF7FEFF 		bl	CPU_IntDisMeasStop
 1194 093c B86B     		ldr	r0, [r7, #56]
 1195 093e FFF7FEFF 		bl	CPU_SR_Restore
 492:Libraries/uC-OSIII/os_flag.c ****                          *p_err = OS_ERR_SCHED_LOCKED;                /* ... can't PEND when locked
 1196              		.loc 1 492 0
 1197 0942 FB6C     		ldr	r3, [r7, #76]
 1198 0944 46F66252 		movw	r2, #28002
 1199 0948 1A80     		strh	r2, [r3, #0]	@ movhi
 493:Libraries/uC-OSIII/os_flag.c ****                          return ((OS_FLAGS)0);
 1200              		.loc 1 493 0
 1201 094a 4FF00003 		mov	r3, #0
 1202 094e 15E1     		b	.L40
 1203              	.L78:
 494:Libraries/uC-OSIII/os_flag.c ****                      }
 495:Libraries/uC-OSIII/os_flag.c ****                  }
 496:Libraries/uC-OSIII/os_flag.c **** 
 497:Libraries/uC-OSIII/os_flag.c ****                  OS_CRITICAL_ENTER_CPU_CRITICAL_EXIT();     /* Lock the scheduler/re-enable interru
 1204              		.loc 1 497 0
 1205 0950 40F20003 		movw	r3, #:lower16:OSSchedLockNestingCtr
 1206 0954 C0F20003 		movt	r3, #:upper16:OSSchedLockNestingCtr
 1207 0958 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1208 095a 03F10103 		add	r3, r3, #1
 1209 095e DAB2     		uxtb	r2, r3
 1210 0960 40F20003 		movw	r3, #:lower16:OSSchedLockNestingCtr
 1211 0964 C0F20003 		movt	r3, #:upper16:OSSchedLockNestingCtr
 1212 0968 1A70     		strb	r2, [r3, #0]
 1213 096a 40F20003 		movw	r3, #:lower16:OSSchedLockNestingCtr
 1214 096e C0F20003 		movt	r3, #:upper16:OSSchedLockNestingCtr
 1215 0972 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1216 0974 012B     		cmp	r3, #1
 1217 0976 01D1     		bne	.L79
 1218              		.loc 1 497 0 is_stmt 0 discriminator 1
 1219 0978 FFF7FEFF 		bl	OS_SchedLockTimeMeasStart
 1220              	.L79:
 1221              		.loc 1 497 0 discriminator 2
 1222 097c FFF7FEFF 		bl	CPU_IntDisMeasStop
 1223 0980 B86B     		ldr	r0, [r7, #56]
 1224 0982 FFF7FEFF 		bl	CPU_SR_Restore
 498:Libraries/uC-OSIII/os_flag.c ****                  OS_FlagBlock(&pend_data,
 1225              		.loc 1 498 0 is_stmt 1 discriminator 2
 1226 0986 7B88     		ldrh	r3, [r7, #2]
 1227 0988 7A68     		ldr	r2, [r7, #4]
 1228 098a 0092     		str	r2, [sp, #0]
 1229 098c 07F11002 		add	r2, r7, #16
 1230 0990 1046     		mov	r0, r2
 1231 0992 F968     		ldr	r1, [r7, #12]
 1232 0994 BA68     		ldr	r2, [r7, #8]
 1233 0996 FFF7FEFF 		bl	OS_FlagBlock
 499:Libraries/uC-OSIII/os_flag.c ****                               p_grp,
 500:Libraries/uC-OSIII/os_flag.c ****                               flags,
 501:Libraries/uC-OSIII/os_flag.c ****                               opt,
 502:Libraries/uC-OSIII/os_flag.c ****                               timeout);
 503:Libraries/uC-OSIII/os_flag.c ****                  OS_CRITICAL_EXIT_NO_SCHED();
 1234              		.loc 1 503 0 discriminator 2
 1235 099a FFF7FEFF 		bl	CPU_SR_Save
 1236 099e B863     		str	r0, [r7, #56]
 1237 09a0 FFF7FEFF 		bl	CPU_IntDisMeasStart
 1238 09a4 40F20003 		movw	r3, #:lower16:OSSchedLockNestingCtr
 1239 09a8 C0F20003 		movt	r3, #:upper16:OSSchedLockNestingCtr
 1240 09ac 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1241 09ae 03F1FF33 		add	r3, r3, #-1
 1242 09b2 DAB2     		uxtb	r2, r3
 1243 09b4 40F20003 		movw	r3, #:lower16:OSSchedLockNestingCtr
 1244 09b8 C0F20003 		movt	r3, #:upper16:OSSchedLockNestingCtr
 1245 09bc 1A70     		strb	r2, [r3, #0]
 1246 09be 40F20003 		movw	r3, #:lower16:OSSchedLockNestingCtr
 1247 09c2 C0F20003 		movt	r3, #:upper16:OSSchedLockNestingCtr
 1248 09c6 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1249 09c8 002B     		cmp	r3, #0
 1250 09ca 01D1     		bne	.L80
 1251              		.loc 1 503 0 is_stmt 0 discriminator 1
 1252 09cc FFF7FEFF 		bl	OS_SchedLockTimeMeasStop
 1253              	.L80:
 1254              		.loc 1 503 0 discriminator 2
 1255 09d0 FFF7FEFF 		bl	CPU_IntDisMeasStop
 1256 09d4 B86B     		ldr	r0, [r7, #56]
 1257 09d6 FFF7FEFF 		bl	CPU_SR_Restore
 504:Libraries/uC-OSIII/os_flag.c ****              }
 505:Libraries/uC-OSIII/os_flag.c ****              break;
 1258              		.loc 1 505 0 is_stmt 1 discriminator 2
 1259 09da 0BE0     		b	.L59
 1260              	.L46:
 506:Libraries/uC-OSIII/os_flag.c **** #endif
 507:Libraries/uC-OSIII/os_flag.c **** 
 508:Libraries/uC-OSIII/os_flag.c ****         default:
 509:Libraries/uC-OSIII/os_flag.c ****              CPU_CRITICAL_EXIT();
 1261              		.loc 1 509 0
 1262 09dc FFF7FEFF 		bl	CPU_IntDisMeasStop
 1263 09e0 B86B     		ldr	r0, [r7, #56]
 1264 09e2 FFF7FEFF 		bl	CPU_SR_Restore
 510:Libraries/uC-OSIII/os_flag.c ****              *p_err = OS_ERR_OPT_INVALID;
 1265              		.loc 1 510 0
 1266 09e6 FB6C     		ldr	r3, [r7, #76]
 1267 09e8 45F62562 		movw	r2, #24101
 1268 09ec 1A80     		strh	r2, [r3, #0]	@ movhi
 511:Libraries/uC-OSIII/os_flag.c ****              return ((OS_FLAGS)0);
 1269              		.loc 1 511 0
 1270 09ee 4FF00003 		mov	r3, #0
 1271 09f2 C3E0     		b	.L40
 1272              	.L59:
 512:Libraries/uC-OSIII/os_flag.c ****     }
 513:Libraries/uC-OSIII/os_flag.c **** 
 514:Libraries/uC-OSIII/os_flag.c ****     OSSched();                                              /* Find next HPT ready to run          
 1273              		.loc 1 514 0
 1274 09f4 FFF7FEFF 		bl	OSSched
 515:Libraries/uC-OSIII/os_flag.c **** 
 516:Libraries/uC-OSIII/os_flag.c ****     CPU_CRITICAL_ENTER();
 1275              		.loc 1 516 0
 1276 09f8 FFF7FEFF 		bl	CPU_SR_Save
 1277 09fc B863     		str	r0, [r7, #56]
 1278 09fe FFF7FEFF 		bl	CPU_IntDisMeasStart
 517:Libraries/uC-OSIII/os_flag.c ****     switch (OSTCBCurPtr->PendStatus) {
 1279              		.loc 1 517 0
 1280 0a02 40F20003 		movw	r3, #:lower16:OSTCBCurPtr
 1281 0a06 C0F20003 		movt	r3, #:upper16:OSTCBCurPtr
 1282 0a0a 1B68     		ldr	r3, [r3, #0]
 1283 0a0c 93F8C130 		ldrb	r3, [r3, #193]	@ zero_extendqisi2
 1284 0a10 032B     		cmp	r3, #3
 1285 0a12 69D8     		bhi	.L81
 1286 0a14 01A2     		adr	r2, .L86
 1287 0a16 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1288 0a1a 00BF     		.align	2
 1289              	.L86:
 1290 0a1c 2D0A0000 		.word	.L82+1
 1291 0a20 670A0000 		.word	.L83+1
 1292 0a24 BB0A0000 		.word	.L84+1
 1293 0a28 950A0000 		.word	.L85+1
 1294              	.L82:
 518:Libraries/uC-OSIII/os_flag.c ****         case OS_STATUS_PEND_OK:                             /* We got the vent flags               
 519:Libraries/uC-OSIII/os_flag.c ****              if (p_ts != (CPU_TS *)0) {
 1295              		.loc 1 519 0
 1296 0a2c BB6C     		ldr	r3, [r7, #72]
 1297 0a2e 002B     		cmp	r3, #0
 1298 0a30 07D0     		beq	.L87
 520:Libraries/uC-OSIII/os_flag.c ****                 *p_ts  = OSTCBCurPtr->TS;
 1299              		.loc 1 520 0
 1300 0a32 40F20003 		movw	r3, #:lower16:OSTCBCurPtr
 1301 0a36 C0F20003 		movt	r3, #:upper16:OSTCBCurPtr
 1302 0a3a 1B68     		ldr	r3, [r3, #0]
 1303 0a3c 9A6B     		ldr	r2, [r3, #56]
 1304 0a3e BB6C     		ldr	r3, [r7, #72]
 1305 0a40 1A60     		str	r2, [r3, #0]
 1306              	.L87:
 521:Libraries/uC-OSIII/os_flag.c ****              }
 522:Libraries/uC-OSIII/os_flag.c ****              *p_err = OS_ERR_NONE;
 1307              		.loc 1 522 0
 1308 0a42 FB6C     		ldr	r3, [r7, #76]
 1309 0a44 4FF00002 		mov	r2, #0
 1310 0a48 1A80     		strh	r2, [r3, #0]	@ movhi
 523:Libraries/uC-OSIII/os_flag.c ****              break;
 1311              		.loc 1 523 0
 1312 0a4a 00BF     		nop
 524:Libraries/uC-OSIII/os_flag.c **** 
 525:Libraries/uC-OSIII/os_flag.c ****         case OS_STATUS_PEND_ABORT:                          /* Indicate that we aborted            
 526:Libraries/uC-OSIII/os_flag.c ****              if (p_ts != (CPU_TS *)0) {
 527:Libraries/uC-OSIII/os_flag.c ****                 *p_ts  = OSTCBCurPtr->TS;
 528:Libraries/uC-OSIII/os_flag.c ****              }
 529:Libraries/uC-OSIII/os_flag.c ****              CPU_CRITICAL_EXIT();
 530:Libraries/uC-OSIII/os_flag.c ****              *p_err = OS_ERR_PEND_ABORT;
 531:Libraries/uC-OSIII/os_flag.c ****              return ((OS_FLAGS)0);
 532:Libraries/uC-OSIII/os_flag.c **** 
 533:Libraries/uC-OSIII/os_flag.c ****         case OS_STATUS_PEND_TIMEOUT:                        /* Indicate that we didn't get semaphor
 534:Libraries/uC-OSIII/os_flag.c ****              if (p_ts != (CPU_TS *)0) {
 535:Libraries/uC-OSIII/os_flag.c ****                 *p_ts  = (CPU_TS  )0;
 536:Libraries/uC-OSIII/os_flag.c ****              }
 537:Libraries/uC-OSIII/os_flag.c ****              CPU_CRITICAL_EXIT();
 538:Libraries/uC-OSIII/os_flag.c ****              *p_err = OS_ERR_TIMEOUT;
 539:Libraries/uC-OSIII/os_flag.c ****              return ((OS_FLAGS)0);
 540:Libraries/uC-OSIII/os_flag.c **** 
 541:Libraries/uC-OSIII/os_flag.c ****         case OS_STATUS_PEND_DEL:                            /* Indicate that object pended on has b
 542:Libraries/uC-OSIII/os_flag.c ****              if (p_ts != (CPU_TS *)0) {
 543:Libraries/uC-OSIII/os_flag.c ****                 *p_ts  = OSTCBCurPtr->TS;
 544:Libraries/uC-OSIII/os_flag.c ****              }
 545:Libraries/uC-OSIII/os_flag.c ****              CPU_CRITICAL_EXIT();
 546:Libraries/uC-OSIII/os_flag.c ****              *p_err = OS_ERR_OBJ_DEL;
 547:Libraries/uC-OSIII/os_flag.c ****              return ((OS_FLAGS)0);
 548:Libraries/uC-OSIII/os_flag.c **** 
 549:Libraries/uC-OSIII/os_flag.c ****         default:
 550:Libraries/uC-OSIII/os_flag.c ****              CPU_CRITICAL_EXIT();
 551:Libraries/uC-OSIII/os_flag.c ****              *p_err = OS_ERR_STATUS_INVALID;
 552:Libraries/uC-OSIII/os_flag.c ****              return ((OS_FLAGS)0);
 553:Libraries/uC-OSIII/os_flag.c ****     }
 554:Libraries/uC-OSIII/os_flag.c **** 
 555:Libraries/uC-OSIII/os_flag.c ****     flags_rdy = OSTCBCurPtr->FlagsRdy;
 1313              		.loc 1 555 0
 1314 0a4c 40F20003 		movw	r3, #:lower16:OSTCBCurPtr
 1315 0a50 C0F20003 		movt	r3, #:upper16:OSTCBCurPtr
 1316 0a54 1B68     		ldr	r3, [r3, #0]
 1317 0a56 5B6E     		ldr	r3, [r3, #100]
 1318 0a58 3B63     		str	r3, [r7, #48]
 556:Libraries/uC-OSIII/os_flag.c ****     if (consume == DEF_TRUE) {                              /* See if we need to consume the flags 
 1319              		.loc 1 556 0
 1320 0a5a 97F83F30 		ldrb	r3, [r7, #63]	@ zero_extendqisi2
 1321 0a5e 012B     		cmp	r3, #1
 1322 0a60 40F08280 		bne	.L92
 1323 0a64 4CE0     		b	.L97
 1324              	.L83:
 526:Libraries/uC-OSIII/os_flag.c ****              if (p_ts != (CPU_TS *)0) {
 1325              		.loc 1 526 0
 1326 0a66 BB6C     		ldr	r3, [r7, #72]
 1327 0a68 002B     		cmp	r3, #0
 1328 0a6a 07D0     		beq	.L89
 527:Libraries/uC-OSIII/os_flag.c ****                 *p_ts  = OSTCBCurPtr->TS;
 1329              		.loc 1 527 0
 1330 0a6c 40F20003 		movw	r3, #:lower16:OSTCBCurPtr
 1331 0a70 C0F20003 		movt	r3, #:upper16:OSTCBCurPtr
 1332 0a74 1B68     		ldr	r3, [r3, #0]
 1333 0a76 9A6B     		ldr	r2, [r3, #56]
 1334 0a78 BB6C     		ldr	r3, [r7, #72]
 1335 0a7a 1A60     		str	r2, [r3, #0]
 1336              	.L89:
 529:Libraries/uC-OSIII/os_flag.c ****              CPU_CRITICAL_EXIT();
 1337              		.loc 1 529 0
 1338 0a7c FFF7FEFF 		bl	CPU_IntDisMeasStop
 1339 0a80 B86B     		ldr	r0, [r7, #56]
 1340 0a82 FFF7FEFF 		bl	CPU_SR_Restore
 530:Libraries/uC-OSIII/os_flag.c ****              *p_err = OS_ERR_PEND_ABORT;
 1341              		.loc 1 530 0
 1342 0a86 FB6C     		ldr	r3, [r7, #76]
 1343 0a88 46F2A912 		movw	r2, #25001
 1344 0a8c 1A80     		strh	r2, [r3, #0]	@ movhi
 531:Libraries/uC-OSIII/os_flag.c ****              return ((OS_FLAGS)0);
 1345              		.loc 1 531 0
 1346 0a8e 4FF00003 		mov	r3, #0
 1347 0a92 73E0     		b	.L40
 1348              	.L85:
 534:Libraries/uC-OSIII/os_flag.c ****              if (p_ts != (CPU_TS *)0) {
 1349              		.loc 1 534 0
 1350 0a94 BB6C     		ldr	r3, [r7, #72]
 1351 0a96 002B     		cmp	r3, #0
 1352 0a98 03D0     		beq	.L90
 535:Libraries/uC-OSIII/os_flag.c ****                 *p_ts  = (CPU_TS  )0;
 1353              		.loc 1 535 0
 1354 0a9a BB6C     		ldr	r3, [r7, #72]
 1355 0a9c 4FF00002 		mov	r2, #0
 1356 0aa0 1A60     		str	r2, [r3, #0]
 1357              	.L90:
 537:Libraries/uC-OSIII/os_flag.c ****              CPU_CRITICAL_EXIT();
 1358              		.loc 1 537 0
 1359 0aa2 FFF7FEFF 		bl	CPU_IntDisMeasStop
 1360 0aa6 B86B     		ldr	r0, [r7, #56]
 1361 0aa8 FFF7FEFF 		bl	CPU_SR_Restore
 538:Libraries/uC-OSIII/os_flag.c ****              *p_err = OS_ERR_TIMEOUT;
 1362              		.loc 1 538 0
 1363 0aac FB6C     		ldr	r3, [r7, #76]
 1364 0aae 47F2D922 		movw	r2, #29401
 1365 0ab2 1A80     		strh	r2, [r3, #0]	@ movhi
 539:Libraries/uC-OSIII/os_flag.c ****              return ((OS_FLAGS)0);
 1366              		.loc 1 539 0
 1367 0ab4 4FF00003 		mov	r3, #0
 1368 0ab8 60E0     		b	.L40
 1369              	.L84:
 542:Libraries/uC-OSIII/os_flag.c ****              if (p_ts != (CPU_TS *)0) {
 1370              		.loc 1 542 0
 1371 0aba BB6C     		ldr	r3, [r7, #72]
 1372 0abc 002B     		cmp	r3, #0
 1373 0abe 07D0     		beq	.L91
 543:Libraries/uC-OSIII/os_flag.c ****                 *p_ts  = OSTCBCurPtr->TS;
 1374              		.loc 1 543 0
 1375 0ac0 40F20003 		movw	r3, #:lower16:OSTCBCurPtr
 1376 0ac4 C0F20003 		movt	r3, #:upper16:OSTCBCurPtr
 1377 0ac8 1B68     		ldr	r3, [r3, #0]
 1378 0aca 9A6B     		ldr	r2, [r3, #56]
 1379 0acc BB6C     		ldr	r3, [r7, #72]
 1380 0ace 1A60     		str	r2, [r3, #0]
 1381              	.L91:
 545:Libraries/uC-OSIII/os_flag.c ****              CPU_CRITICAL_EXIT();
 1382              		.loc 1 545 0
 1383 0ad0 FFF7FEFF 		bl	CPU_IntDisMeasStop
 1384 0ad4 B86B     		ldr	r0, [r7, #56]
 1385 0ad6 FFF7FEFF 		bl	CPU_SR_Restore
 546:Libraries/uC-OSIII/os_flag.c ****              *p_err = OS_ERR_OBJ_DEL;
 1386              		.loc 1 546 0
 1387 0ada FB6C     		ldr	r3, [r7, #76]
 1388 0adc 45F6C252 		movw	r2, #24002
 1389 0ae0 1A80     		strh	r2, [r3, #0]	@ movhi
 547:Libraries/uC-OSIII/os_flag.c ****              return ((OS_FLAGS)0);
 1390              		.loc 1 547 0
 1391 0ae2 4FF00003 		mov	r3, #0
 1392 0ae6 49E0     		b	.L40
 1393              	.L81:
 550:Libraries/uC-OSIII/os_flag.c ****              CPU_CRITICAL_EXIT();
 1394              		.loc 1 550 0
 1395 0ae8 FFF7FEFF 		bl	CPU_IntDisMeasStop
 1396 0aec B86B     		ldr	r0, [r7, #56]
 1397 0aee FFF7FEFF 		bl	CPU_SR_Restore
 551:Libraries/uC-OSIII/os_flag.c ****              *p_err = OS_ERR_STATUS_INVALID;
 1398              		.loc 1 551 0
 1399 0af2 FB6C     		ldr	r3, [r7, #76]
 1400 0af4 46F62B62 		movw	r2, #28203
 1401 0af8 1A80     		strh	r2, [r3, #0]	@ movhi
 552:Libraries/uC-OSIII/os_flag.c ****              return ((OS_FLAGS)0);
 1402              		.loc 1 552 0
 1403 0afa 4FF00003 		mov	r3, #0
 1404 0afe 3DE0     		b	.L40
 1405              	.L97:
 557:Libraries/uC-OSIII/os_flag.c ****         switch (mode) {
 1406              		.loc 1 557 0
 1407 0b00 FB8E     		ldrh	r3, [r7, #54]
 1408 0b02 03F1FF33 		add	r3, r3, #-1
 1409 0b06 072B     		cmp	r3, #7
 1410 0b08 22D8     		bhi	.L93
 1411 0b0a 01A2     		adr	r2, .L96
 1412 0b0c 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1413              		.align	2
 1414              	.L96:
 1415 0b10 430B0000 		.word	.L94+1
 1416 0b14 430B0000 		.word	.L94+1
 1417 0b18 510B0000 		.word	.L93+1
 1418 0b1c 310B0000 		.word	.L95+1
 1419 0b20 510B0000 		.word	.L93+1
 1420 0b24 510B0000 		.word	.L93+1
 1421 0b28 510B0000 		.word	.L93+1
 1422 0b2c 310B0000 		.word	.L95+1
 1423              	.L95:
 558:Libraries/uC-OSIII/os_flag.c ****             case OS_OPT_PEND_FLAG_SET_ALL:
 559:Libraries/uC-OSIII/os_flag.c ****             case OS_OPT_PEND_FLAG_SET_ANY:                  /* Clear ONLY the flags we got         
 560:Libraries/uC-OSIII/os_flag.c ****                  p_grp->Flags &= ~flags_rdy;
 1424              		.loc 1 560 0
 1425 0b30 FB68     		ldr	r3, [r7, #12]
 1426 0b32 1A6A     		ldr	r2, [r3, #32]
 1427 0b34 3B6B     		ldr	r3, [r7, #48]
 1428 0b36 6FEA0303 		mvn	r3, r3
 1429 0b3a 1A40     		ands	r2, r2, r3
 1430 0b3c FB68     		ldr	r3, [r7, #12]
 1431 0b3e 1A62     		str	r2, [r3, #32]
 561:Libraries/uC-OSIII/os_flag.c ****                  break;
 1432              		.loc 1 561 0
 1433 0b40 12E0     		b	.L92
 1434              	.L94:
 562:Libraries/uC-OSIII/os_flag.c **** 
 563:Libraries/uC-OSIII/os_flag.c **** #if OS_CFG_FLAG_MODE_CLR_EN > 0u
 564:Libraries/uC-OSIII/os_flag.c ****             case OS_OPT_PEND_FLAG_CLR_ALL:
 565:Libraries/uC-OSIII/os_flag.c ****             case OS_OPT_PEND_FLAG_CLR_ANY:                  /* Set   ONLY the flags we got         
 566:Libraries/uC-OSIII/os_flag.c ****                  p_grp->Flags |=  flags_rdy;
 1435              		.loc 1 566 0
 1436 0b42 FB68     		ldr	r3, [r7, #12]
 1437 0b44 1A6A     		ldr	r2, [r3, #32]
 1438 0b46 3B6B     		ldr	r3, [r7, #48]
 1439 0b48 1A43     		orrs	r2, r2, r3
 1440 0b4a FB68     		ldr	r3, [r7, #12]
 1441 0b4c 1A62     		str	r2, [r3, #32]
 567:Libraries/uC-OSIII/os_flag.c ****                  break;
 1442              		.loc 1 567 0
 1443 0b4e 0BE0     		b	.L92
 1444              	.L93:
 568:Libraries/uC-OSIII/os_flag.c **** #endif
 569:Libraries/uC-OSIII/os_flag.c ****             default:
 570:Libraries/uC-OSIII/os_flag.c ****                  CPU_CRITICAL_EXIT();
 1445              		.loc 1 570 0
 1446 0b50 FFF7FEFF 		bl	CPU_IntDisMeasStop
 1447 0b54 B86B     		ldr	r0, [r7, #56]
 1448 0b56 FFF7FEFF 		bl	CPU_SR_Restore
 571:Libraries/uC-OSIII/os_flag.c ****                  *p_err = OS_ERR_OPT_INVALID;
 1449              		.loc 1 571 0
 1450 0b5a FB6C     		ldr	r3, [r7, #76]
 1451 0b5c 45F62562 		movw	r2, #24101
 1452 0b60 1A80     		strh	r2, [r3, #0]	@ movhi
 572:Libraries/uC-OSIII/os_flag.c ****                  return ((OS_FLAGS)0);
 1453              		.loc 1 572 0
 1454 0b62 4FF00003 		mov	r3, #0
 1455 0b66 09E0     		b	.L40
 1456              	.L92:
 573:Libraries/uC-OSIII/os_flag.c ****         }
 574:Libraries/uC-OSIII/os_flag.c ****     }
 575:Libraries/uC-OSIII/os_flag.c ****     CPU_CRITICAL_EXIT();
 1457              		.loc 1 575 0
 1458 0b68 FFF7FEFF 		bl	CPU_IntDisMeasStop
 1459 0b6c B86B     		ldr	r0, [r7, #56]
 1460 0b6e FFF7FEFF 		bl	CPU_SR_Restore
 576:Libraries/uC-OSIII/os_flag.c ****     *p_err = OS_ERR_NONE;                                   /* Event(s) must have occurred         
 1461              		.loc 1 576 0
 1462 0b72 FB6C     		ldr	r3, [r7, #76]
 1463 0b74 4FF00002 		mov	r2, #0
 1464 0b78 1A80     		strh	r2, [r3, #0]	@ movhi
 577:Libraries/uC-OSIII/os_flag.c ****     return (flags_rdy);
 1465              		.loc 1 577 0
 1466 0b7a 3B6B     		ldr	r3, [r7, #48]
 1467              	.L40:
 578:Libraries/uC-OSIII/os_flag.c **** }
 1468              		.loc 1 578 0
 1469 0b7c 1846     		mov	r0, r3
 1470 0b7e 07F14007 		add	r7, r7, #64
 1471 0b82 BD46     		mov	sp, r7
 1472 0b84 80BD     		pop	{r7, pc}
 1473              		.cfi_endproc
 1474              	.LFE2:
 1476 0b86 00BF     		.align	2
 1477              		.global	OSFlagPendAbort
 1478              		.thumb
 1479              		.thumb_func
 1481              	OSFlagPendAbort:
 1482              	.LFB3:
 579:Libraries/uC-OSIII/os_flag.c **** /*$PAGE*/
 580:Libraries/uC-OSIII/os_flag.c **** /*
 581:Libraries/uC-OSIII/os_flag.c **** ***************************************************************************************************
 582:Libraries/uC-OSIII/os_flag.c **** *                                          ABORT WAITING ON AN EVENT FLAG GROUP
 583:Libraries/uC-OSIII/os_flag.c **** *
 584:Libraries/uC-OSIII/os_flag.c **** * Description: This function aborts & readies any tasks currently waiting on an event flag group.  
 585:Libraries/uC-OSIII/os_flag.c **** *              be used to fault-abort the wait on the event flag group, rather than to normally pos
 586:Libraries/uC-OSIII/os_flag.c **** *              group OSFlagPost().
 587:Libraries/uC-OSIII/os_flag.c **** *
 588:Libraries/uC-OSIII/os_flag.c **** * Arguments  : p_grp     is a pointer to the event flag group
 589:Libraries/uC-OSIII/os_flag.c **** *
 590:Libraries/uC-OSIII/os_flag.c **** *              opt       determines the type of ABORT performed:
 591:Libraries/uC-OSIII/os_flag.c **** *
 592:Libraries/uC-OSIII/os_flag.c **** *                            OS_OPT_PEND_ABORT_1          ABORT wait for a single task (HPT) waitin
 593:Libraries/uC-OSIII/os_flag.c **** *                            OS_OPT_PEND_ABORT_ALL        ABORT wait for ALL tasks that are  waitin
 594:Libraries/uC-OSIII/os_flag.c **** *                            OS_OPT_POST_NO_SCHED         Do not call the scheduler
 595:Libraries/uC-OSIII/os_flag.c **** *
 596:Libraries/uC-OSIII/os_flag.c **** *              p_err     is a pointer to a variable that will contain an error code returned by thi
 597:Libraries/uC-OSIII/os_flag.c **** *
 598:Libraries/uC-OSIII/os_flag.c **** *                            OS_ERR_NONE                  At least one task waiting on the event fl
 599:Libraries/uC-OSIII/os_flag.c **** *                                                         readied and informed of the aborted wait;
 600:Libraries/uC-OSIII/os_flag.c **** *                                                         for the number of tasks whose wait on the
 601:Libraries/uC-OSIII/os_flag.c **** *                                                         was aborted.
 602:Libraries/uC-OSIII/os_flag.c **** *                            OS_ERR_OBJ_PTR_NULL          If 'p_grp' is a NULL pointer.
 603:Libraries/uC-OSIII/os_flag.c **** *                            OS_ERR_OBJ_TYPE              If 'p_grp' is not pointing at an event fl
 604:Libraries/uC-OSIII/os_flag.c **** *                            OS_ERR_OPT_INVALID           If you specified an invalid option
 605:Libraries/uC-OSIII/os_flag.c **** *                            OS_ERR_PEND_ABORT_ISR        If you called this function from an ISR
 606:Libraries/uC-OSIII/os_flag.c **** *                            OS_ERR_PEND_ABORT_NONE       No task were pending
 607:Libraries/uC-OSIII/os_flag.c **** *
 608:Libraries/uC-OSIII/os_flag.c **** * Returns    : == 0          if no tasks were waiting on the event flag group, or upon error.
 609:Libraries/uC-OSIII/os_flag.c **** *              >  0          if one or more tasks waiting on the event flag group are now readied a
 610:Libraries/uC-OSIII/os_flag.c **** ***************************************************************************************************
 611:Libraries/uC-OSIII/os_flag.c **** */
 612:Libraries/uC-OSIII/os_flag.c **** 
 613:Libraries/uC-OSIII/os_flag.c **** #if OS_CFG_FLAG_PEND_ABORT_EN > 0u
 614:Libraries/uC-OSIII/os_flag.c **** OS_OBJ_QTY  OSFlagPendAbort (OS_FLAG_GRP  *p_grp,
 615:Libraries/uC-OSIII/os_flag.c ****                              OS_OPT        opt,
 616:Libraries/uC-OSIII/os_flag.c ****                              OS_ERR       *p_err)
 617:Libraries/uC-OSIII/os_flag.c **** {
 1483              		.loc 1 617 0
 1484              		.cfi_startproc
 1485              		@ args = 0, pretend = 0, frame = 40
 1486              		@ frame_needed = 1, uses_anonymous_args = 0
 1487 0b88 80B5     		push	{r7, lr}
 1488              	.LCFI9:
 1489              		.cfi_def_cfa_offset 8
 1490              		.cfi_offset 14, -4
 1491              		.cfi_offset 7, -8
 1492 0b8a 8AB0     		sub	sp, sp, #40
 1493              	.LCFI10:
 1494              		.cfi_def_cfa_offset 48
 1495 0b8c 00AF     		add	r7, sp, #0
 1496              	.LCFI11:
 1497              		.cfi_def_cfa_register 7
 1498 0b8e F860     		str	r0, [r7, #12]
 1499 0b90 0B46     		mov	r3, r1
 1500 0b92 7A60     		str	r2, [r7, #4]
 1501 0b94 7B81     		strh	r3, [r7, #10]	@ movhi
 618:Libraries/uC-OSIII/os_flag.c ****     OS_PEND_LIST  *p_pend_list;
 619:Libraries/uC-OSIII/os_flag.c ****     OS_TCB        *p_tcb;
 620:Libraries/uC-OSIII/os_flag.c ****     CPU_TS         ts;
 621:Libraries/uC-OSIII/os_flag.c ****     OS_OBJ_QTY     nbr_tasks;
 622:Libraries/uC-OSIII/os_flag.c ****     CPU_SR_ALLOC();
 1502              		.loc 1 622 0
 1503 0b96 4FF00003 		mov	r3, #0
 1504 0b9a 3B62     		str	r3, [r7, #32]
 623:Libraries/uC-OSIII/os_flag.c **** 
 624:Libraries/uC-OSIII/os_flag.c **** 
 625:Libraries/uC-OSIII/os_flag.c **** 
 626:Libraries/uC-OSIII/os_flag.c **** #ifdef OS_SAFETY_CRITICAL
 627:Libraries/uC-OSIII/os_flag.c ****     if (p_err == (OS_ERR *)0) {
 628:Libraries/uC-OSIII/os_flag.c ****         OS_SAFETY_CRITICAL_EXCEPTION();
 629:Libraries/uC-OSIII/os_flag.c ****     }
 630:Libraries/uC-OSIII/os_flag.c **** #endif
 631:Libraries/uC-OSIII/os_flag.c **** 
 632:Libraries/uC-OSIII/os_flag.c **** #if OS_CFG_CALLED_FROM_ISR_CHK_EN > 0u
 633:Libraries/uC-OSIII/os_flag.c ****     if (OSIntNestingCtr > (OS_NESTING_CTR)0u) {             /* Not allowed to Pend Abort from an IS
 1505              		.loc 1 633 0
 1506 0b9c 40F20003 		movw	r3, #:lower16:OSIntNestingCtr
 1507 0ba0 C0F20003 		movt	r3, #:upper16:OSIntNestingCtr
 1508 0ba4 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1509 0ba6 002B     		cmp	r3, #0
 1510 0ba8 06D0     		beq	.L99
 634:Libraries/uC-OSIII/os_flag.c ****        *p_err =  OS_ERR_PEND_ABORT_ISR;
 1511              		.loc 1 634 0
 1512 0baa 7B68     		ldr	r3, [r7, #4]
 1513 0bac 46F2AA12 		movw	r2, #25002
 1514 0bb0 1A80     		strh	r2, [r3, #0]	@ movhi
 635:Libraries/uC-OSIII/os_flag.c ****         return ((OS_OBJ_QTY)0u);
 1515              		.loc 1 635 0
 1516 0bb2 4FF00003 		mov	r3, #0
 1517 0bb6 A3E0     		b	.L100
 1518              	.L99:
 636:Libraries/uC-OSIII/os_flag.c ****     }
 637:Libraries/uC-OSIII/os_flag.c **** #endif
 638:Libraries/uC-OSIII/os_flag.c **** 
 639:Libraries/uC-OSIII/os_flag.c **** #if OS_CFG_ARG_CHK_EN > 0u
 640:Libraries/uC-OSIII/os_flag.c ****     if (p_grp == (OS_FLAG_GRP *)0) {                        /* Validate 'p_grp'                    
 1519              		.loc 1 640 0
 1520 0bb8 FB68     		ldr	r3, [r7, #12]
 1521 0bba 002B     		cmp	r3, #0
 1522 0bbc 06D1     		bne	.L101
 641:Libraries/uC-OSIII/os_flag.c ****        *p_err =  OS_ERR_OBJ_PTR_NULL;
 1523              		.loc 1 641 0
 1524 0bbe 7B68     		ldr	r3, [r7, #4]
 1525 0bc0 45F6C352 		movw	r2, #24003
 1526 0bc4 1A80     		strh	r2, [r3, #0]	@ movhi
 642:Libraries/uC-OSIII/os_flag.c ****         return ((OS_OBJ_QTY)0u);
 1527              		.loc 1 642 0
 1528 0bc6 4FF00003 		mov	r3, #0
 1529 0bca 99E0     		b	.L100
 1530              	.L101:
 643:Libraries/uC-OSIII/os_flag.c ****     }
 644:Libraries/uC-OSIII/os_flag.c ****     switch (opt) {                                          /* Validate 'opt'                      
 1531              		.loc 1 644 0
 1532 0bcc 7B89     		ldrh	r3, [r7, #10]
 1533 0bce 002B     		cmp	r3, #0
 1534 0bd0 09D0     		beq	.L113
 1535 0bd2 B3F5807F 		cmp	r3, #256
 1536 0bd6 06D0     		beq	.L113
 645:Libraries/uC-OSIII/os_flag.c ****         case OS_OPT_PEND_ABORT_1:
 646:Libraries/uC-OSIII/os_flag.c ****         case OS_OPT_PEND_ABORT_ALL:
 647:Libraries/uC-OSIII/os_flag.c ****              break;
 648:Libraries/uC-OSIII/os_flag.c **** 
 649:Libraries/uC-OSIII/os_flag.c ****         default:
 650:Libraries/uC-OSIII/os_flag.c ****             *p_err =  OS_ERR_OPT_INVALID;
 1537              		.loc 1 650 0
 1538 0bd8 7B68     		ldr	r3, [r7, #4]
 1539 0bda 45F62562 		movw	r2, #24101
 1540 0bde 1A80     		strh	r2, [r3, #0]	@ movhi
 651:Libraries/uC-OSIII/os_flag.c ****              return ((OS_OBJ_QTY)0u);
 1541              		.loc 1 651 0
 1542 0be0 4FF00003 		mov	r3, #0
 1543 0be4 8CE0     		b	.L100
 1544              	.L113:
 647:Libraries/uC-OSIII/os_flag.c ****              break;
 1545              		.loc 1 647 0
 1546 0be6 00BF     		nop
 1547              	.L104:
 652:Libraries/uC-OSIII/os_flag.c ****     }
 653:Libraries/uC-OSIII/os_flag.c **** #endif
 654:Libraries/uC-OSIII/os_flag.c **** 
 655:Libraries/uC-OSIII/os_flag.c **** #if OS_CFG_OBJ_TYPE_CHK_EN > 0u
 656:Libraries/uC-OSIII/os_flag.c ****     if (p_grp->Type != OS_OBJ_TYPE_FLAG) {                  /* Make sure event flag group was creat
 1548              		.loc 1 656 0
 1549 0be8 FB68     		ldr	r3, [r7, #12]
 1550 0bea 1A68     		ldr	r2, [r3, #0]
 1551 0bec 44F64643 		movw	r3, #19526
 1552 0bf0 C4F24173 		movt	r3, 18241
 1553 0bf4 9A42     		cmp	r2, r3
 1554 0bf6 06D0     		beq	.L105
 657:Libraries/uC-OSIII/os_flag.c ****        *p_err =  OS_ERR_OBJ_TYPE;
 1555              		.loc 1 657 0
 1556 0bf8 7B68     		ldr	r3, [r7, #4]
 1557 0bfa 45F6C452 		movw	r2, #24004
 1558 0bfe 1A80     		strh	r2, [r3, #0]	@ movhi
 658:Libraries/uC-OSIII/os_flag.c ****         return ((OS_OBJ_QTY)0u);
 1559              		.loc 1 658 0
 1560 0c00 4FF00003 		mov	r3, #0
 1561 0c04 7CE0     		b	.L100
 1562              	.L105:
 659:Libraries/uC-OSIII/os_flag.c ****     }
 660:Libraries/uC-OSIII/os_flag.c **** #endif
 661:Libraries/uC-OSIII/os_flag.c **** 
 662:Libraries/uC-OSIII/os_flag.c ****     CPU_CRITICAL_ENTER();
 1563              		.loc 1 662 0
 1564 0c06 FFF7FEFF 		bl	CPU_SR_Save
 1565 0c0a 3862     		str	r0, [r7, #32]
 1566 0c0c FFF7FEFF 		bl	CPU_IntDisMeasStart
 663:Libraries/uC-OSIII/os_flag.c ****     p_pend_list = &p_grp->PendList;
 1567              		.loc 1 663 0
 1568 0c10 FB68     		ldr	r3, [r7, #12]
 1569 0c12 03F10803 		add	r3, r3, #8
 1570 0c16 FB61     		str	r3, [r7, #28]
 664:Libraries/uC-OSIII/os_flag.c ****     if (p_pend_list->NbrEntries == (OS_OBJ_QTY)0u) {        /* Any task waiting on flag group?     
 1571              		.loc 1 664 0
 1572 0c18 FB69     		ldr	r3, [r7, #28]
 1573 0c1a 1B89     		ldrh	r3, [r3, #8]
 1574 0c1c 002B     		cmp	r3, #0
 1575 0c1e 0BD1     		bne	.L106
 665:Libraries/uC-OSIII/os_flag.c ****         CPU_CRITICAL_EXIT();                                /* No                                  
 1576              		.loc 1 665 0
 1577 0c20 FFF7FEFF 		bl	CPU_IntDisMeasStop
 1578 0c24 386A     		ldr	r0, [r7, #32]
 1579 0c26 FFF7FEFF 		bl	CPU_SR_Restore
 666:Libraries/uC-OSIII/os_flag.c ****        *p_err =  OS_ERR_PEND_ABORT_NONE;
 1580              		.loc 1 666 0
 1581 0c2a 7B68     		ldr	r3, [r7, #4]
 1582 0c2c 46F2AB12 		movw	r2, #25003
 1583 0c30 1A80     		strh	r2, [r3, #0]	@ movhi
 667:Libraries/uC-OSIII/os_flag.c ****         return ((OS_OBJ_QTY)0u);
 1584              		.loc 1 667 0
 1585 0c32 4FF00003 		mov	r3, #0
 1586 0c36 63E0     		b	.L100
 1587              	.L106:
 668:Libraries/uC-OSIII/os_flag.c ****     }
 669:Libraries/uC-OSIII/os_flag.c **** 
 670:Libraries/uC-OSIII/os_flag.c ****     OS_CRITICAL_ENTER_CPU_CRITICAL_EXIT();
 1588              		.loc 1 670 0
 1589 0c38 40F20003 		movw	r3, #:lower16:OSSchedLockNestingCtr
 1590 0c3c C0F20003 		movt	r3, #:upper16:OSSchedLockNestingCtr
 1591 0c40 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1592 0c42 03F10103 		add	r3, r3, #1
 1593 0c46 DAB2     		uxtb	r2, r3
 1594 0c48 40F20003 		movw	r3, #:lower16:OSSchedLockNestingCtr
 1595 0c4c C0F20003 		movt	r3, #:upper16:OSSchedLockNestingCtr
 1596 0c50 1A70     		strb	r2, [r3, #0]
 1597 0c52 40F20003 		movw	r3, #:lower16:OSSchedLockNestingCtr
 1598 0c56 C0F20003 		movt	r3, #:upper16:OSSchedLockNestingCtr
 1599 0c5a 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1600 0c5c 012B     		cmp	r3, #1
 1601 0c5e 01D1     		bne	.L107
 1602              		.loc 1 670 0 is_stmt 0 discriminator 1
 1603 0c60 FFF7FEFF 		bl	OS_SchedLockTimeMeasStart
 1604              	.L107:
 1605              		.loc 1 670 0 discriminator 2
 1606 0c64 FFF7FEFF 		bl	CPU_IntDisMeasStop
 1607 0c68 386A     		ldr	r0, [r7, #32]
 1608 0c6a FFF7FEFF 		bl	CPU_SR_Restore
 671:Libraries/uC-OSIII/os_flag.c ****     nbr_tasks = 0u;
 1609              		.loc 1 671 0 is_stmt 1 discriminator 2
 1610 0c6e 4FF00003 		mov	r3, #0
 1611 0c72 FB84     		strh	r3, [r7, #38]	@ movhi
 672:Libraries/uC-OSIII/os_flag.c ****     ts        = OS_TS_GET();                                /* Get local time stamp so all tasks ge
 1612              		.loc 1 672 0 discriminator 2
 1613 0c74 FFF7FEFF 		bl	CPU_TS_TmrRd
 1614 0c78 B861     		str	r0, [r7, #24]
 673:Libraries/uC-OSIII/os_flag.c ****     while (p_pend_list->NbrEntries > (OS_OBJ_QTY)0u) {
 1615              		.loc 1 673 0 discriminator 2
 1616 0c7a 10E0     		b	.L108
 1617              	.L110:
 674:Libraries/uC-OSIII/os_flag.c ****         p_tcb = p_pend_list->HeadPtr->TCBPtr;
 1618              		.loc 1 674 0
 1619 0c7c FB69     		ldr	r3, [r7, #28]
 1620 0c7e 1B68     		ldr	r3, [r3, #0]
 1621 0c80 9B68     		ldr	r3, [r3, #8]
 1622 0c82 7B61     		str	r3, [r7, #20]
 675:Libraries/uC-OSIII/os_flag.c ****         OS_PendAbort((OS_PEND_OBJ *)((void *)p_grp),
 1623              		.loc 1 675 0
 1624 0c84 F868     		ldr	r0, [r7, #12]
 1625 0c86 7969     		ldr	r1, [r7, #20]
 1626 0c88 BA69     		ldr	r2, [r7, #24]
 1627 0c8a FFF7FEFF 		bl	OS_PendAbort
 676:Libraries/uC-OSIII/os_flag.c ****                      p_tcb,
 677:Libraries/uC-OSIII/os_flag.c ****                      ts);
 678:Libraries/uC-OSIII/os_flag.c ****         nbr_tasks++;
 1628              		.loc 1 678 0
 1629 0c8e FB8C     		ldrh	r3, [r7, #38]	@ movhi
 1630 0c90 03F10103 		add	r3, r3, #1
 1631 0c94 FB84     		strh	r3, [r7, #38]	@ movhi
 679:Libraries/uC-OSIII/os_flag.c ****         if (opt != OS_OPT_PEND_ABORT_ALL) {                 /* Pend abort all tasks waiting?       
 1632              		.loc 1 679 0
 1633 0c96 7B89     		ldrh	r3, [r7, #10]
 1634 0c98 B3F5807F 		cmp	r3, #256
 1635 0c9c 04D1     		bne	.L114
 1636              	.L108:
 673:Libraries/uC-OSIII/os_flag.c ****     while (p_pend_list->NbrEntries > (OS_OBJ_QTY)0u) {
 1637              		.loc 1 673 0 discriminator 1
 1638 0c9e FB69     		ldr	r3, [r7, #28]
 1639 0ca0 1B89     		ldrh	r3, [r3, #8]
 1640 0ca2 002B     		cmp	r3, #0
 1641 0ca4 EAD1     		bne	.L110
 1642 0ca6 00E0     		b	.L109
 1643              	.L114:
 680:Libraries/uC-OSIII/os_flag.c ****             break;                                          /* No                                  
 1644              		.loc 1 680 0
 1645 0ca8 00BF     		nop
 1646              	.L109:
 681:Libraries/uC-OSIII/os_flag.c ****         }
 682:Libraries/uC-OSIII/os_flag.c ****     }
 683:Libraries/uC-OSIII/os_flag.c ****     OS_CRITICAL_EXIT_NO_SCHED();
 1647              		.loc 1 683 0
 1648 0caa FFF7FEFF 		bl	CPU_SR_Save
 1649 0cae 3862     		str	r0, [r7, #32]
 1650 0cb0 FFF7FEFF 		bl	CPU_IntDisMeasStart
 1651 0cb4 40F20003 		movw	r3, #:lower16:OSSchedLockNestingCtr
 1652 0cb8 C0F20003 		movt	r3, #:upper16:OSSchedLockNestingCtr
 1653 0cbc 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1654 0cbe 03F1FF33 		add	r3, r3, #-1
 1655 0cc2 DAB2     		uxtb	r2, r3
 1656 0cc4 40F20003 		movw	r3, #:lower16:OSSchedLockNestingCtr
 1657 0cc8 C0F20003 		movt	r3, #:upper16:OSSchedLockNestingCtr
 1658 0ccc 1A70     		strb	r2, [r3, #0]
 1659 0cce 40F20003 		movw	r3, #:lower16:OSSchedLockNestingCtr
 1660 0cd2 C0F20003 		movt	r3, #:upper16:OSSchedLockNestingCtr
 1661 0cd6 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1662 0cd8 002B     		cmp	r3, #0
 1663 0cda 01D1     		bne	.L111
 1664              		.loc 1 683 0 is_stmt 0 discriminator 1
 1665 0cdc FFF7FEFF 		bl	OS_SchedLockTimeMeasStop
 1666              	.L111:
 1667              		.loc 1 683 0 discriminator 2
 1668 0ce0 FFF7FEFF 		bl	CPU_IntDisMeasStop
 1669 0ce4 386A     		ldr	r0, [r7, #32]
 1670 0ce6 FFF7FEFF 		bl	CPU_SR_Restore
 684:Libraries/uC-OSIII/os_flag.c **** 
 685:Libraries/uC-OSIII/os_flag.c ****     if ((opt & OS_OPT_POST_NO_SCHED) == (OS_OPT)0u) {
 1671              		.loc 1 685 0 is_stmt 1 discriminator 2
 1672 0cea 7B89     		ldrh	r3, [r7, #10]
 1673 0cec 1BB2     		sxth	r3, r3
 1674 0cee 002B     		cmp	r3, #0
 1675 0cf0 01DB     		blt	.L112
 686:Libraries/uC-OSIII/os_flag.c ****         OSSched();                                          /* Run the scheduler                   
 1676              		.loc 1 686 0
 1677 0cf2 FFF7FEFF 		bl	OSSched
 1678              	.L112:
 687:Libraries/uC-OSIII/os_flag.c ****     }
 688:Libraries/uC-OSIII/os_flag.c **** 
 689:Libraries/uC-OSIII/os_flag.c ****    *p_err = OS_ERR_NONE;
 1679              		.loc 1 689 0
 1680 0cf6 7B68     		ldr	r3, [r7, #4]
 1681 0cf8 4FF00002 		mov	r2, #0
 1682 0cfc 1A80     		strh	r2, [r3, #0]	@ movhi
 690:Libraries/uC-OSIII/os_flag.c ****     return (nbr_tasks);
 1683              		.loc 1 690 0
 1684 0cfe FB8C     		ldrh	r3, [r7, #38]
 1685              	.L100:
 691:Libraries/uC-OSIII/os_flag.c **** }
 1686              		.loc 1 691 0
 1687 0d00 1846     		mov	r0, r3
 1688 0d02 07F12807 		add	r7, r7, #40
 1689 0d06 BD46     		mov	sp, r7
 1690 0d08 80BD     		pop	{r7, pc}
 1691              		.cfi_endproc
 1692              	.LFE3:
 1694 0d0a 00BF     		.align	2
 1695              		.global	OSFlagPendGetFlagsRdy
 1696              		.thumb
 1697              		.thumb_func
 1699              	OSFlagPendGetFlagsRdy:
 1700              	.LFB4:
 692:Libraries/uC-OSIII/os_flag.c **** #endif
 693:Libraries/uC-OSIII/os_flag.c **** 
 694:Libraries/uC-OSIII/os_flag.c **** /*$PAGE*/
 695:Libraries/uC-OSIII/os_flag.c **** /*
 696:Libraries/uC-OSIII/os_flag.c **** ***************************************************************************************************
 697:Libraries/uC-OSIII/os_flag.c **** *                                       GET FLAGS WHO CAUSED TASK TO BECOME READY
 698:Libraries/uC-OSIII/os_flag.c **** *
 699:Libraries/uC-OSIII/os_flag.c **** * Description: This function is called to obtain the flags that caused the task to become ready to 
 700:Libraries/uC-OSIII/os_flag.c **** *              In other words, this function allows you to tell "Who done it!".
 701:Libraries/uC-OSIII/os_flag.c **** *
 702:Libraries/uC-OSIII/os_flag.c **** * Arguments  : p_err     is a pointer to an error code
 703:Libraries/uC-OSIII/os_flag.c **** *
 704:Libraries/uC-OSIII/os_flag.c **** *                            OS_ERR_NONE       if the call was successful
 705:Libraries/uC-OSIII/os_flag.c **** *                            OS_ERR_PEND_ISR   if called from an ISR
 706:Libraries/uC-OSIII/os_flag.c **** *
 707:Libraries/uC-OSIII/os_flag.c **** * Returns    : The flags that caused the task to be ready.
 708:Libraries/uC-OSIII/os_flag.c **** ***************************************************************************************************
 709:Libraries/uC-OSIII/os_flag.c **** */
 710:Libraries/uC-OSIII/os_flag.c **** 
 711:Libraries/uC-OSIII/os_flag.c **** OS_FLAGS  OSFlagPendGetFlagsRdy (OS_ERR  *p_err)
 712:Libraries/uC-OSIII/os_flag.c **** {
 1701              		.loc 1 712 0
 1702              		.cfi_startproc
 1703              		@ args = 0, pretend = 0, frame = 16
 1704              		@ frame_needed = 1, uses_anonymous_args = 0
 1705 0d0c 80B5     		push	{r7, lr}
 1706              	.LCFI12:
 1707              		.cfi_def_cfa_offset 8
 1708              		.cfi_offset 14, -4
 1709              		.cfi_offset 7, -8
 1710 0d0e 84B0     		sub	sp, sp, #16
 1711              	.LCFI13:
 1712              		.cfi_def_cfa_offset 24
 1713 0d10 00AF     		add	r7, sp, #0
 1714              	.LCFI14:
 1715              		.cfi_def_cfa_register 7
 1716 0d12 7860     		str	r0, [r7, #4]
 713:Libraries/uC-OSIII/os_flag.c ****     OS_FLAGS   flags;
 714:Libraries/uC-OSIII/os_flag.c ****     CPU_SR_ALLOC();
 1717              		.loc 1 714 0
 1718 0d14 4FF00003 		mov	r3, #0
 1719 0d18 FB60     		str	r3, [r7, #12]
 715:Libraries/uC-OSIII/os_flag.c **** 
 716:Libraries/uC-OSIII/os_flag.c **** 
 717:Libraries/uC-OSIII/os_flag.c **** 
 718:Libraries/uC-OSIII/os_flag.c **** #ifdef OS_SAFETY_CRITICAL
 719:Libraries/uC-OSIII/os_flag.c ****     if (p_err == (OS_ERR *)0) {
 720:Libraries/uC-OSIII/os_flag.c ****         OS_SAFETY_CRITICAL_EXCEPTION();
 721:Libraries/uC-OSIII/os_flag.c ****     }
 722:Libraries/uC-OSIII/os_flag.c **** #endif
 723:Libraries/uC-OSIII/os_flag.c **** 
 724:Libraries/uC-OSIII/os_flag.c **** #if OS_CFG_CALLED_FROM_ISR_CHK_EN > 0u
 725:Libraries/uC-OSIII/os_flag.c ****     if (OSIntNestingCtr > (OS_NESTING_CTR)0) {              /* See if called from ISR ...          
 1720              		.loc 1 725 0
 1721 0d1a 40F20003 		movw	r3, #:lower16:OSIntNestingCtr
 1722 0d1e C0F20003 		movt	r3, #:upper16:OSIntNestingCtr
 1723 0d22 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1724 0d24 002B     		cmp	r3, #0
 1725 0d26 06D0     		beq	.L116
 726:Libraries/uC-OSIII/os_flag.c ****         *p_err = OS_ERR_PEND_ISR;                           /* ... can't get from an ISR           
 1726              		.loc 1 726 0
 1727 0d28 7B68     		ldr	r3, [r7, #4]
 1728 0d2a 46F2AE12 		movw	r2, #25006
 1729 0d2e 1A80     		strh	r2, [r3, #0]	@ movhi
 727:Libraries/uC-OSIII/os_flag.c ****         return ((OS_FLAGS)0);
 1730              		.loc 1 727 0
 1731 0d30 4FF00003 		mov	r3, #0
 1732 0d34 15E0     		b	.L117
 1733              	.L116:
 728:Libraries/uC-OSIII/os_flag.c ****     }
 729:Libraries/uC-OSIII/os_flag.c **** #endif
 730:Libraries/uC-OSIII/os_flag.c **** 
 731:Libraries/uC-OSIII/os_flag.c ****     CPU_CRITICAL_ENTER();
 1734              		.loc 1 731 0
 1735 0d36 FFF7FEFF 		bl	CPU_SR_Save
 1736 0d3a F860     		str	r0, [r7, #12]
 1737 0d3c FFF7FEFF 		bl	CPU_IntDisMeasStart
 732:Libraries/uC-OSIII/os_flag.c ****     flags  = OSTCBCurPtr->FlagsRdy;
 1738              		.loc 1 732 0
 1739 0d40 40F20003 		movw	r3, #:lower16:OSTCBCurPtr
 1740 0d44 C0F20003 		movt	r3, #:upper16:OSTCBCurPtr
 1741 0d48 1B68     		ldr	r3, [r3, #0]
 1742 0d4a 5B6E     		ldr	r3, [r3, #100]
 1743 0d4c BB60     		str	r3, [r7, #8]
 733:Libraries/uC-OSIII/os_flag.c ****     CPU_CRITICAL_EXIT();
 1744              		.loc 1 733 0
 1745 0d4e FFF7FEFF 		bl	CPU_IntDisMeasStop
 1746 0d52 F868     		ldr	r0, [r7, #12]
 1747 0d54 FFF7FEFF 		bl	CPU_SR_Restore
 734:Libraries/uC-OSIII/os_flag.c ****     *p_err = OS_ERR_NONE;
 1748              		.loc 1 734 0
 1749 0d58 7B68     		ldr	r3, [r7, #4]
 1750 0d5a 4FF00002 		mov	r2, #0
 1751 0d5e 1A80     		strh	r2, [r3, #0]	@ movhi
 735:Libraries/uC-OSIII/os_flag.c ****     return (flags);
 1752              		.loc 1 735 0
 1753 0d60 BB68     		ldr	r3, [r7, #8]
 1754              	.L117:
 736:Libraries/uC-OSIII/os_flag.c **** }
 1755              		.loc 1 736 0
 1756 0d62 1846     		mov	r0, r3
 1757 0d64 07F11007 		add	r7, r7, #16
 1758 0d68 BD46     		mov	sp, r7
 1759 0d6a 80BD     		pop	{r7, pc}
 1760              		.cfi_endproc
 1761              	.LFE4:
 1763              		.align	2
 1764              		.global	OSFlagPost
 1765              		.thumb
 1766              		.thumb_func
 1768              	OSFlagPost:
 1769              	.LFB5:
 737:Libraries/uC-OSIII/os_flag.c **** 
 738:Libraries/uC-OSIII/os_flag.c **** /*$PAGE*/
 739:Libraries/uC-OSIII/os_flag.c **** /*
 740:Libraries/uC-OSIII/os_flag.c **** ***************************************************************************************************
 741:Libraries/uC-OSIII/os_flag.c **** *                                                POST EVENT FLAG BIT(S)
 742:Libraries/uC-OSIII/os_flag.c **** *
 743:Libraries/uC-OSIII/os_flag.c **** * Description: This function is called to set or clear some bits in an event flag group.  The bits 
 744:Libraries/uC-OSIII/os_flag.c **** *              specified by a 'bit mask'.
 745:Libraries/uC-OSIII/os_flag.c **** *
 746:Libraries/uC-OSIII/os_flag.c **** * Arguments  : p_grp         is a pointer to the desired event flag group.
 747:Libraries/uC-OSIII/os_flag.c **** *
 748:Libraries/uC-OSIII/os_flag.c **** *              flags         If 'opt' (see below) is OS_OPT_POST_FLAG_SET, each bit that is set in 
 749:Libraries/uC-OSIII/os_flag.c **** *                            set the corresponding bit in the event flag group.  e.g. to set bits 0
 750:Libraries/uC-OSIII/os_flag.c **** *                            and 5 you would set 'flags' to:
 751:Libraries/uC-OSIII/os_flag.c **** *
 752:Libraries/uC-OSIII/os_flag.c **** *                                0x31     (note, bit 0 is least significant bit)
 753:Libraries/uC-OSIII/os_flag.c **** *
 754:Libraries/uC-OSIII/os_flag.c **** *                            If 'opt' (see below) is OS_OPT_POST_FLAG_CLR, each bit that is set in 
 755:Libraries/uC-OSIII/os_flag.c **** *                            CLEAR the corresponding bit in the event flag group.  e.g. to clear bi
 756:Libraries/uC-OSIII/os_flag.c **** *                            4 and 5 you would specify 'flags' as:
 757:Libraries/uC-OSIII/os_flag.c **** *
 758:Libraries/uC-OSIII/os_flag.c **** *                                0x31     (note, bit 0 is least significant bit)
 759:Libraries/uC-OSIII/os_flag.c **** *
 760:Libraries/uC-OSIII/os_flag.c **** *              opt           indicates whether the flags will be:
 761:Libraries/uC-OSIII/os_flag.c **** *
 762:Libraries/uC-OSIII/os_flag.c **** *                                OS_OPT_POST_FLAG_SET       set
 763:Libraries/uC-OSIII/os_flag.c **** *                                OS_OPT_POST_FLAG_CLR       cleared
 764:Libraries/uC-OSIII/os_flag.c **** *
 765:Libraries/uC-OSIII/os_flag.c **** *              p_err         is a pointer to an error code and can be:
 766:Libraries/uC-OSIII/os_flag.c **** *
 767:Libraries/uC-OSIII/os_flag.c **** *                                OS_ERR_NONE                The call was successful
 768:Libraries/uC-OSIII/os_flag.c **** *                                OS_ERR_OBJ_PTR_NULL        You passed a NULL pointer
 769:Libraries/uC-OSIII/os_flag.c **** *                                OS_ERR_OBJ_TYPE            You are not pointing to an event flag g
 770:Libraries/uC-OSIII/os_flag.c **** *                                OS_ERR_OPT_INVALID         You specified an invalid option
 771:Libraries/uC-OSIII/os_flag.c **** *
 772:Libraries/uC-OSIII/os_flag.c **** * Returns    : the new value of the event flags bits that are still set.
 773:Libraries/uC-OSIII/os_flag.c **** *
 774:Libraries/uC-OSIII/os_flag.c **** * Note(s)    : 1) The execution time of this function depends on the number of tasks waiting on the
 775:Libraries/uC-OSIII/os_flag.c **** ***************************************************************************************************
 776:Libraries/uC-OSIII/os_flag.c **** */
 777:Libraries/uC-OSIII/os_flag.c **** OS_FLAGS  OSFlagPost (OS_FLAG_GRP  *p_grp,
 778:Libraries/uC-OSIII/os_flag.c ****                       OS_FLAGS      flags,
 779:Libraries/uC-OSIII/os_flag.c ****                       OS_OPT        opt,
 780:Libraries/uC-OSIII/os_flag.c ****                       OS_ERR       *p_err)
 781:Libraries/uC-OSIII/os_flag.c **** {
 1770              		.loc 1 781 0
 1771              		.cfi_startproc
 1772              		@ args = 0, pretend = 0, frame = 24
 1773              		@ frame_needed = 1, uses_anonymous_args = 0
 1774 0d6c 80B5     		push	{r7, lr}
 1775              	.LCFI15:
 1776              		.cfi_def_cfa_offset 8
 1777              		.cfi_offset 14, -4
 1778              		.cfi_offset 7, -8
 1779 0d6e 8AB0     		sub	sp, sp, #40
 1780              	.LCFI16:
 1781              		.cfi_def_cfa_offset 48
 1782 0d70 04AF     		add	r7, sp, #16
 1783              	.LCFI17:
 1784              		.cfi_def_cfa 7, 32
 1785 0d72 F860     		str	r0, [r7, #12]
 1786 0d74 B960     		str	r1, [r7, #8]
 1787 0d76 3B60     		str	r3, [r7, #0]
 1788 0d78 1346     		mov	r3, r2	@ movhi
 1789 0d7a FB80     		strh	r3, [r7, #6]	@ movhi
 782:Libraries/uC-OSIII/os_flag.c ****     OS_FLAGS  flags_cur;
 783:Libraries/uC-OSIII/os_flag.c ****     CPU_TS    ts;
 784:Libraries/uC-OSIII/os_flag.c **** 
 785:Libraries/uC-OSIII/os_flag.c **** 
 786:Libraries/uC-OSIII/os_flag.c **** 
 787:Libraries/uC-OSIII/os_flag.c **** #ifdef OS_SAFETY_CRITICAL
 788:Libraries/uC-OSIII/os_flag.c ****     if (p_err == (OS_ERR *)0) {
 789:Libraries/uC-OSIII/os_flag.c ****         OS_SAFETY_CRITICAL_EXCEPTION();
 790:Libraries/uC-OSIII/os_flag.c ****     }
 791:Libraries/uC-OSIII/os_flag.c **** #endif
 792:Libraries/uC-OSIII/os_flag.c **** 
 793:Libraries/uC-OSIII/os_flag.c **** #if OS_CFG_ARG_CHK_EN > 0u
 794:Libraries/uC-OSIII/os_flag.c ****     if (p_grp == (OS_FLAG_GRP *)0) {                        /* Validate 'p_grp'                    
 1790              		.loc 1 794 0
 1791 0d7c FB68     		ldr	r3, [r7, #12]
 1792 0d7e 002B     		cmp	r3, #0
 1793 0d80 06D1     		bne	.L119
 795:Libraries/uC-OSIII/os_flag.c ****         *p_err = OS_ERR_OBJ_PTR_NULL;
 1794              		.loc 1 795 0
 1795 0d82 3B68     		ldr	r3, [r7, #0]
 1796 0d84 45F6C352 		movw	r2, #24003
 1797 0d88 1A80     		strh	r2, [r3, #0]	@ movhi
 796:Libraries/uC-OSIII/os_flag.c ****         return ((OS_FLAGS)0);
 1798              		.loc 1 796 0
 1799 0d8a 4FF00003 		mov	r3, #0
 1800 0d8e 47E0     		b	.L120
 1801              	.L119:
 797:Libraries/uC-OSIII/os_flag.c ****     }
 798:Libraries/uC-OSIII/os_flag.c **** 
 799:Libraries/uC-OSIII/os_flag.c ****     switch (opt) {
 1802              		.loc 1 799 0
 1803 0d90 FB88     		ldrh	r3, [r7, #6]
 1804 0d92 03F10003 		add	r3, r3, #0
 1805 0d96 012B     		cmp	r3, #1
 1806 0d98 09D8     		bhi	.L121
 800:Libraries/uC-OSIII/os_flag.c ****         case OS_OPT_POST_FLAG_SET:
 801:Libraries/uC-OSIII/os_flag.c ****         case OS_OPT_POST_FLAG_CLR:
 802:Libraries/uC-OSIII/os_flag.c ****              break;
 1807              		.loc 1 802 0
 1808 0d9a 00BF     		nop
 803:Libraries/uC-OSIII/os_flag.c **** 
 804:Libraries/uC-OSIII/os_flag.c ****         default:
 805:Libraries/uC-OSIII/os_flag.c ****              *p_err = OS_ERR_OPT_INVALID;
 806:Libraries/uC-OSIII/os_flag.c ****              return ((OS_FLAGS)0);
 807:Libraries/uC-OSIII/os_flag.c ****     }
 808:Libraries/uC-OSIII/os_flag.c **** 
 809:Libraries/uC-OSIII/os_flag.c **** #endif
 810:Libraries/uC-OSIII/os_flag.c **** 
 811:Libraries/uC-OSIII/os_flag.c **** #if OS_CFG_OBJ_TYPE_CHK_EN > 0u
 812:Libraries/uC-OSIII/os_flag.c ****     if (p_grp->Type != OS_OBJ_TYPE_FLAG) {                  /* Make sure we are pointing to an even
 1809              		.loc 1 812 0
 1810 0d9c FB68     		ldr	r3, [r7, #12]
 1811 0d9e 1A68     		ldr	r2, [r3, #0]
 1812 0da0 44F64643 		movw	r3, #19526
 1813 0da4 C4F24173 		movt	r3, 18241
 1814 0da8 9A42     		cmp	r2, r3
 1815 0daa 0ED0     		beq	.L124
 1816 0dac 06E0     		b	.L126
 1817              	.L121:
 805:Libraries/uC-OSIII/os_flag.c ****              *p_err = OS_ERR_OPT_INVALID;
 1818              		.loc 1 805 0
 1819 0dae 3B68     		ldr	r3, [r7, #0]
 1820 0db0 45F62562 		movw	r2, #24101
 1821 0db4 1A80     		strh	r2, [r3, #0]	@ movhi
 806:Libraries/uC-OSIII/os_flag.c ****              return ((OS_FLAGS)0);
 1822              		.loc 1 806 0
 1823 0db6 4FF00003 		mov	r3, #0
 1824 0dba 31E0     		b	.L120
 1825              	.L126:
 813:Libraries/uC-OSIII/os_flag.c ****         *p_err = OS_ERR_OBJ_TYPE;
 1826              		.loc 1 813 0
 1827 0dbc 3B68     		ldr	r3, [r7, #0]
 1828 0dbe 45F6C452 		movw	r2, #24004
 1829 0dc2 1A80     		strh	r2, [r3, #0]	@ movhi
 814:Libraries/uC-OSIII/os_flag.c ****         return ((OS_FLAGS)0);
 1830              		.loc 1 814 0
 1831 0dc4 4FF00003 		mov	r3, #0
 1832 0dc8 2AE0     		b	.L120
 1833              	.L124:
 815:Libraries/uC-OSIII/os_flag.c ****     }
 816:Libraries/uC-OSIII/os_flag.c **** #endif
 817:Libraries/uC-OSIII/os_flag.c **** 
 818:Libraries/uC-OSIII/os_flag.c ****     ts = OS_TS_GET();                                       /* Get timestamp                       
 1834              		.loc 1 818 0
 1835 0dca FFF7FEFF 		bl	CPU_TS_TmrRd
 1836 0dce 7861     		str	r0, [r7, #20]
 819:Libraries/uC-OSIII/os_flag.c **** #if OS_CFG_ISR_POST_DEFERRED_EN > 0u
 820:Libraries/uC-OSIII/os_flag.c ****     if (OSIntNestingCtr > (OS_NESTING_CTR)0) {              /* See if called from an ISR           
 1837              		.loc 1 820 0
 1838 0dd0 40F20003 		movw	r3, #:lower16:OSIntNestingCtr
 1839 0dd4 C0F20003 		movt	r3, #:upper16:OSIntNestingCtr
 1840 0dd8 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1841 0dda 002B     		cmp	r3, #0
 1842 0ddc 15D0     		beq	.L125
 821:Libraries/uC-OSIII/os_flag.c ****         OS_IntQPost((OS_OBJ_TYPE)OS_OBJ_TYPE_FLAG,          /* Post to ISR queue                   
 1843              		.loc 1 821 0
 1844 0dde BB68     		ldr	r3, [r7, #8]
 1845 0de0 0093     		str	r3, [sp, #0]
 1846 0de2 FB88     		ldrh	r3, [r7, #6]
 1847 0de4 0193     		str	r3, [sp, #4]
 1848 0de6 7B69     		ldr	r3, [r7, #20]
 1849 0de8 0293     		str	r3, [sp, #8]
 1850 0dea 3B68     		ldr	r3, [r7, #0]
 1851 0dec 0393     		str	r3, [sp, #12]
 1852 0dee 44F64640 		movw	r0, #19526
 1853 0df2 C4F24170 		movt	r0, 18241
 1854 0df6 F968     		ldr	r1, [r7, #12]
 1855 0df8 4FF00002 		mov	r2, #0
 1856 0dfc 4FF00003 		mov	r3, #0
 1857 0e00 FFF7FEFF 		bl	OS_IntQPost
 822:Libraries/uC-OSIII/os_flag.c ****                     (void      *)p_grp,
 823:Libraries/uC-OSIII/os_flag.c ****                     (void      *)0,
 824:Libraries/uC-OSIII/os_flag.c ****                     (OS_MSG_SIZE)0,
 825:Libraries/uC-OSIII/os_flag.c ****                     (OS_FLAGS   )flags,
 826:Libraries/uC-OSIII/os_flag.c ****                     (OS_OPT     )opt,
 827:Libraries/uC-OSIII/os_flag.c ****                     (CPU_TS     )ts,
 828:Libraries/uC-OSIII/os_flag.c ****                     (OS_ERR    *)p_err);
 829:Libraries/uC-OSIII/os_flag.c ****         return ((OS_FLAGS)0);
 1858              		.loc 1 829 0
 1859 0e04 4FF00003 		mov	r3, #0
 1860 0e08 0AE0     		b	.L120
 1861              	.L125:
 830:Libraries/uC-OSIII/os_flag.c ****     }
 831:Libraries/uC-OSIII/os_flag.c **** #endif
 832:Libraries/uC-OSIII/os_flag.c **** 
 833:Libraries/uC-OSIII/os_flag.c ****     flags_cur = OS_FlagPost(p_grp,
 1862              		.loc 1 833 0
 1863 0e0a FB88     		ldrh	r3, [r7, #6]
 1864 0e0c 3A68     		ldr	r2, [r7, #0]
 1865 0e0e 0092     		str	r2, [sp, #0]
 1866 0e10 F868     		ldr	r0, [r7, #12]
 1867 0e12 B968     		ldr	r1, [r7, #8]
 1868 0e14 1A46     		mov	r2, r3
 1869 0e16 7B69     		ldr	r3, [r7, #20]
 1870 0e18 FFF7FEFF 		bl	OS_FlagPost
 1871 0e1c 3861     		str	r0, [r7, #16]
 834:Libraries/uC-OSIII/os_flag.c ****                             flags,
 835:Libraries/uC-OSIII/os_flag.c ****                             opt,
 836:Libraries/uC-OSIII/os_flag.c ****                             ts,
 837:Libraries/uC-OSIII/os_flag.c ****                             p_err);
 838:Libraries/uC-OSIII/os_flag.c **** 
 839:Libraries/uC-OSIII/os_flag.c ****     return (flags_cur);
 1872              		.loc 1 839 0
 1873 0e1e 3B69     		ldr	r3, [r7, #16]
 1874              	.L120:
 840:Libraries/uC-OSIII/os_flag.c **** }
 1875              		.loc 1 840 0
 1876 0e20 1846     		mov	r0, r3
 1877 0e22 07F11807 		add	r7, r7, #24
 1878 0e26 BD46     		mov	sp, r7
 1879 0e28 80BD     		pop	{r7, pc}
 1880              		.cfi_endproc
 1881              	.LFE5:
 1883 0e2a 00BF     		.align	2
 1884              		.global	OS_FlagBlock
 1885              		.thumb
 1886              		.thumb_func
 1888              	OS_FlagBlock:
 1889              	.LFB6:
 841:Libraries/uC-OSIII/os_flag.c **** 
 842:Libraries/uC-OSIII/os_flag.c **** /*$PAGE*/
 843:Libraries/uC-OSIII/os_flag.c **** /*
 844:Libraries/uC-OSIII/os_flag.c **** ***************************************************************************************************
 845:Libraries/uC-OSIII/os_flag.c **** *                         SUSPEND TASK UNTIL EVENT FLAG(s) RECEIVED OR TIMEOUT OCCURS
 846:Libraries/uC-OSIII/os_flag.c **** *
 847:Libraries/uC-OSIII/os_flag.c **** * Description: This function is internal to uC/OS-III and is used to put a task to sleep until the 
 848:Libraries/uC-OSIII/os_flag.c **** *              event flag bit(s) are set.
 849:Libraries/uC-OSIII/os_flag.c **** *
 850:Libraries/uC-OSIII/os_flag.c **** * Arguments  : p_pend_data    is a pointer to an object used to link the task being blocked to the 
 851:Libraries/uC-OSIII/os_flag.c **** *              -----------    pending on the desired event flag group.
 852:Libraries/uC-OSIII/os_flag.c **** *
 853:Libraries/uC-OSIII/os_flag.c **** *              p_grp         is a pointer to the desired event flag group.
 854:Libraries/uC-OSIII/os_flag.c **** *              -----
 855:Libraries/uC-OSIII/os_flag.c **** *
 856:Libraries/uC-OSIII/os_flag.c **** *              flags         Is a bit pattern indicating which bit(s) (i.e. flags) you wish to chec
 857:Libraries/uC-OSIII/os_flag.c **** *                            The bits you want are specified by setting the corresponding bits in
 858:Libraries/uC-OSIII/os_flag.c **** *                            'flags'.  e.g. if your application wants to wait for bits 0 and 1 then
 859:Libraries/uC-OSIII/os_flag.c **** *                            'flags' would contain 0x03.
 860:Libraries/uC-OSIII/os_flag.c **** *
 861:Libraries/uC-OSIII/os_flag.c **** *              opt           specifies whether you want ALL bits to be set/cleared or ANY of the bi
 862:Libraries/uC-OSIII/os_flag.c **** *                            to be set/cleared.
 863:Libraries/uC-OSIII/os_flag.c **** *                            You can specify the following argument:
 864:Libraries/uC-OSIII/os_flag.c **** *
 865:Libraries/uC-OSIII/os_flag.c **** *                                OS_OPT_PEND_FLAG_CLR_ALL   You will check ALL bits in 'mask' to be
 866:Libraries/uC-OSIII/os_flag.c **** *                                OS_OPT_PEND_FLAG_CLR_ANY   You will check ANY bit  in 'mask' to be
 867:Libraries/uC-OSIII/os_flag.c **** *                                OS_OPT_PEND_FLAG_SET_ALL   You will check ALL bits in 'mask' to be
 868:Libraries/uC-OSIII/os_flag.c **** *                                OS_OPT_PEND_FLAG_SET_ANY   You will check ANY bit  in 'mask' to be
 869:Libraries/uC-OSIII/os_flag.c **** *
 870:Libraries/uC-OSIII/os_flag.c **** *              timeout       is the desired amount of time that the task will wait for the event fl
 871:Libraries/uC-OSIII/os_flag.c **** *                            bit(s) to be set.
 872:Libraries/uC-OSIII/os_flag.c **** *
 873:Libraries/uC-OSIII/os_flag.c **** * Returns    : none
 874:Libraries/uC-OSIII/os_flag.c **** *
 875:Libraries/uC-OSIII/os_flag.c **** * Note(s)    : This function is INTERNAL to uC/OS-III and your application should not call it.
 876:Libraries/uC-OSIII/os_flag.c **** ***************************************************************************************************
 877:Libraries/uC-OSIII/os_flag.c **** */
 878:Libraries/uC-OSIII/os_flag.c **** 
 879:Libraries/uC-OSIII/os_flag.c **** void  OS_FlagBlock (OS_PEND_DATA  *p_pend_data,
 880:Libraries/uC-OSIII/os_flag.c ****                     OS_FLAG_GRP   *p_grp,
 881:Libraries/uC-OSIII/os_flag.c ****                     OS_FLAGS       flags,
 882:Libraries/uC-OSIII/os_flag.c ****                     OS_OPT         opt,
 883:Libraries/uC-OSIII/os_flag.c ****                     OS_TICK        timeout)
 884:Libraries/uC-OSIII/os_flag.c **** {
 1890              		.loc 1 884 0
 1891              		.cfi_startproc
 1892              		@ args = 4, pretend = 0, frame = 16
 1893              		@ frame_needed = 1, uses_anonymous_args = 0
 1894 0e2c 80B5     		push	{r7, lr}
 1895              	.LCFI18:
 1896              		.cfi_def_cfa_offset 8
 1897              		.cfi_offset 14, -4
 1898              		.cfi_offset 7, -8
 1899 0e2e 84B0     		sub	sp, sp, #16
 1900              	.LCFI19:
 1901              		.cfi_def_cfa_offset 24
 1902 0e30 00AF     		add	r7, sp, #0
 1903              	.LCFI20:
 1904              		.cfi_def_cfa_register 7
 1905 0e32 F860     		str	r0, [r7, #12]
 1906 0e34 B960     		str	r1, [r7, #8]
 1907 0e36 7A60     		str	r2, [r7, #4]
 1908 0e38 7B80     		strh	r3, [r7, #2]	@ movhi
 885:Libraries/uC-OSIII/os_flag.c ****     OSTCBCurPtr->FlagsPend = flags;                         /* Save the flags that we need to wait 
 1909              		.loc 1 885 0
 1910 0e3a 40F20003 		movw	r3, #:lower16:OSTCBCurPtr
 1911 0e3e C0F20003 		movt	r3, #:upper16:OSTCBCurPtr
 1912 0e42 1B68     		ldr	r3, [r3, #0]
 1913 0e44 7A68     		ldr	r2, [r7, #4]
 1914 0e46 DA65     		str	r2, [r3, #92]
 886:Libraries/uC-OSIII/os_flag.c ****     OSTCBCurPtr->FlagsOpt  = opt;                           /* Save the type of wait we are doing  
 1915              		.loc 1 886 0
 1916 0e48 40F20003 		movw	r3, #:lower16:OSTCBCurPtr
 1917 0e4c C0F20003 		movt	r3, #:upper16:OSTCBCurPtr
 1918 0e50 1B68     		ldr	r3, [r3, #0]
 1919 0e52 7A88     		ldrh	r2, [r7, #2]	@ movhi
 1920 0e54 A3F86020 		strh	r2, [r3, #96]	@ movhi
 887:Libraries/uC-OSIII/os_flag.c ****     OSTCBCurPtr->FlagsRdy  = (OS_FLAGS)0;
 1921              		.loc 1 887 0
 1922 0e58 40F20003 		movw	r3, #:lower16:OSTCBCurPtr
 1923 0e5c C0F20003 		movt	r3, #:upper16:OSTCBCurPtr
 1924 0e60 1B68     		ldr	r3, [r3, #0]
 1925 0e62 4FF00002 		mov	r2, #0
 1926 0e66 5A66     		str	r2, [r3, #100]
 888:Libraries/uC-OSIII/os_flag.c **** 
 889:Libraries/uC-OSIII/os_flag.c ****     OS_Pend(p_pend_data,
 1927              		.loc 1 889 0
 1928 0e68 F868     		ldr	r0, [r7, #12]
 1929 0e6a B968     		ldr	r1, [r7, #8]
 1930 0e6c 4FF00102 		mov	r2, #1
 1931 0e70 BB69     		ldr	r3, [r7, #24]
 1932 0e72 FFF7FEFF 		bl	OS_Pend
 890:Libraries/uC-OSIII/os_flag.c ****             (OS_PEND_OBJ *)((void *)p_grp),
 891:Libraries/uC-OSIII/os_flag.c ****              OS_TASK_PEND_ON_FLAG,
 892:Libraries/uC-OSIII/os_flag.c ****              timeout);
 893:Libraries/uC-OSIII/os_flag.c **** }
 1933              		.loc 1 893 0
 1934 0e76 07F11007 		add	r7, r7, #16
 1935 0e7a BD46     		mov	sp, r7
 1936 0e7c 80BD     		pop	{r7, pc}
 1937              		.cfi_endproc
 1938              	.LFE6:
 1940              		.section	.rodata
 1941              		.align	2
 1942              	.LC0:
 1943 0000 3F464C41 		.ascii	"?FLAG\000"
 1943      4700
 1944              		.text
 1945 0e7e 00BF     		.align	2
 1946              		.global	OS_FlagClr
 1947              		.thumb
 1948              		.thumb_func
 1950              	OS_FlagClr:
 1951              	.LFB7:
 894:Libraries/uC-OSIII/os_flag.c **** 
 895:Libraries/uC-OSIII/os_flag.c **** /*$PAGE*/
 896:Libraries/uC-OSIII/os_flag.c **** /*
 897:Libraries/uC-OSIII/os_flag.c **** ***************************************************************************************************
 898:Libraries/uC-OSIII/os_flag.c **** *                                      CLEAR THE CONTENTS OF AN EVENT FLAG GROUP
 899:Libraries/uC-OSIII/os_flag.c **** *
 900:Libraries/uC-OSIII/os_flag.c **** * Description: This function is called by OSFlagDel() to clear the contents of an event flag group
 901:Libraries/uC-OSIII/os_flag.c **** *
 902:Libraries/uC-OSIII/os_flag.c **** 
 903:Libraries/uC-OSIII/os_flag.c **** * Argument(s): p_grp     is a pointer to the event flag group to clear
 904:Libraries/uC-OSIII/os_flag.c **** *              -----
 905:Libraries/uC-OSIII/os_flag.c **** *
 906:Libraries/uC-OSIII/os_flag.c **** * Returns    : none
 907:Libraries/uC-OSIII/os_flag.c **** *
 908:Libraries/uC-OSIII/os_flag.c **** * Note(s)    : This function is INTERNAL to uC/OS-III and your application should not call it.
 909:Libraries/uC-OSIII/os_flag.c **** ***************************************************************************************************
 910:Libraries/uC-OSIII/os_flag.c **** */
 911:Libraries/uC-OSIII/os_flag.c **** 
 912:Libraries/uC-OSIII/os_flag.c **** void  OS_FlagClr (OS_FLAG_GRP  *p_grp)
 913:Libraries/uC-OSIII/os_flag.c **** {
 1952              		.loc 1 913 0
 1953              		.cfi_startproc
 1954              		@ args = 0, pretend = 0, frame = 16
 1955              		@ frame_needed = 1, uses_anonymous_args = 0
 1956 0e80 80B5     		push	{r7, lr}
 1957              	.LCFI21:
 1958              		.cfi_def_cfa_offset 8
 1959              		.cfi_offset 14, -4
 1960              		.cfi_offset 7, -8
 1961 0e82 84B0     		sub	sp, sp, #16
 1962              	.LCFI22:
 1963              		.cfi_def_cfa_offset 24
 1964 0e84 00AF     		add	r7, sp, #0
 1965              	.LCFI23:
 1966              		.cfi_def_cfa_register 7
 1967 0e86 7860     		str	r0, [r7, #4]
 914:Libraries/uC-OSIII/os_flag.c ****     OS_PEND_LIST  *p_pend_list;
 915:Libraries/uC-OSIII/os_flag.c **** 
 916:Libraries/uC-OSIII/os_flag.c **** 
 917:Libraries/uC-OSIII/os_flag.c **** 
 918:Libraries/uC-OSIII/os_flag.c ****     p_grp->Type             = OS_OBJ_TYPE_NONE;
 1968              		.loc 1 918 0
 1969 0e88 7A68     		ldr	r2, [r7, #4]
 1970 0e8a 44F64E73 		movw	r3, #20302
 1971 0e8e C4F24E53 		movt	r3, 17742
 1972 0e92 1360     		str	r3, [r2, #0]
 919:Libraries/uC-OSIII/os_flag.c ****     p_grp->NamePtr          = (CPU_CHAR *)((void *)"?FLAG");    /* Unknown name                    
 1973              		.loc 1 919 0
 1974 0e94 7A68     		ldr	r2, [r7, #4]
 1975 0e96 40F20003 		movw	r3, #:lower16:.LC0
 1976 0e9a C0F20003 		movt	r3, #:upper16:.LC0
 1977 0e9e 5360     		str	r3, [r2, #4]
 920:Libraries/uC-OSIII/os_flag.c ****     p_grp->Flags            = (OS_FLAGS )0;
 1978              		.loc 1 920 0
 1979 0ea0 7B68     		ldr	r3, [r7, #4]
 1980 0ea2 4FF00002 		mov	r2, #0
 1981 0ea6 1A62     		str	r2, [r3, #32]
 921:Libraries/uC-OSIII/os_flag.c ****     p_pend_list             = &p_grp->PendList;
 1982              		.loc 1 921 0
 1983 0ea8 7B68     		ldr	r3, [r7, #4]
 1984 0eaa 03F10803 		add	r3, r3, #8
 1985 0eae FB60     		str	r3, [r7, #12]
 922:Libraries/uC-OSIII/os_flag.c ****     OS_PendListInit(p_pend_list);
 1986              		.loc 1 922 0
 1987 0eb0 F868     		ldr	r0, [r7, #12]
 1988 0eb2 FFF7FEFF 		bl	OS_PendListInit
 923:Libraries/uC-OSIII/os_flag.c **** }
 1989              		.loc 1 923 0
 1990 0eb6 07F11007 		add	r7, r7, #16
 1991 0eba BD46     		mov	sp, r7
 1992 0ebc 80BD     		pop	{r7, pc}
 1993              		.cfi_endproc
 1994              	.LFE7:
 1996 0ebe 00BF     		.align	2
 1997              		.global	OS_FlagInit
 1998              		.thumb
 1999              		.thumb_func
 2001              	OS_FlagInit:
 2002              	.LFB8:
 924:Libraries/uC-OSIII/os_flag.c **** 
 925:Libraries/uC-OSIII/os_flag.c **** /*$PAGE*/
 926:Libraries/uC-OSIII/os_flag.c **** /*
 927:Libraries/uC-OSIII/os_flag.c **** ***************************************************************************************************
 928:Libraries/uC-OSIII/os_flag.c **** *                                          INITIALIZE THE EVENT FLAG MODULE
 929:Libraries/uC-OSIII/os_flag.c **** *
 930:Libraries/uC-OSIII/os_flag.c **** * Description: This function is called by uC/OS-III to initialize the event flag module.  Your appl
 931:Libraries/uC-OSIII/os_flag.c **** *              this function.  In other words, this function is internal to uC/OS-III.
 932:Libraries/uC-OSIII/os_flag.c **** *
 933:Libraries/uC-OSIII/os_flag.c **** * Arguments  : p_err     is a pointer to an error code that can contain one of the following values
 934:Libraries/uC-OSIII/os_flag.c **** *
 935:Libraries/uC-OSIII/os_flag.c **** *                            OS_ERR_NONE   The call was successful.
 936:Libraries/uC-OSIII/os_flag.c **** *
 937:Libraries/uC-OSIII/os_flag.c **** * Returns    : none
 938:Libraries/uC-OSIII/os_flag.c **** *
 939:Libraries/uC-OSIII/os_flag.c **** * Note(s)    : This function is INTERNAL to uC/OS-III and your application should not call it.
 940:Libraries/uC-OSIII/os_flag.c **** ***************************************************************************************************
 941:Libraries/uC-OSIII/os_flag.c **** */
 942:Libraries/uC-OSIII/os_flag.c **** 
 943:Libraries/uC-OSIII/os_flag.c **** void  OS_FlagInit (OS_ERR  *p_err)
 944:Libraries/uC-OSIII/os_flag.c **** {
 2003              		.loc 1 944 0
 2004              		.cfi_startproc
 2005              		@ args = 0, pretend = 0, frame = 8
 2006              		@ frame_needed = 1, uses_anonymous_args = 0
 2007              		@ link register save eliminated.
 2008 0ec0 80B4     		push	{r7}
 2009              	.LCFI24:
 2010              		.cfi_def_cfa_offset 4
 2011              		.cfi_offset 7, -4
 2012 0ec2 83B0     		sub	sp, sp, #12
 2013              	.LCFI25:
 2014              		.cfi_def_cfa_offset 16
 2015 0ec4 00AF     		add	r7, sp, #0
 2016              	.LCFI26:
 2017              		.cfi_def_cfa_register 7
 2018 0ec6 7860     		str	r0, [r7, #4]
 945:Libraries/uC-OSIII/os_flag.c **** #ifdef OS_SAFETY_CRITICAL
 946:Libraries/uC-OSIII/os_flag.c ****     if (p_err == (OS_ERR *)0) {
 947:Libraries/uC-OSIII/os_flag.c ****         OS_SAFETY_CRITICAL_EXCEPTION();
 948:Libraries/uC-OSIII/os_flag.c ****     }
 949:Libraries/uC-OSIII/os_flag.c **** #endif
 950:Libraries/uC-OSIII/os_flag.c **** 
 951:Libraries/uC-OSIII/os_flag.c **** #if OS_CFG_DBG_EN > 0u
 952:Libraries/uC-OSIII/os_flag.c ****     OSFlagDbgListPtr = (OS_FLAG_GRP *)0;
 2019              		.loc 1 952 0
 2020 0ec8 40F20003 		movw	r3, #:lower16:OSFlagDbgListPtr
 2021 0ecc C0F20003 		movt	r3, #:upper16:OSFlagDbgListPtr
 2022 0ed0 4FF00002 		mov	r2, #0
 2023 0ed4 1A60     		str	r2, [r3, #0]
 953:Libraries/uC-OSIII/os_flag.c **** #endif
 954:Libraries/uC-OSIII/os_flag.c **** 
 955:Libraries/uC-OSIII/os_flag.c ****     OSFlagQty        = (OS_OBJ_QTY   )0;
 2024              		.loc 1 955 0
 2025 0ed6 40F20003 		movw	r3, #:lower16:OSFlagQty
 2026 0eda C0F20003 		movt	r3, #:upper16:OSFlagQty
 2027 0ede 4FF00002 		mov	r2, #0
 2028 0ee2 1A80     		strh	r2, [r3, #0]	@ movhi
 956:Libraries/uC-OSIII/os_flag.c ****     *p_err           = OS_ERR_NONE;
 2029              		.loc 1 956 0
 2030 0ee4 7B68     		ldr	r3, [r7, #4]
 2031 0ee6 4FF00002 		mov	r2, #0
 2032 0eea 1A80     		strh	r2, [r3, #0]	@ movhi
 957:Libraries/uC-OSIII/os_flag.c **** }
 2033              		.loc 1 957 0
 2034 0eec 07F10C07 		add	r7, r7, #12
 2035 0ef0 BD46     		mov	sp, r7
 2036 0ef2 80BC     		pop	{r7}
 2037 0ef4 7047     		bx	lr
 2038              		.cfi_endproc
 2039              	.LFE8:
 2041              		.section	.rodata
 2042 0006 0000     		.align	2
 2043              	.LC1:
 2044 0008 2000     		.ascii	" \000"
 2045 000a 0000     		.text
 2046 0ef6 00BF     		.align	2
 2047              		.global	OS_FlagDbgListAdd
 2048              		.thumb
 2049              		.thumb_func
 2051              	OS_FlagDbgListAdd:
 2052              	.LFB9:
 958:Libraries/uC-OSIII/os_flag.c **** 
 959:Libraries/uC-OSIII/os_flag.c **** /*$PAGE*/
 960:Libraries/uC-OSIII/os_flag.c **** /*
 961:Libraries/uC-OSIII/os_flag.c **** ***************************************************************************************************
 962:Libraries/uC-OSIII/os_flag.c **** *                                    ADD/REMOVE EVENT FLAG GROUP TO/FROM DEBUG LIST
 963:Libraries/uC-OSIII/os_flag.c **** *
 964:Libraries/uC-OSIII/os_flag.c **** * Description: These functions are called by uC/OS-III to add or remove an event flag group from th
 965:Libraries/uC-OSIII/os_flag.c **** *              list.
 966:Libraries/uC-OSIII/os_flag.c **** *
 967:Libraries/uC-OSIII/os_flag.c **** * Arguments  : p_grp     is a pointer to the event flag group to add/remove
 968:Libraries/uC-OSIII/os_flag.c **** *
 969:Libraries/uC-OSIII/os_flag.c **** * Returns    : none
 970:Libraries/uC-OSIII/os_flag.c **** *
 971:Libraries/uC-OSIII/os_flag.c **** * Note(s)    : These functions are INTERNAL to uC/OS-III and your application should not call it.
 972:Libraries/uC-OSIII/os_flag.c **** ***************************************************************************************************
 973:Libraries/uC-OSIII/os_flag.c **** */
 974:Libraries/uC-OSIII/os_flag.c **** 
 975:Libraries/uC-OSIII/os_flag.c **** #if OS_CFG_DBG_EN > 0u
 976:Libraries/uC-OSIII/os_flag.c **** void  OS_FlagDbgListAdd (OS_FLAG_GRP  *p_grp)
 977:Libraries/uC-OSIII/os_flag.c **** {
 2053              		.loc 1 977 0
 2054              		.cfi_startproc
 2055              		@ args = 0, pretend = 0, frame = 8
 2056              		@ frame_needed = 1, uses_anonymous_args = 0
 2057              		@ link register save eliminated.
 2058 0ef8 80B4     		push	{r7}
 2059              	.LCFI27:
 2060              		.cfi_def_cfa_offset 4
 2061              		.cfi_offset 7, -4
 2062 0efa 83B0     		sub	sp, sp, #12
 2063              	.LCFI28:
 2064              		.cfi_def_cfa_offset 16
 2065 0efc 00AF     		add	r7, sp, #0
 2066              	.LCFI29:
 2067              		.cfi_def_cfa_register 7
 2068 0efe 7860     		str	r0, [r7, #4]
 978:Libraries/uC-OSIII/os_flag.c ****     p_grp->DbgNamePtr                = (CPU_CHAR    *)((void *)" ");
 2069              		.loc 1 978 0
 2070 0f00 7A68     		ldr	r2, [r7, #4]
 2071 0f02 40F20003 		movw	r3, #:lower16:.LC1
 2072 0f06 C0F20003 		movt	r3, #:upper16:.LC1
 2073 0f0a D361     		str	r3, [r2, #28]
 979:Libraries/uC-OSIII/os_flag.c ****     p_grp->DbgPrevPtr                = (OS_FLAG_GRP *)0;
 2074              		.loc 1 979 0
 2075 0f0c 7B68     		ldr	r3, [r7, #4]
 2076 0f0e 4FF00002 		mov	r2, #0
 2077 0f12 5A61     		str	r2, [r3, #20]
 980:Libraries/uC-OSIII/os_flag.c ****     if (OSFlagDbgListPtr == (OS_FLAG_GRP *)0) {
 2078              		.loc 1 980 0
 2079 0f14 40F20003 		movw	r3, #:lower16:OSFlagDbgListPtr
 2080 0f18 C0F20003 		movt	r3, #:upper16:OSFlagDbgListPtr
 2081 0f1c 1B68     		ldr	r3, [r3, #0]
 2082 0f1e 002B     		cmp	r3, #0
 2083 0f20 04D1     		bne	.L131
 981:Libraries/uC-OSIII/os_flag.c ****         p_grp->DbgNextPtr            = (OS_FLAG_GRP *)0;
 2084              		.loc 1 981 0
 2085 0f22 7B68     		ldr	r3, [r7, #4]
 2086 0f24 4FF00002 		mov	r2, #0
 2087 0f28 9A61     		str	r2, [r3, #24]
 2088 0f2a 0DE0     		b	.L132
 2089              	.L131:
 982:Libraries/uC-OSIII/os_flag.c ****     } else {
 983:Libraries/uC-OSIII/os_flag.c ****         p_grp->DbgNextPtr            =  OSFlagDbgListPtr;
 2090              		.loc 1 983 0
 2091 0f2c 40F20003 		movw	r3, #:lower16:OSFlagDbgListPtr
 2092 0f30 C0F20003 		movt	r3, #:upper16:OSFlagDbgListPtr
 2093 0f34 1A68     		ldr	r2, [r3, #0]
 2094 0f36 7B68     		ldr	r3, [r7, #4]
 2095 0f38 9A61     		str	r2, [r3, #24]
 984:Libraries/uC-OSIII/os_flag.c ****         OSFlagDbgListPtr->DbgPrevPtr =  p_grp;
 2096              		.loc 1 984 0
 2097 0f3a 40F20003 		movw	r3, #:lower16:OSFlagDbgListPtr
 2098 0f3e C0F20003 		movt	r3, #:upper16:OSFlagDbgListPtr
 2099 0f42 1B68     		ldr	r3, [r3, #0]
 2100 0f44 7A68     		ldr	r2, [r7, #4]
 2101 0f46 5A61     		str	r2, [r3, #20]
 2102              	.L132:
 985:Libraries/uC-OSIII/os_flag.c ****     }
 986:Libraries/uC-OSIII/os_flag.c ****     OSFlagDbgListPtr                 =  p_grp;
 2103              		.loc 1 986 0
 2104 0f48 40F20003 		movw	r3, #:lower16:OSFlagDbgListPtr
 2105 0f4c C0F20003 		movt	r3, #:upper16:OSFlagDbgListPtr
 2106 0f50 7A68     		ldr	r2, [r7, #4]
 2107 0f52 1A60     		str	r2, [r3, #0]
 987:Libraries/uC-OSIII/os_flag.c **** }
 2108              		.loc 1 987 0
 2109 0f54 07F10C07 		add	r7, r7, #12
 2110 0f58 BD46     		mov	sp, r7
 2111 0f5a 80BC     		pop	{r7}
 2112 0f5c 7047     		bx	lr
 2113              		.cfi_endproc
 2114              	.LFE9:
 2116 0f5e 00BF     		.align	2
 2117              		.global	OS_FlagDbgListRemove
 2118              		.thumb
 2119              		.thumb_func
 2121              	OS_FlagDbgListRemove:
 2122              	.LFB10:
 988:Libraries/uC-OSIII/os_flag.c **** 
 989:Libraries/uC-OSIII/os_flag.c **** 
 990:Libraries/uC-OSIII/os_flag.c **** 
 991:Libraries/uC-OSIII/os_flag.c **** void  OS_FlagDbgListRemove (OS_FLAG_GRP  *p_grp)
 992:Libraries/uC-OSIII/os_flag.c **** {
 2123              		.loc 1 992 0
 2124              		.cfi_startproc
 2125              		@ args = 0, pretend = 0, frame = 16
 2126              		@ frame_needed = 1, uses_anonymous_args = 0
 2127              		@ link register save eliminated.
 2128 0f60 80B4     		push	{r7}
 2129              	.LCFI30:
 2130              		.cfi_def_cfa_offset 4
 2131              		.cfi_offset 7, -4
 2132 0f62 85B0     		sub	sp, sp, #20
 2133              	.LCFI31:
 2134              		.cfi_def_cfa_offset 24
 2135 0f64 00AF     		add	r7, sp, #0
 2136              	.LCFI32:
 2137              		.cfi_def_cfa_register 7
 2138 0f66 7860     		str	r0, [r7, #4]
 993:Libraries/uC-OSIII/os_flag.c ****     OS_FLAG_GRP  *p_grp_next;
 994:Libraries/uC-OSIII/os_flag.c ****     OS_FLAG_GRP  *p_grp_prev;
 995:Libraries/uC-OSIII/os_flag.c **** 
 996:Libraries/uC-OSIII/os_flag.c **** 
 997:Libraries/uC-OSIII/os_flag.c ****     p_grp_prev = p_grp->DbgPrevPtr;
 2139              		.loc 1 997 0
 2140 0f68 7B68     		ldr	r3, [r7, #4]
 2141 0f6a 5B69     		ldr	r3, [r3, #20]
 2142 0f6c FB60     		str	r3, [r7, #12]
 998:Libraries/uC-OSIII/os_flag.c ****     p_grp_next = p_grp->DbgNextPtr;
 2143              		.loc 1 998 0
 2144 0f6e 7B68     		ldr	r3, [r7, #4]
 2145 0f70 9B69     		ldr	r3, [r3, #24]
 2146 0f72 BB60     		str	r3, [r7, #8]
 999:Libraries/uC-OSIII/os_flag.c **** 
1000:Libraries/uC-OSIII/os_flag.c ****     if (p_grp_prev == (OS_FLAG_GRP *)0) {
 2147              		.loc 1 1000 0
 2148 0f74 FB68     		ldr	r3, [r7, #12]
 2149 0f76 002B     		cmp	r3, #0
 2150 0f78 11D1     		bne	.L134
1001:Libraries/uC-OSIII/os_flag.c ****         OSFlagDbgListPtr = p_grp_next;
 2151              		.loc 1 1001 0
 2152 0f7a 40F20003 		movw	r3, #:lower16:OSFlagDbgListPtr
 2153 0f7e C0F20003 		movt	r3, #:upper16:OSFlagDbgListPtr
 2154 0f82 BA68     		ldr	r2, [r7, #8]
 2155 0f84 1A60     		str	r2, [r3, #0]
1002:Libraries/uC-OSIII/os_flag.c ****         if (p_grp_next != (OS_FLAG_GRP *)0) {
 2156              		.loc 1 1002 0
 2157 0f86 BB68     		ldr	r3, [r7, #8]
 2158 0f88 002B     		cmp	r3, #0
 2159 0f8a 03D0     		beq	.L135
1003:Libraries/uC-OSIII/os_flag.c ****             p_grp_next->DbgPrevPtr = (OS_FLAG_GRP *)0;
 2160              		.loc 1 1003 0
 2161 0f8c BB68     		ldr	r3, [r7, #8]
 2162 0f8e 4FF00002 		mov	r2, #0
 2163 0f92 5A61     		str	r2, [r3, #20]
 2164              	.L135:
1004:Libraries/uC-OSIII/os_flag.c ****         }
1005:Libraries/uC-OSIII/os_flag.c ****         p_grp->DbgNextPtr = (OS_FLAG_GRP *)0;
 2165              		.loc 1 1005 0
 2166 0f94 7B68     		ldr	r3, [r7, #4]
 2167 0f96 4FF00002 		mov	r2, #0
 2168 0f9a 9A61     		str	r2, [r3, #24]
 2169 0f9c 19E0     		b	.L133
 2170              	.L134:
1006:Libraries/uC-OSIII/os_flag.c **** 
1007:Libraries/uC-OSIII/os_flag.c ****     } else if (p_grp_next == (OS_FLAG_GRP *)0) {
 2171              		.loc 1 1007 0
 2172 0f9e BB68     		ldr	r3, [r7, #8]
 2173 0fa0 002B     		cmp	r3, #0
 2174 0fa2 08D1     		bne	.L137
1008:Libraries/uC-OSIII/os_flag.c ****         p_grp_prev->DbgNextPtr = (OS_FLAG_GRP *)0;
 2175              		.loc 1 1008 0
 2176 0fa4 FB68     		ldr	r3, [r7, #12]
 2177 0fa6 4FF00002 		mov	r2, #0
 2178 0faa 9A61     		str	r2, [r3, #24]
1009:Libraries/uC-OSIII/os_flag.c ****         p_grp->DbgPrevPtr      = (OS_FLAG_GRP *)0;
 2179              		.loc 1 1009 0
 2180 0fac 7B68     		ldr	r3, [r7, #4]
 2181 0fae 4FF00002 		mov	r2, #0
 2182 0fb2 5A61     		str	r2, [r3, #20]
 2183 0fb4 0DE0     		b	.L133
 2184              	.L137:
1010:Libraries/uC-OSIII/os_flag.c **** 
1011:Libraries/uC-OSIII/os_flag.c ****     } else {
1012:Libraries/uC-OSIII/os_flag.c ****         p_grp_prev->DbgNextPtr =  p_grp_next;
 2185              		.loc 1 1012 0
 2186 0fb6 FB68     		ldr	r3, [r7, #12]
 2187 0fb8 BA68     		ldr	r2, [r7, #8]
 2188 0fba 9A61     		str	r2, [r3, #24]
1013:Libraries/uC-OSIII/os_flag.c ****         p_grp_next->DbgPrevPtr =  p_grp_prev;
 2189              		.loc 1 1013 0
 2190 0fbc BB68     		ldr	r3, [r7, #8]
 2191 0fbe FA68     		ldr	r2, [r7, #12]
 2192 0fc0 5A61     		str	r2, [r3, #20]
1014:Libraries/uC-OSIII/os_flag.c ****         p_grp->DbgNextPtr      = (OS_FLAG_GRP *)0;
 2193              		.loc 1 1014 0
 2194 0fc2 7B68     		ldr	r3, [r7, #4]
 2195 0fc4 4FF00002 		mov	r2, #0
 2196 0fc8 9A61     		str	r2, [r3, #24]
1015:Libraries/uC-OSIII/os_flag.c ****         p_grp->DbgPrevPtr      = (OS_FLAG_GRP *)0;
 2197              		.loc 1 1015 0
 2198 0fca 7B68     		ldr	r3, [r7, #4]
 2199 0fcc 4FF00002 		mov	r2, #0
 2200 0fd0 5A61     		str	r2, [r3, #20]
 2201              	.L133:
1016:Libraries/uC-OSIII/os_flag.c ****     }
1017:Libraries/uC-OSIII/os_flag.c **** }
 2202              		.loc 1 1017 0
 2203 0fd2 07F11407 		add	r7, r7, #20
 2204 0fd6 BD46     		mov	sp, r7
 2205 0fd8 80BC     		pop	{r7}
 2206 0fda 7047     		bx	lr
 2207              		.cfi_endproc
 2208              	.LFE10:
 2210              		.align	2
 2211              		.global	OS_FlagPost
 2212              		.thumb
 2213              		.thumb_func
 2215              	OS_FlagPost:
 2216              	.LFB11:
1018:Libraries/uC-OSIII/os_flag.c **** #endif
1019:Libraries/uC-OSIII/os_flag.c **** 
1020:Libraries/uC-OSIII/os_flag.c **** /*$PAGE*/
1021:Libraries/uC-OSIII/os_flag.c **** /*
1022:Libraries/uC-OSIII/os_flag.c **** ***************************************************************************************************
1023:Libraries/uC-OSIII/os_flag.c **** *                                                POST EVENT FLAG BIT(S)
1024:Libraries/uC-OSIII/os_flag.c **** *
1025:Libraries/uC-OSIII/os_flag.c **** * Description: This function is called to set or clear some bits in an event flag group.  The bits 
1026:Libraries/uC-OSIII/os_flag.c **** *              specified by a 'bit mask'.
1027:Libraries/uC-OSIII/os_flag.c **** *
1028:Libraries/uC-OSIII/os_flag.c **** * Arguments  : p_grp         is a pointer to the desired event flag group.
1029:Libraries/uC-OSIII/os_flag.c **** *
1030:Libraries/uC-OSIII/os_flag.c **** *              flags         If 'opt' (see below) is OS_OPT_POST_FLAG_SET, each bit that is set in 
1031:Libraries/uC-OSIII/os_flag.c **** *                            set the corresponding bit in the event flag group.  e.g. to set bits 0
1032:Libraries/uC-OSIII/os_flag.c **** *                            and 5 you would set 'flags' to:
1033:Libraries/uC-OSIII/os_flag.c **** *
1034:Libraries/uC-OSIII/os_flag.c **** *                                0x31     (note, bit 0 is least significant bit)
1035:Libraries/uC-OSIII/os_flag.c **** *
1036:Libraries/uC-OSIII/os_flag.c **** *                            If 'opt' (see below) is OS_OPT_POST_FLAG_CLR, each bit that is set in 
1037:Libraries/uC-OSIII/os_flag.c **** *                            CLEAR the corresponding bit in the event flag group.  e.g. to clear bi
1038:Libraries/uC-OSIII/os_flag.c **** *                            4 and 5 you would specify 'flags' as:
1039:Libraries/uC-OSIII/os_flag.c **** *
1040:Libraries/uC-OSIII/os_flag.c **** *                                0x31     (note, bit 0 is least significant bit)
1041:Libraries/uC-OSIII/os_flag.c **** *
1042:Libraries/uC-OSIII/os_flag.c **** *              opt           indicates whether the flags will be:
1043:Libraries/uC-OSIII/os_flag.c **** *
1044:Libraries/uC-OSIII/os_flag.c **** *                                OS_OPT_POST_FLAG_SET       set
1045:Libraries/uC-OSIII/os_flag.c **** *                                OS_OPT_POST_FLAG_CLR       cleared
1046:Libraries/uC-OSIII/os_flag.c **** *
1047:Libraries/uC-OSIII/os_flag.c **** *                            you can also 'add' OS_OPT_POST_NO_SCHED to prevent the scheduler from 
1048:Libraries/uC-OSIII/os_flag.c **** *
1049:Libraries/uC-OSIII/os_flag.c **** *              ts            is the timestamp of the post
1050:Libraries/uC-OSIII/os_flag.c **** *
1051:Libraries/uC-OSIII/os_flag.c **** *              p_err         is a pointer to an error code and can be:
1052:Libraries/uC-OSIII/os_flag.c **** *
1053:Libraries/uC-OSIII/os_flag.c **** *                                OS_ERR_NONE                The call was successful
1054:Libraries/uC-OSIII/os_flag.c **** *                                OS_ERR_OBJ_PTR_NULL        You passed a NULL pointer
1055:Libraries/uC-OSIII/os_flag.c **** *                                OS_ERR_OBJ_TYPE            You are not pointing to an event flag g
1056:Libraries/uC-OSIII/os_flag.c **** *                                OS_ERR_OPT_INVALID         You specified an invalid option
1057:Libraries/uC-OSIII/os_flag.c **** *
1058:Libraries/uC-OSIII/os_flag.c **** * Returns    : the new value of the event flags bits that are still set.
1059:Libraries/uC-OSIII/os_flag.c **** *
1060:Libraries/uC-OSIII/os_flag.c **** * Note(s)    : 1) The execution time of this function depends on the number of tasks waiting on the
1061:Libraries/uC-OSIII/os_flag.c **** ***************************************************************************************************
1062:Libraries/uC-OSIII/os_flag.c **** */
1063:Libraries/uC-OSIII/os_flag.c **** OS_FLAGS  OS_FlagPost (OS_FLAG_GRP  *p_grp,
1064:Libraries/uC-OSIII/os_flag.c ****                        OS_FLAGS      flags,
1065:Libraries/uC-OSIII/os_flag.c ****                        OS_OPT        opt,
1066:Libraries/uC-OSIII/os_flag.c ****                        CPU_TS        ts,
1067:Libraries/uC-OSIII/os_flag.c ****                        OS_ERR       *p_err)
1068:Libraries/uC-OSIII/os_flag.c **** {
 2217              		.loc 1 1068 0
 2218              		.cfi_startproc
 2219              		@ args = 4, pretend = 0, frame = 48
 2220              		@ frame_needed = 1, uses_anonymous_args = 0
 2221 0fdc 80B5     		push	{r7, lr}
 2222              	.LCFI33:
 2223              		.cfi_def_cfa_offset 8
 2224              		.cfi_offset 14, -4
 2225              		.cfi_offset 7, -8
 2226 0fde 8CB0     		sub	sp, sp, #48
 2227              	.LCFI34:
 2228              		.cfi_def_cfa_offset 56
 2229 0fe0 00AF     		add	r7, sp, #0
 2230              	.LCFI35:
 2231              		.cfi_def_cfa_register 7
 2232 0fe2 F860     		str	r0, [r7, #12]
 2233 0fe4 B960     		str	r1, [r7, #8]
 2234 0fe6 3B60     		str	r3, [r7, #0]
 2235 0fe8 1346     		mov	r3, r2	@ movhi
 2236 0fea FB80     		strh	r3, [r7, #6]	@ movhi
1069:Libraries/uC-OSIII/os_flag.c ****     OS_FLAGS        flags_cur;
1070:Libraries/uC-OSIII/os_flag.c ****     OS_FLAGS        flags_rdy;
1071:Libraries/uC-OSIII/os_flag.c ****     OS_OPT          mode;
1072:Libraries/uC-OSIII/os_flag.c ****     OS_PEND_DATA   *p_pend_data;
1073:Libraries/uC-OSIII/os_flag.c ****     OS_PEND_DATA   *p_pend_data_next;
1074:Libraries/uC-OSIII/os_flag.c ****     OS_PEND_LIST   *p_pend_list;
1075:Libraries/uC-OSIII/os_flag.c ****     OS_TCB         *p_tcb;
1076:Libraries/uC-OSIII/os_flag.c ****     CPU_SR_ALLOC();
 2237              		.loc 1 1076 0
 2238 0fec 4FF00003 		mov	r3, #0
 2239 0ff0 7B62     		str	r3, [r7, #36]
1077:Libraries/uC-OSIII/os_flag.c **** 
1078:Libraries/uC-OSIII/os_flag.c **** 
1079:Libraries/uC-OSIII/os_flag.c **** 
1080:Libraries/uC-OSIII/os_flag.c ****     CPU_CRITICAL_ENTER();
 2240              		.loc 1 1080 0
 2241 0ff2 FFF7FEFF 		bl	CPU_SR_Save
 2242 0ff6 7862     		str	r0, [r7, #36]
 2243 0ff8 FFF7FEFF 		bl	CPU_IntDisMeasStart
1081:Libraries/uC-OSIII/os_flag.c ****     switch (opt) {
 2244              		.loc 1 1081 0
 2245 0ffc FB88     		ldrh	r3, [r7, #6]
 2246 0ffe 002B     		cmp	r3, #0
 2247 1000 02D0     		beq	.L140
 2248 1002 012B     		cmp	r3, #1
 2249 1004 07D0     		beq	.L141
 2250 1006 0FE0     		b	.L165
 2251              	.L140:
1082:Libraries/uC-OSIII/os_flag.c ****         case OS_OPT_POST_FLAG_SET:
1083:Libraries/uC-OSIII/os_flag.c ****              p_grp->Flags |=  flags;                            /* Set   the flags specified in the
 2252              		.loc 1 1083 0
 2253 1008 FB68     		ldr	r3, [r7, #12]
 2254 100a 1A6A     		ldr	r2, [r3, #32]
 2255 100c BB68     		ldr	r3, [r7, #8]
 2256 100e 1A43     		orrs	r2, r2, r3
 2257 1010 FB68     		ldr	r3, [r7, #12]
 2258 1012 1A62     		str	r2, [r3, #32]
1084:Libraries/uC-OSIII/os_flag.c ****              break;
 2259              		.loc 1 1084 0
 2260 1014 14E0     		b	.L142
 2261              	.L141:
1085:Libraries/uC-OSIII/os_flag.c **** 
1086:Libraries/uC-OSIII/os_flag.c ****         case OS_OPT_POST_FLAG_CLR:
1087:Libraries/uC-OSIII/os_flag.c ****              p_grp->Flags &= ~flags;                            /* Clear the flags specified in the
 2262              		.loc 1 1087 0
 2263 1016 FB68     		ldr	r3, [r7, #12]
 2264 1018 1A6A     		ldr	r2, [r3, #32]
 2265 101a BB68     		ldr	r3, [r7, #8]
 2266 101c 6FEA0303 		mvn	r3, r3
 2267 1020 1A40     		ands	r2, r2, r3
 2268 1022 FB68     		ldr	r3, [r7, #12]
 2269 1024 1A62     		str	r2, [r3, #32]
1088:Libraries/uC-OSIII/os_flag.c ****              break;
 2270              		.loc 1 1088 0
 2271 1026 0BE0     		b	.L142
 2272              	.L165:
1089:Libraries/uC-OSIII/os_flag.c **** 
1090:Libraries/uC-OSIII/os_flag.c ****         default:
1091:Libraries/uC-OSIII/os_flag.c ****              CPU_CRITICAL_EXIT();                               /* INVALID option                  
 2273              		.loc 1 1091 0
 2274 1028 FFF7FEFF 		bl	CPU_IntDisMeasStop
 2275 102c 786A     		ldr	r0, [r7, #36]
 2276 102e FFF7FEFF 		bl	CPU_SR_Restore
1092:Libraries/uC-OSIII/os_flag.c ****              *p_err = OS_ERR_OPT_INVALID;
 2277              		.loc 1 1092 0
 2278 1032 BB6B     		ldr	r3, [r7, #56]
 2279 1034 45F62562 		movw	r2, #24101
 2280 1038 1A80     		strh	r2, [r3, #0]	@ movhi
1093:Libraries/uC-OSIII/os_flag.c ****              return ((OS_FLAGS)0);
 2281              		.loc 1 1093 0
 2282 103a 4FF00003 		mov	r3, #0
 2283 103e 28E1     		b	.L143
 2284              	.L142:
1094:Libraries/uC-OSIII/os_flag.c ****     }
1095:Libraries/uC-OSIII/os_flag.c ****     p_grp->TS   = ts;
 2285              		.loc 1 1095 0
 2286 1040 FB68     		ldr	r3, [r7, #12]
 2287 1042 3A68     		ldr	r2, [r7, #0]
 2288 1044 5A62     		str	r2, [r3, #36]
1096:Libraries/uC-OSIII/os_flag.c ****     p_pend_list = &p_grp->PendList;
 2289              		.loc 1 1096 0
 2290 1046 FB68     		ldr	r3, [r7, #12]
 2291 1048 03F10803 		add	r3, r3, #8
 2292 104c 3B62     		str	r3, [r7, #32]
1097:Libraries/uC-OSIII/os_flag.c ****     if (p_pend_list->NbrEntries == 0u) {                        /* Any task waiting on event flag g
 2293              		.loc 1 1097 0
 2294 104e 3B6A     		ldr	r3, [r7, #32]
 2295 1050 1B89     		ldrh	r3, [r3, #8]
 2296 1052 002B     		cmp	r3, #0
 2297 1054 0BD1     		bne	.L144
1098:Libraries/uC-OSIII/os_flag.c ****         CPU_CRITICAL_EXIT();                                    /* No                              
 2298              		.loc 1 1098 0
 2299 1056 FFF7FEFF 		bl	CPU_IntDisMeasStop
 2300 105a 786A     		ldr	r0, [r7, #36]
 2301 105c FFF7FEFF 		bl	CPU_SR_Restore
1099:Libraries/uC-OSIII/os_flag.c ****         *p_err = OS_ERR_NONE;
 2302              		.loc 1 1099 0
 2303 1060 BB6B     		ldr	r3, [r7, #56]
 2304 1062 4FF00002 		mov	r2, #0
 2305 1066 1A80     		strh	r2, [r3, #0]	@ movhi
1100:Libraries/uC-OSIII/os_flag.c ****         return (p_grp->Flags);
 2306              		.loc 1 1100 0
 2307 1068 FB68     		ldr	r3, [r7, #12]
 2308 106a 1B6A     		ldr	r3, [r3, #32]
 2309 106c 11E1     		b	.L143
 2310              	.L144:
1101:Libraries/uC-OSIII/os_flag.c ****     }
1102:Libraries/uC-OSIII/os_flag.c **** 
1103:Libraries/uC-OSIII/os_flag.c ****     OS_CRITICAL_ENTER_CPU_CRITICAL_EXIT();
 2311              		.loc 1 1103 0
 2312 106e 40F20003 		movw	r3, #:lower16:OSSchedLockNestingCtr
 2313 1072 C0F20003 		movt	r3, #:upper16:OSSchedLockNestingCtr
 2314 1076 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2315 1078 03F10103 		add	r3, r3, #1
 2316 107c DAB2     		uxtb	r2, r3
 2317 107e 40F20003 		movw	r3, #:lower16:OSSchedLockNestingCtr
 2318 1082 C0F20003 		movt	r3, #:upper16:OSSchedLockNestingCtr
 2319 1086 1A70     		strb	r2, [r3, #0]
 2320 1088 40F20003 		movw	r3, #:lower16:OSSchedLockNestingCtr
 2321 108c C0F20003 		movt	r3, #:upper16:OSSchedLockNestingCtr
 2322 1090 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2323 1092 012B     		cmp	r3, #1
 2324 1094 01D1     		bne	.L145
 2325              		.loc 1 1103 0 is_stmt 0 discriminator 1
 2326 1096 FFF7FEFF 		bl	OS_SchedLockTimeMeasStart
 2327              	.L145:
 2328              		.loc 1 1103 0 discriminator 2
 2329 109a FFF7FEFF 		bl	CPU_IntDisMeasStop
 2330 109e 786A     		ldr	r0, [r7, #36]
 2331 10a0 FFF7FEFF 		bl	CPU_SR_Restore
1104:Libraries/uC-OSIII/os_flag.c ****     p_pend_data = p_pend_list->HeadPtr;
 2332              		.loc 1 1104 0 is_stmt 1 discriminator 2
 2333 10a4 3B6A     		ldr	r3, [r7, #32]
 2334 10a6 1B68     		ldr	r3, [r3, #0]
 2335 10a8 FB62     		str	r3, [r7, #44]
1105:Libraries/uC-OSIII/os_flag.c ****     p_tcb       = p_pend_data->TCBPtr;
 2336              		.loc 1 1105 0 discriminator 2
 2337 10aa FB6A     		ldr	r3, [r7, #44]
 2338 10ac 9B68     		ldr	r3, [r3, #8]
 2339 10ae BB62     		str	r3, [r7, #40]
1106:Libraries/uC-OSIII/os_flag.c ****     while (p_tcb != (OS_TCB *)0) {                              /* Go through all tasks waiting on 
 2340              		.loc 1 1106 0 discriminator 2
 2341 10b0 B3E0     		b	.L146
 2342              	.L162:
1107:Libraries/uC-OSIII/os_flag.c ****         p_pend_data_next = p_pend_data->NextPtr;
 2343              		.loc 1 1107 0
 2344 10b2 FB6A     		ldr	r3, [r7, #44]
 2345 10b4 5B68     		ldr	r3, [r3, #4]
 2346 10b6 FB61     		str	r3, [r7, #28]
1108:Libraries/uC-OSIII/os_flag.c ****         mode             = p_tcb->FlagsOpt & OS_OPT_PEND_FLAG_MASK;
 2347              		.loc 1 1108 0
 2348 10b8 BB6A     		ldr	r3, [r7, #40]
 2349 10ba B3F86030 		ldrh	r3, [r3, #96]
 2350 10be 03F00F03 		and	r3, r3, #15
 2351 10c2 7B83     		strh	r3, [r7, #26]	@ movhi
1109:Libraries/uC-OSIII/os_flag.c ****         switch (mode) {
 2352              		.loc 1 1109 0
 2353 10c4 7B8B     		ldrh	r3, [r7, #26]
 2354 10c6 03F1FF33 		add	r3, r3, #-1
 2355 10ca 072B     		cmp	r3, #7
 2356 10cc 56D8     		bhi	.L147
 2357 10ce 01A2     		adr	r2, .L152
 2358 10d0 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 2359              		.align	2
 2360              	.L152:
 2361 10d4 35110000 		.word	.L148+1
 2362 10d8 5B110000 		.word	.L149+1
 2363 10dc 7D110000 		.word	.L147+1
 2364 10e0 F5100000 		.word	.L150+1
 2365 10e4 7D110000 		.word	.L147+1
 2366 10e8 7D110000 		.word	.L147+1
 2367 10ec 7D110000 		.word	.L147+1
 2368 10f0 17110000 		.word	.L151+1
 2369              	.L150:
1110:Libraries/uC-OSIII/os_flag.c ****             case OS_OPT_PEND_FLAG_SET_ALL:                      /* See if all req. flags are set fo
1111:Libraries/uC-OSIII/os_flag.c ****                  flags_rdy = (OS_FLAGS)(p_grp->Flags & p_tcb->FlagsPend);
 2370              		.loc 1 1111 0
 2371 10f4 FB68     		ldr	r3, [r7, #12]
 2372 10f6 1A6A     		ldr	r2, [r3, #32]
 2373 10f8 BB6A     		ldr	r3, [r7, #40]
 2374 10fa DB6D     		ldr	r3, [r3, #92]
 2375 10fc 1340     		ands	r3, r3, r2
 2376 10fe 7B61     		str	r3, [r7, #20]
1112:Libraries/uC-OSIII/os_flag.c ****                  if (flags_rdy == p_tcb->FlagsPend) {
 2377              		.loc 1 1112 0
 2378 1100 BB6A     		ldr	r3, [r7, #40]
 2379 1102 DA6D     		ldr	r2, [r3, #92]
 2380 1104 7B69     		ldr	r3, [r7, #20]
 2381 1106 9A42     		cmp	r2, r3
 2382 1108 74D1     		bne	.L166
1113:Libraries/uC-OSIII/os_flag.c ****                      OS_FlagTaskRdy(p_tcb,                      /* Make task RTR, event(s) Rx'd    
 2383              		.loc 1 1113 0
 2384 110a B86A     		ldr	r0, [r7, #40]
 2385 110c 7969     		ldr	r1, [r7, #20]
 2386 110e 3A68     		ldr	r2, [r7, #0]
 2387 1110 FFF7FEFF 		bl	OS_FlagTaskRdy
1114:Libraries/uC-OSIII/os_flag.c ****                                     flags_rdy,
1115:Libraries/uC-OSIII/os_flag.c ****                                     ts);
1116:Libraries/uC-OSIII/os_flag.c ****                  }
1117:Libraries/uC-OSIII/os_flag.c ****                  break;
 2388              		.loc 1 1117 0
 2389 1114 6EE0     		b	.L166
 2390              	.L151:
1118:Libraries/uC-OSIII/os_flag.c **** 
1119:Libraries/uC-OSIII/os_flag.c ****             case OS_OPT_PEND_FLAG_SET_ANY:                      /* See if any flag set             
1120:Libraries/uC-OSIII/os_flag.c ****                  flags_rdy = (OS_FLAGS)(p_grp->Flags & p_tcb->FlagsPend);
 2391              		.loc 1 1120 0
 2392 1116 FB68     		ldr	r3, [r7, #12]
 2393 1118 1A6A     		ldr	r2, [r3, #32]
 2394 111a BB6A     		ldr	r3, [r7, #40]
 2395 111c DB6D     		ldr	r3, [r3, #92]
 2396 111e 1340     		ands	r3, r3, r2
 2397 1120 7B61     		str	r3, [r7, #20]
1121:Libraries/uC-OSIII/os_flag.c ****                  if (flags_rdy != (OS_FLAGS)0) {
 2398              		.loc 1 1121 0
 2399 1122 7B69     		ldr	r3, [r7, #20]
 2400 1124 002B     		cmp	r3, #0
 2401 1126 67D0     		beq	.L167
1122:Libraries/uC-OSIII/os_flag.c ****                      OS_FlagTaskRdy(p_tcb,                      /* Make task RTR, event(s) Rx'd    
 2402              		.loc 1 1122 0
 2403 1128 B86A     		ldr	r0, [r7, #40]
 2404 112a 7969     		ldr	r1, [r7, #20]
 2405 112c 3A68     		ldr	r2, [r7, #0]
 2406 112e FFF7FEFF 		bl	OS_FlagTaskRdy
1123:Libraries/uC-OSIII/os_flag.c ****                                     flags_rdy,
1124:Libraries/uC-OSIII/os_flag.c ****                                     ts);
1125:Libraries/uC-OSIII/os_flag.c ****                  }
1126:Libraries/uC-OSIII/os_flag.c ****                  break;
 2407              		.loc 1 1126 0
 2408 1132 61E0     		b	.L167
 2409              	.L148:
1127:Libraries/uC-OSIII/os_flag.c **** 
1128:Libraries/uC-OSIII/os_flag.c **** #if OS_CFG_FLAG_MODE_CLR_EN > 0u
1129:Libraries/uC-OSIII/os_flag.c ****             case OS_OPT_PEND_FLAG_CLR_ALL:                      /* See if all req. flags are set fo
1130:Libraries/uC-OSIII/os_flag.c ****                  flags_rdy = (OS_FLAGS)(~p_grp->Flags & p_tcb->FlagsPend);
 2410              		.loc 1 1130 0
 2411 1134 FB68     		ldr	r3, [r7, #12]
 2412 1136 1B6A     		ldr	r3, [r3, #32]
 2413 1138 6FEA0302 		mvn	r2, r3
 2414 113c BB6A     		ldr	r3, [r7, #40]
 2415 113e DB6D     		ldr	r3, [r3, #92]
 2416 1140 1340     		ands	r3, r3, r2
 2417 1142 7B61     		str	r3, [r7, #20]
1131:Libraries/uC-OSIII/os_flag.c ****                  if (flags_rdy == p_tcb->FlagsPend) {
 2418              		.loc 1 1131 0
 2419 1144 BB6A     		ldr	r3, [r7, #40]
 2420 1146 DA6D     		ldr	r2, [r3, #92]
 2421 1148 7B69     		ldr	r3, [r7, #20]
 2422 114a 9A42     		cmp	r2, r3
 2423 114c 56D1     		bne	.L168
1132:Libraries/uC-OSIII/os_flag.c ****                      OS_FlagTaskRdy(p_tcb,                      /* Make task RTR, event(s) Rx'd    
 2424              		.loc 1 1132 0
 2425 114e B86A     		ldr	r0, [r7, #40]
 2426 1150 7969     		ldr	r1, [r7, #20]
 2427 1152 3A68     		ldr	r2, [r7, #0]
 2428 1154 FFF7FEFF 		bl	OS_FlagTaskRdy
1133:Libraries/uC-OSIII/os_flag.c ****                                     flags_rdy,
1134:Libraries/uC-OSIII/os_flag.c ****                                     ts);
1135:Libraries/uC-OSIII/os_flag.c ****                  }
1136:Libraries/uC-OSIII/os_flag.c ****                  break;
 2429              		.loc 1 1136 0
 2430 1158 50E0     		b	.L168
 2431              	.L149:
1137:Libraries/uC-OSIII/os_flag.c **** 
1138:Libraries/uC-OSIII/os_flag.c ****             case OS_OPT_PEND_FLAG_CLR_ANY:                      /* See if any flag set             
1139:Libraries/uC-OSIII/os_flag.c ****                  flags_rdy = (OS_FLAGS)(~p_grp->Flags & p_tcb->FlagsPend);
 2432              		.loc 1 1139 0
 2433 115a FB68     		ldr	r3, [r7, #12]
 2434 115c 1B6A     		ldr	r3, [r3, #32]
 2435 115e 6FEA0302 		mvn	r2, r3
 2436 1162 BB6A     		ldr	r3, [r7, #40]
 2437 1164 DB6D     		ldr	r3, [r3, #92]
 2438 1166 1340     		ands	r3, r3, r2
 2439 1168 7B61     		str	r3, [r7, #20]
1140:Libraries/uC-OSIII/os_flag.c ****                  if (flags_rdy != (OS_FLAGS)0) {
 2440              		.loc 1 1140 0
 2441 116a 7B69     		ldr	r3, [r7, #20]
 2442 116c 002B     		cmp	r3, #0
 2443 116e 47D0     		beq	.L169
1141:Libraries/uC-OSIII/os_flag.c ****                      OS_FlagTaskRdy(p_tcb,                      /* Make task RTR, event(s) Rx'd    
 2444              		.loc 1 1141 0
 2445 1170 B86A     		ldr	r0, [r7, #40]
 2446 1172 7969     		ldr	r1, [r7, #20]
 2447 1174 3A68     		ldr	r2, [r7, #0]
 2448 1176 FFF7FEFF 		bl	OS_FlagTaskRdy
1142:Libraries/uC-OSIII/os_flag.c ****                                     flags_rdy,
1143:Libraries/uC-OSIII/os_flag.c ****                                     ts);
1144:Libraries/uC-OSIII/os_flag.c ****                  }
1145:Libraries/uC-OSIII/os_flag.c ****                  break;
 2449              		.loc 1 1145 0
 2450 117a 41E0     		b	.L169
 2451              	.L147:
1146:Libraries/uC-OSIII/os_flag.c **** #endif
1147:Libraries/uC-OSIII/os_flag.c ****             default:
1148:Libraries/uC-OSIII/os_flag.c ****                  OS_CRITICAL_EXIT();
 2452              		.loc 1 1148 0
 2453 117c FFF7FEFF 		bl	CPU_SR_Save
 2454 1180 7862     		str	r0, [r7, #36]
 2455 1182 FFF7FEFF 		bl	CPU_IntDisMeasStart
 2456 1186 40F20003 		movw	r3, #:lower16:OSSchedLockNestingCtr
 2457 118a C0F20003 		movt	r3, #:upper16:OSSchedLockNestingCtr
 2458 118e 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2459 1190 03F1FF33 		add	r3, r3, #-1
 2460 1194 DAB2     		uxtb	r2, r3
 2461 1196 40F20003 		movw	r3, #:lower16:OSSchedLockNestingCtr
 2462 119a C0F20003 		movt	r3, #:upper16:OSSchedLockNestingCtr
 2463 119e 1A70     		strb	r2, [r3, #0]
 2464 11a0 40F20003 		movw	r3, #:lower16:OSSchedLockNestingCtr
 2465 11a4 C0F20003 		movt	r3, #:upper16:OSSchedLockNestingCtr
 2466 11a8 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2467 11aa 002B     		cmp	r3, #0
 2468 11ac 16D1     		bne	.L158
 2469              		.loc 1 1148 0 is_stmt 0 discriminator 1
 2470 11ae FFF7FEFF 		bl	OS_SchedLockTimeMeasStop
 2471 11b2 40F20003 		movw	r3, #:lower16:OSIntQNbrEntries
 2472 11b6 C0F20003 		movt	r3, #:upper16:OSIntQNbrEntries
 2473 11ba 1B88     		ldrh	r3, [r3, #0]
 2474 11bc 002B     		cmp	r3, #0
 2475 11be 07D0     		beq	.L159
 2476              		.loc 1 1148 0 discriminator 3
 2477 11c0 FFF7FEFF 		bl	CPU_IntDisMeasStop
 2478 11c4 786A     		ldr	r0, [r7, #36]
 2479 11c6 FFF7FEFF 		bl	CPU_SR_Restore
 2480 11ca FFF7FEFF 		bl	OS_Sched0
 2481 11ce 0AE0     		b	.L160
 2482              	.L159:
 2483              		.loc 1 1148 0 discriminator 4
 2484 11d0 FFF7FEFF 		bl	CPU_IntDisMeasStop
 2485 11d4 786A     		ldr	r0, [r7, #36]
 2486 11d6 FFF7FEFF 		bl	CPU_SR_Restore
 2487 11da 04E0     		b	.L160
 2488              	.L158:
 2489              		.loc 1 1148 0 discriminator 2
 2490 11dc FFF7FEFF 		bl	CPU_IntDisMeasStop
 2491 11e0 786A     		ldr	r0, [r7, #36]
 2492 11e2 FFF7FEFF 		bl	CPU_SR_Restore
 2493              	.L160:
1149:Libraries/uC-OSIII/os_flag.c ****                  *p_err = OS_ERR_FLAG_PEND_OPT;
 2494              		.loc 1 1149 0 is_stmt 1
 2495 11e6 BB6B     		ldr	r3, [r7, #56]
 2496 11e8 43F6FF22 		movw	r2, #15103
 2497 11ec 1A80     		strh	r2, [r3, #0]	@ movhi
1150:Libraries/uC-OSIII/os_flag.c ****                  return ((OS_FLAGS)0);
 2498              		.loc 1 1150 0
 2499 11ee 4FF00003 		mov	r3, #0
 2500 11f2 4EE0     		b	.L143
 2501              	.L166:
1117:Libraries/uC-OSIII/os_flag.c ****                  break;
 2502              		.loc 1 1117 0
 2503 11f4 00BF     		nop
 2504 11f6 04E0     		b	.L154
 2505              	.L167:
1126:Libraries/uC-OSIII/os_flag.c ****                  break;
 2506              		.loc 1 1126 0
 2507 11f8 00BF     		nop
 2508 11fa 02E0     		b	.L154
 2509              	.L168:
1136:Libraries/uC-OSIII/os_flag.c ****                  break;
 2510              		.loc 1 1136 0
 2511 11fc 00BF     		nop
 2512 11fe 00E0     		b	.L154
 2513              	.L169:
1145:Libraries/uC-OSIII/os_flag.c ****                  break;
 2514              		.loc 1 1145 0
 2515 1200 00BF     		nop
 2516              	.L154:
1151:Libraries/uC-OSIII/os_flag.c ****         }
1152:Libraries/uC-OSIII/os_flag.c ****         p_pend_data = p_pend_data_next;                         /* Point to next task waiting for e
 2517              		.loc 1 1152 0
 2518 1202 FB69     		ldr	r3, [r7, #28]
 2519 1204 FB62     		str	r3, [r7, #44]
1153:Libraries/uC-OSIII/os_flag.c ****         if (p_pend_data != (OS_PEND_DATA *)0) {
 2520              		.loc 1 1153 0
 2521 1206 FB6A     		ldr	r3, [r7, #44]
 2522 1208 002B     		cmp	r3, #0
 2523 120a 03D0     		beq	.L161
1154:Libraries/uC-OSIII/os_flag.c ****             p_tcb = p_pend_data->TCBPtr;
 2524              		.loc 1 1154 0
 2525 120c FB6A     		ldr	r3, [r7, #44]
 2526 120e 9B68     		ldr	r3, [r3, #8]
 2527 1210 BB62     		str	r3, [r7, #40]
 2528 1212 02E0     		b	.L146
 2529              	.L161:
1155:Libraries/uC-OSIII/os_flag.c ****         } else {
1156:Libraries/uC-OSIII/os_flag.c ****             p_tcb = (OS_TCB *)0;
 2530              		.loc 1 1156 0
 2531 1214 4FF00003 		mov	r3, #0
 2532 1218 BB62     		str	r3, [r7, #40]
 2533              	.L146:
1106:Libraries/uC-OSIII/os_flag.c ****     while (p_tcb != (OS_TCB *)0) {                              /* Go through all tasks waiting on 
 2534              		.loc 1 1106 0 discriminator 1
 2535 121a BB6A     		ldr	r3, [r7, #40]
 2536 121c 002B     		cmp	r3, #0
 2537 121e 7FF448AF 		bne	.L162
1157:Libraries/uC-OSIII/os_flag.c ****         }
1158:Libraries/uC-OSIII/os_flag.c ****     }
1159:Libraries/uC-OSIII/os_flag.c ****     OS_CRITICAL_EXIT_NO_SCHED();
 2538              		.loc 1 1159 0
 2539 1222 FFF7FEFF 		bl	CPU_SR_Save
 2540 1226 7862     		str	r0, [r7, #36]
 2541 1228 FFF7FEFF 		bl	CPU_IntDisMeasStart
 2542 122c 40F20003 		movw	r3, #:lower16:OSSchedLockNestingCtr
 2543 1230 C0F20003 		movt	r3, #:upper16:OSSchedLockNestingCtr
 2544 1234 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2545 1236 03F1FF33 		add	r3, r3, #-1
 2546 123a DAB2     		uxtb	r2, r3
 2547 123c 40F20003 		movw	r3, #:lower16:OSSchedLockNestingCtr
 2548 1240 C0F20003 		movt	r3, #:upper16:OSSchedLockNestingCtr
 2549 1244 1A70     		strb	r2, [r3, #0]
 2550 1246 40F20003 		movw	r3, #:lower16:OSSchedLockNestingCtr
 2551 124a C0F20003 		movt	r3, #:upper16:OSSchedLockNestingCtr
 2552 124e 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2553 1250 002B     		cmp	r3, #0
 2554 1252 01D1     		bne	.L163
 2555              		.loc 1 1159 0 is_stmt 0 discriminator 1
 2556 1254 FFF7FEFF 		bl	OS_SchedLockTimeMeasStop
 2557              	.L163:
 2558              		.loc 1 1159 0 discriminator 2
 2559 1258 FFF7FEFF 		bl	CPU_IntDisMeasStop
 2560 125c 786A     		ldr	r0, [r7, #36]
 2561 125e FFF7FEFF 		bl	CPU_SR_Restore
1160:Libraries/uC-OSIII/os_flag.c **** 
1161:Libraries/uC-OSIII/os_flag.c ****     if ((opt & OS_OPT_POST_NO_SCHED) == (OS_OPT)0) {
 2562              		.loc 1 1161 0 is_stmt 1 discriminator 2
 2563 1262 FB88     		ldrh	r3, [r7, #6]
 2564 1264 1BB2     		sxth	r3, r3
 2565 1266 002B     		cmp	r3, #0
 2566 1268 01DB     		blt	.L164
1162:Libraries/uC-OSIII/os_flag.c ****         OSSched();
 2567              		.loc 1 1162 0
 2568 126a FFF7FEFF 		bl	OSSched
 2569              	.L164:
1163:Libraries/uC-OSIII/os_flag.c ****     }
1164:Libraries/uC-OSIII/os_flag.c **** 
1165:Libraries/uC-OSIII/os_flag.c ****     CPU_CRITICAL_ENTER();
 2570              		.loc 1 1165 0
 2571 126e FFF7FEFF 		bl	CPU_SR_Save
 2572 1272 7862     		str	r0, [r7, #36]
 2573 1274 FFF7FEFF 		bl	CPU_IntDisMeasStart
1166:Libraries/uC-OSIII/os_flag.c ****     flags_cur = p_grp->Flags;
 2574              		.loc 1 1166 0
 2575 1278 FB68     		ldr	r3, [r7, #12]
 2576 127a 1B6A     		ldr	r3, [r3, #32]
 2577 127c 3B61     		str	r3, [r7, #16]
1167:Libraries/uC-OSIII/os_flag.c ****     CPU_CRITICAL_EXIT();
 2578              		.loc 1 1167 0
 2579 127e FFF7FEFF 		bl	CPU_IntDisMeasStop
 2580 1282 786A     		ldr	r0, [r7, #36]
 2581 1284 FFF7FEFF 		bl	CPU_SR_Restore
1168:Libraries/uC-OSIII/os_flag.c ****     *p_err    = OS_ERR_NONE;
 2582              		.loc 1 1168 0
 2583 1288 BB6B     		ldr	r3, [r7, #56]
 2584 128a 4FF00002 		mov	r2, #0
 2585 128e 1A80     		strh	r2, [r3, #0]	@ movhi
1169:Libraries/uC-OSIII/os_flag.c ****     return (flags_cur);
 2586              		.loc 1 1169 0
 2587 1290 3B69     		ldr	r3, [r7, #16]
 2588              	.L143:
1170:Libraries/uC-OSIII/os_flag.c **** }
 2589              		.loc 1 1170 0
 2590 1292 1846     		mov	r0, r3
 2591 1294 07F13007 		add	r7, r7, #48
 2592 1298 BD46     		mov	sp, r7
 2593 129a 80BD     		pop	{r7, pc}
 2594              		.cfi_endproc
 2595              	.LFE11:
 2597              		.align	2
 2598              		.global	OS_FlagTaskRdy
 2599              		.thumb
 2600              		.thumb_func
 2602              	OS_FlagTaskRdy:
 2603              	.LFB12:
1171:Libraries/uC-OSIII/os_flag.c **** 
1172:Libraries/uC-OSIII/os_flag.c **** /*$PAGE*/
1173:Libraries/uC-OSIII/os_flag.c **** /*
1174:Libraries/uC-OSIII/os_flag.c **** ***************************************************************************************************
1175:Libraries/uC-OSIII/os_flag.c **** *                                        MAKE TASK READY-TO-RUN, EVENT(s) OCCURRED
1176:Libraries/uC-OSIII/os_flag.c **** *
1177:Libraries/uC-OSIII/os_flag.c **** * Description: This function is internal to uC/OS-III and is used to make a task ready-to-run becau
1178:Libraries/uC-OSIII/os_flag.c **** *              flag bits have been set.
1179:Libraries/uC-OSIII/os_flag.c **** *
1180:Libraries/uC-OSIII/os_flag.c **** * Arguments  : p_tcb         is a pointer to the OS_TCB of the task to remove
1181:Libraries/uC-OSIII/os_flag.c **** *              -----
1182:Libraries/uC-OSIII/os_flag.c **** *
1183:Libraries/uC-OSIII/os_flag.c **** *              flags_rdy     contains the bit pattern of the event flags that cause the task to bec
1184:Libraries/uC-OSIII/os_flag.c **** *
1185:Libraries/uC-OSIII/os_flag.c **** *              ts            is a timestamp associated with the post
1186:Libraries/uC-OSIII/os_flag.c **** *
1187:Libraries/uC-OSIII/os_flag.c **** * Returns    : none
1188:Libraries/uC-OSIII/os_flag.c **** *
1189:Libraries/uC-OSIII/os_flag.c **** * Note(s)    : This function is INTERNAL to uC/OS-III and your application should not call it.
1190:Libraries/uC-OSIII/os_flag.c **** ***************************************************************************************************
1191:Libraries/uC-OSIII/os_flag.c **** */
1192:Libraries/uC-OSIII/os_flag.c **** 
1193:Libraries/uC-OSIII/os_flag.c **** void   OS_FlagTaskRdy (OS_TCB    *p_tcb,
1194:Libraries/uC-OSIII/os_flag.c ****                        OS_FLAGS   flags_rdy,
1195:Libraries/uC-OSIII/os_flag.c ****                        CPU_TS     ts)
1196:Libraries/uC-OSIII/os_flag.c **** {
 2604              		.loc 1 1196 0
 2605              		.cfi_startproc
 2606              		@ args = 0, pretend = 0, frame = 16
 2607              		@ frame_needed = 1, uses_anonymous_args = 0
 2608 129c 80B5     		push	{r7, lr}
 2609              	.LCFI36:
 2610              		.cfi_def_cfa_offset 8
 2611              		.cfi_offset 14, -4
 2612              		.cfi_offset 7, -8
 2613 129e 84B0     		sub	sp, sp, #16
 2614              	.LCFI37:
 2615              		.cfi_def_cfa_offset 24
 2616 12a0 00AF     		add	r7, sp, #0
 2617              	.LCFI38:
 2618              		.cfi_def_cfa_register 7
 2619 12a2 F860     		str	r0, [r7, #12]
 2620 12a4 B960     		str	r1, [r7, #8]
 2621 12a6 7A60     		str	r2, [r7, #4]
1197:Libraries/uC-OSIII/os_flag.c ****     p_tcb->FlagsRdy   = flags_rdy;
 2622              		.loc 1 1197 0
 2623 12a8 FB68     		ldr	r3, [r7, #12]
 2624 12aa BA68     		ldr	r2, [r7, #8]
 2625 12ac 5A66     		str	r2, [r3, #100]
1198:Libraries/uC-OSIII/os_flag.c ****     p_tcb->PendStatus = OS_STATUS_PEND_OK;                  /* Clear pend status                   
 2626              		.loc 1 1198 0
 2627 12ae FB68     		ldr	r3, [r7, #12]
 2628 12b0 4FF00002 		mov	r2, #0
 2629 12b4 83F8C120 		strb	r2, [r3, #193]
1199:Libraries/uC-OSIII/os_flag.c ****     p_tcb->PendOn     = OS_TASK_PEND_ON_NOTHING;            /* Indicate no longer pending          
 2630              		.loc 1 1199 0
 2631 12b8 FB68     		ldr	r3, [r7, #12]
 2632 12ba 4FF00002 		mov	r2, #0
 2633 12be 83F8C020 		strb	r2, [r3, #192]
1200:Libraries/uC-OSIII/os_flag.c ****     p_tcb->TS         = ts;
 2634              		.loc 1 1200 0
 2635 12c2 FB68     		ldr	r3, [r7, #12]
 2636 12c4 7A68     		ldr	r2, [r7, #4]
 2637 12c6 9A63     		str	r2, [r3, #56]
1201:Libraries/uC-OSIII/os_flag.c ****     switch (p_tcb->TaskState) {
 2638              		.loc 1 1201 0
 2639 12c8 FB68     		ldr	r3, [r7, #12]
 2640 12ca 93F8C230 		ldrb	r3, [r3, #194]	@ zero_extendqisi2
 2641 12ce 072B     		cmp	r3, #7
 2642 12d0 20D8     		bhi	.L177
 2643 12d2 4FF04C42 		mov	r2, #-872415232
 2644 12d6 02FA03F2 		lsl	r2, r2, r3
 2645 12da 002A     		cmp	r2, #0
 2646 12dc 1CDB     		blt	.L178
 2647 12de 4FF04072 		mov	r2, #50331648
 2648 12e2 02FA03F2 		lsl	r2, r2, r3
 2649 12e6 002A     		cmp	r2, #0
 2650 12e8 0EDB     		blt	.L174
 2651 12ea 4FF04052 		mov	r2, #805306368
 2652 12ee 02FA03F3 		lsl	r3, r2, r3
 2653 12f2 002B     		cmp	r3, #0
 2654 12f4 0EDA     		bge	.L176
 2655              	.L173:
1202:Libraries/uC-OSIII/os_flag.c ****         case OS_TASK_STATE_RDY:
1203:Libraries/uC-OSIII/os_flag.c ****         case OS_TASK_STATE_DLY:
1204:Libraries/uC-OSIII/os_flag.c ****         case OS_TASK_STATE_DLY_SUSPENDED:
1205:Libraries/uC-OSIII/os_flag.c ****         case OS_TASK_STATE_SUSPENDED:
1206:Libraries/uC-OSIII/os_flag.c ****              break;
1207:Libraries/uC-OSIII/os_flag.c **** 
1208:Libraries/uC-OSIII/os_flag.c ****         case OS_TASK_STATE_PEND:
1209:Libraries/uC-OSIII/os_flag.c ****         case OS_TASK_STATE_PEND_TIMEOUT:
1210:Libraries/uC-OSIII/os_flag.c ****              OS_TaskRdy(p_tcb);
 2656              		.loc 1 1210 0
 2657 12f6 F868     		ldr	r0, [r7, #12]
 2658 12f8 FFF7FEFF 		bl	OS_TaskRdy
1211:Libraries/uC-OSIII/os_flag.c ****              p_tcb->TaskState = OS_TASK_STATE_RDY;
 2659              		.loc 1 1211 0
 2660 12fc FB68     		ldr	r3, [r7, #12]
 2661 12fe 4FF00002 		mov	r2, #0
 2662 1302 83F8C220 		strb	r2, [r3, #194]
1212:Libraries/uC-OSIII/os_flag.c ****              break;
 2663              		.loc 1 1212 0
 2664 1306 08E0     		b	.L175
 2665              	.L174:
1213:Libraries/uC-OSIII/os_flag.c **** 
1214:Libraries/uC-OSIII/os_flag.c ****         case OS_TASK_STATE_PEND_SUSPENDED:
1215:Libraries/uC-OSIII/os_flag.c ****         case OS_TASK_STATE_PEND_TIMEOUT_SUSPENDED:
1216:Libraries/uC-OSIII/os_flag.c ****              p_tcb->TaskState = OS_TASK_STATE_SUSPENDED;
 2666              		.loc 1 1216 0
 2667 1308 FB68     		ldr	r3, [r7, #12]
 2668 130a 4FF00402 		mov	r2, #4
 2669 130e 83F8C220 		strb	r2, [r3, #194]
1217:Libraries/uC-OSIII/os_flag.c ****              break;
 2670              		.loc 1 1217 0
 2671 1312 02E0     		b	.L175
 2672              	.L176:
 2673              	.L177:
1218:Libraries/uC-OSIII/os_flag.c **** 
1219:Libraries/uC-OSIII/os_flag.c ****         default:
1220:Libraries/uC-OSIII/os_flag.c ****              break;
 2674              		.loc 1 1220 0
 2675 1314 00BF     		nop
 2676 1316 00E0     		b	.L175
 2677              	.L178:
1206:Libraries/uC-OSIII/os_flag.c ****              break;
 2678              		.loc 1 1206 0
 2679 1318 00BF     		nop
 2680              	.L175:
1221:Libraries/uC-OSIII/os_flag.c ****     }
1222:Libraries/uC-OSIII/os_flag.c ****     OS_PendListRemove(p_tcb);
 2681              		.loc 1 1222 0
 2682 131a F868     		ldr	r0, [r7, #12]
 2683 131c FFF7FEFF 		bl	OS_PendListRemove
1223:Libraries/uC-OSIII/os_flag.c **** }
 2684              		.loc 1 1223 0
 2685 1320 07F11007 		add	r7, r7, #16
 2686 1324 BD46     		mov	sp, r7
 2687 1326 80BD     		pop	{r7, pc}
 2688              		.cfi_endproc
 2689              	.LFE12:
 2691              	.Letext0:
 2692              		.file 2 "Libraries/uC-CPU/cpu.h"
 2693              		.file 3 "Libraries/uC-CPU/cpu_core.h"
 2694              		.file 4 "Libraries/uC-OSIII/os_type.h"
 2695              		.file 5 "Libraries/uC-OSIII/os.h"
DEFINED SYMBOLS
                            *ABS*:00000000 os_flag.c
     /tmp/cc7j7Dah.s:18     .text:00000000 $t
     /tmp/cc7j7Dah.s:23     .text:00000000 OSFlagCreate
     /tmp/cc7j7Dah.s:2051   .text:00000ef8 OS_FlagDbgListAdd
     /tmp/cc7j7Dah.s:189    .text:00000144 OSFlagDel
     /tmp/cc7j7Dah.s:2121   .text:00000f60 OS_FlagDbgListRemove
     /tmp/cc7j7Dah.s:1950   .text:00000e80 OS_FlagClr
     /tmp/cc7j7Dah.s:573    .text:00000458 OSFlagPend
     /tmp/cc7j7Dah.s:678    .text:00000508 $d
     /tmp/cc7j7Dah.s:688    .text:00000528 $t
     /tmp/cc7j7Dah.s:1888   .text:00000e2c OS_FlagBlock
     /tmp/cc7j7Dah.s:1290   .text:00000a1c $d
     /tmp/cc7j7Dah.s:1296   .text:00000a2c $t
     /tmp/cc7j7Dah.s:1415   .text:00000b10 $d
     /tmp/cc7j7Dah.s:1425   .text:00000b30 $t
     /tmp/cc7j7Dah.s:1481   .text:00000b88 OSFlagPendAbort
     /tmp/cc7j7Dah.s:1699   .text:00000d0c OSFlagPendGetFlagsRdy
     /tmp/cc7j7Dah.s:1768   .text:00000d6c OSFlagPost
     /tmp/cc7j7Dah.s:2215   .text:00000fdc OS_FlagPost
     /tmp/cc7j7Dah.s:1941   .rodata:00000000 $d
     /tmp/cc7j7Dah.s:1942   .rodata:00000000 .LC0
     /tmp/cc7j7Dah.s:2001   .text:00000ec0 OS_FlagInit
     /tmp/cc7j7Dah.s:2043   .rodata:00000008 .LC1
     /tmp/cc7j7Dah.s:2361   .text:000010d4 $d
     /tmp/cc7j7Dah.s:2371   .text:000010f4 $t
     /tmp/cc7j7Dah.s:2602   .text:0000129c OS_FlagTaskRdy
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
OSIntNestingCtr
CPU_SR_Save
CPU_IntDisMeasStart
OSSchedLockNestingCtr
OS_SchedLockTimeMeasStart
CPU_IntDisMeasStop
CPU_SR_Restore
OS_PendListInit
OSFlagQty
OS_SchedLockTimeMeasStop
OSIntQNbrEntries
OS_Sched0
CPU_TS_TmrRd
OS_PendObjDel
OSSched
OSTCBCurPtr
OS_PendAbort
OS_IntQPost
OS_Pend
OSFlagDbgListPtr
OS_TaskRdy
OS_PendListRemove
