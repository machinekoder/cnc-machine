   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"os_stat.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.align	2
  19              		.global	OSStatReset
  20              		.thumb
  21              		.thumb_func
  23              	OSStatReset:
  24              	.LFB0:
  25              		.file 1 "Libraries/uC-OSIII/os_stat.c"
   1:Libraries/uC-OSIII/os_stat.c **** /*
   2:Libraries/uC-OSIII/os_stat.c **** ***************************************************************************************************
   3:Libraries/uC-OSIII/os_stat.c **** *                                                      uC/OS-III
   4:Libraries/uC-OSIII/os_stat.c **** *                                                 The Real-Time Kernel
   5:Libraries/uC-OSIII/os_stat.c **** *
   6:Libraries/uC-OSIII/os_stat.c **** *                                  (c) Copyright 2009-2010; Micrium, Inc.; Weston, FL
   7:Libraries/uC-OSIII/os_stat.c **** *                          All rights reserved.  Protected by international copyright laws.
   8:Libraries/uC-OSIII/os_stat.c **** *
   9:Libraries/uC-OSIII/os_stat.c **** *                                                   STATISTICS MODULE
  10:Libraries/uC-OSIII/os_stat.c **** *
  11:Libraries/uC-OSIII/os_stat.c **** * File    : OS_STAT.C
  12:Libraries/uC-OSIII/os_stat.c **** * By      : JJL
  13:Libraries/uC-OSIII/os_stat.c **** * Version : V3.01.2
  14:Libraries/uC-OSIII/os_stat.c **** *
  15:Libraries/uC-OSIII/os_stat.c **** * LICENSING TERMS:
  16:Libraries/uC-OSIII/os_stat.c **** * ---------------
  17:Libraries/uC-OSIII/os_stat.c **** *               uC/OS-III is provided in source form to registered licensees ONLY.  It is
  18:Libraries/uC-OSIII/os_stat.c **** *               illegal to distribute this source code to any third party unless you receive
  19:Libraries/uC-OSIII/os_stat.c **** *               written permission by an authorized Micrium representative.  Knowledge of
  20:Libraries/uC-OSIII/os_stat.c **** *               the source code may NOT be used to develop a similar product.
  21:Libraries/uC-OSIII/os_stat.c **** *
  22:Libraries/uC-OSIII/os_stat.c **** *               Please help us continue to provide the Embedded community with the finest
  23:Libraries/uC-OSIII/os_stat.c **** *               software available.  Your honesty is greatly appreciated.
  24:Libraries/uC-OSIII/os_stat.c **** *
  25:Libraries/uC-OSIII/os_stat.c **** *               You can contact us at www.micrium.com.
  26:Libraries/uC-OSIII/os_stat.c **** ***************************************************************************************************
  27:Libraries/uC-OSIII/os_stat.c **** */
  28:Libraries/uC-OSIII/os_stat.c **** 
  29:Libraries/uC-OSIII/os_stat.c **** #include <os.h>
  30:Libraries/uC-OSIII/os_stat.c **** 
  31:Libraries/uC-OSIII/os_stat.c **** #ifdef VSC_INCLUDE_SOURCE_FILE_NAMES
  32:Libraries/uC-OSIII/os_stat.c **** const  CPU_CHAR  *os_stat__c = "$Id: $";
  33:Libraries/uC-OSIII/os_stat.c **** #endif
  34:Libraries/uC-OSIII/os_stat.c **** 
  35:Libraries/uC-OSIII/os_stat.c **** 
  36:Libraries/uC-OSIII/os_stat.c **** #if OS_CFG_STAT_TASK_EN > 0u
  37:Libraries/uC-OSIII/os_stat.c **** 
  38:Libraries/uC-OSIII/os_stat.c **** /*
  39:Libraries/uC-OSIII/os_stat.c **** ***************************************************************************************************
  40:Libraries/uC-OSIII/os_stat.c **** *                                                   RESET STATISTICS
  41:Libraries/uC-OSIII/os_stat.c **** *
  42:Libraries/uC-OSIII/os_stat.c **** * Description: This function is called by your application to reset the statistics.
  43:Libraries/uC-OSIII/os_stat.c **** *
  44:Libraries/uC-OSIII/os_stat.c **** * Argument(s): p_err      is a pointer to a variable that will contain an error code returned by th
  45:Libraries/uC-OSIII/os_stat.c **** *
  46:Libraries/uC-OSIII/os_stat.c **** *                             OS_ERR_NONE
  47:Libraries/uC-OSIII/os_stat.c **** *
  48:Libraries/uC-OSIII/os_stat.c **** * Returns    : none
  49:Libraries/uC-OSIII/os_stat.c **** ***************************************************************************************************
  50:Libraries/uC-OSIII/os_stat.c **** */
  51:Libraries/uC-OSIII/os_stat.c **** 
  52:Libraries/uC-OSIII/os_stat.c **** void  OSStatReset (OS_ERR  *p_err)
  53:Libraries/uC-OSIII/os_stat.c **** {
  26              		.loc 1 53 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 24
  29              		@ frame_needed = 1, uses_anonymous_args = 0
  30 0000 80B5     		push	{r7, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 8
  33              		.cfi_offset 14, -4
  34              		.cfi_offset 7, -8
  35 0002 86B0     		sub	sp, sp, #24
  36              	.LCFI1:
  37              		.cfi_def_cfa_offset 32
  38 0004 00AF     		add	r7, sp, #0
  39              	.LCFI2:
  40              		.cfi_def_cfa_register 7
  41 0006 7860     		str	r0, [r7, #4]
  54:Libraries/uC-OSIII/os_stat.c **** #if (OS_CFG_DBG_EN > 0u)
  55:Libraries/uC-OSIII/os_stat.c ****     OS_TCB      *p_tcb;
  56:Libraries/uC-OSIII/os_stat.c **** #if (OS_MSG_EN > 0u)
  57:Libraries/uC-OSIII/os_stat.c ****     OS_MSG_Q    *p_msg_q;
  58:Libraries/uC-OSIII/os_stat.c **** #endif
  59:Libraries/uC-OSIII/os_stat.c **** #if (OS_CFG_Q_EN > 0u)
  60:Libraries/uC-OSIII/os_stat.c ****     OS_Q        *p_q;
  61:Libraries/uC-OSIII/os_stat.c **** #endif
  62:Libraries/uC-OSIII/os_stat.c ****     CPU_SR_ALLOC();
  42              		.loc 1 62 0
  43 0008 4FF00003 		mov	r3, #0
  44 000c FB60     		str	r3, [r7, #12]
  63:Libraries/uC-OSIII/os_stat.c **** #endif
  64:Libraries/uC-OSIII/os_stat.c **** 
  65:Libraries/uC-OSIII/os_stat.c **** 
  66:Libraries/uC-OSIII/os_stat.c **** 
  67:Libraries/uC-OSIII/os_stat.c **** #ifdef OS_SAFETY_CRITICAL
  68:Libraries/uC-OSIII/os_stat.c ****     if (p_err == (OS_ERR *)0) {
  69:Libraries/uC-OSIII/os_stat.c ****         OS_SAFETY_CRITICAL_EXCEPTION();
  70:Libraries/uC-OSIII/os_stat.c ****     }
  71:Libraries/uC-OSIII/os_stat.c **** #endif
  72:Libraries/uC-OSIII/os_stat.c **** 
  73:Libraries/uC-OSIII/os_stat.c **** #if OS_CFG_ISR_POST_DEFERRED_EN > 0u
  74:Libraries/uC-OSIII/os_stat.c ****     OSIntQTaskTimeMax   = (CPU_TS    )0;                    /* Reset the task execution times      
  45              		.loc 1 74 0
  46 000e 40F20003 		movw	r3, #:lower16:OSIntQTaskTimeMax
  47 0012 C0F20003 		movt	r3, #:upper16:OSIntQTaskTimeMax
  48 0016 4FF00002 		mov	r2, #0
  49 001a 1A60     		str	r2, [r3, #0]
  75:Libraries/uC-OSIII/os_stat.c ****     OSIntQMaxNbrEntries = (OS_OBJ_QTY)0;                    /* Reset the queue maximum number of en
  50              		.loc 1 75 0
  51 001c 40F20003 		movw	r3, #:lower16:OSIntQMaxNbrEntries
  52 0020 C0F20003 		movt	r3, #:upper16:OSIntQMaxNbrEntries
  53 0024 4FF00002 		mov	r2, #0
  54 0028 1A80     		strh	r2, [r3, #0]	@ movhi
  76:Libraries/uC-OSIII/os_stat.c **** #endif
  77:Libraries/uC-OSIII/os_stat.c **** 
  78:Libraries/uC-OSIII/os_stat.c **** #if OS_CFG_STAT_TASK_EN > 0u
  79:Libraries/uC-OSIII/os_stat.c ****     OSStatTaskTimeMax  = (CPU_TS)0;
  55              		.loc 1 79 0
  56 002a 40F20003 		movw	r3, #:lower16:OSStatTaskTimeMax
  57 002e C0F20003 		movt	r3, #:upper16:OSStatTaskTimeMax
  58 0032 4FF00002 		mov	r2, #0
  59 0036 1A60     		str	r2, [r3, #0]
  80:Libraries/uC-OSIII/os_stat.c **** #endif
  81:Libraries/uC-OSIII/os_stat.c **** 
  82:Libraries/uC-OSIII/os_stat.c ****     OSTickTaskTimeMax  = (CPU_TS)0;
  60              		.loc 1 82 0
  61 0038 40F20003 		movw	r3, #:lower16:OSTickTaskTimeMax
  62 003c C0F20003 		movt	r3, #:upper16:OSTickTaskTimeMax
  63 0040 4FF00002 		mov	r2, #0
  64 0044 1A60     		str	r2, [r3, #0]
  83:Libraries/uC-OSIII/os_stat.c **** 
  84:Libraries/uC-OSIII/os_stat.c **** #if OS_CFG_TMR_EN > 0u
  85:Libraries/uC-OSIII/os_stat.c ****     OSTmrTaskTimeMax   = (CPU_TS)0;
  65              		.loc 1 85 0
  66 0046 40F20003 		movw	r3, #:lower16:OSTmrTaskTimeMax
  67 004a C0F20003 		movt	r3, #:upper16:OSTmrTaskTimeMax
  68 004e 4FF00002 		mov	r2, #0
  69 0052 1A60     		str	r2, [r3, #0]
  86:Libraries/uC-OSIII/os_stat.c **** #endif
  87:Libraries/uC-OSIII/os_stat.c **** 
  88:Libraries/uC-OSIII/os_stat.c **** #ifdef CPU_CFG_INT_DIS_MEAS_EN
  89:Libraries/uC-OSIII/os_stat.c ****     OSIntDisTimeMax    = (CPU_TS)0;                         /* Reset the maximum interrupt disable 
  70              		.loc 1 89 0
  71 0054 40F20003 		movw	r3, #:lower16:OSIntDisTimeMax
  72 0058 C0F20003 		movt	r3, #:upper16:OSIntDisTimeMax
  73 005c 4FF00002 		mov	r2, #0
  74 0060 1A60     		str	r2, [r3, #0]
  90:Libraries/uC-OSIII/os_stat.c **** #endif
  91:Libraries/uC-OSIII/os_stat.c **** 
  92:Libraries/uC-OSIII/os_stat.c **** #if OS_CFG_SCHED_LOCK_TIME_MEAS_EN > 0u
  93:Libraries/uC-OSIII/os_stat.c ****     OSSchedLockTimeMax = (CPU_TS)0;                         /* Reset the maximum scheduler lock tim
  75              		.loc 1 93 0
  76 0062 40F20003 		movw	r3, #:lower16:OSSchedLockTimeMax
  77 0066 C0F20003 		movt	r3, #:upper16:OSSchedLockTimeMax
  78 006a 4FF00002 		mov	r2, #0
  79 006e 1A60     		str	r2, [r3, #0]
  94:Libraries/uC-OSIII/os_stat.c **** #endif
  95:Libraries/uC-OSIII/os_stat.c **** 
  96:Libraries/uC-OSIII/os_stat.c **** #if OS_CFG_DBG_EN > 0u
  97:Libraries/uC-OSIII/os_stat.c ****     p_tcb = OSTaskDbgListPtr;
  80              		.loc 1 97 0
  81 0070 40F20003 		movw	r3, #:lower16:OSTaskDbgListPtr
  82 0074 C0F20003 		movt	r3, #:upper16:OSTaskDbgListPtr
  83 0078 1B68     		ldr	r3, [r3, #0]
  84 007a 7B61     		str	r3, [r7, #20]
  98:Libraries/uC-OSIII/os_stat.c ****     while (p_tcb != (OS_TCB *)0) {                          /* Reset per-Task statistics           
  85              		.loc 1 98 0
  86 007c 3EE0     		b	.L2
  87              	.L3:
  99:Libraries/uC-OSIII/os_stat.c ****         CPU_CRITICAL_ENTER();
  88              		.loc 1 99 0
  89 007e FFF7FEFF 		bl	CPU_SR_Save
  90 0082 F860     		str	r0, [r7, #12]
  91 0084 FFF7FEFF 		bl	CPU_IntDisMeasStart
 100:Libraries/uC-OSIII/os_stat.c **** 
 101:Libraries/uC-OSIII/os_stat.c **** #ifdef CPU_CFG_INT_DIS_MEAS_EN
 102:Libraries/uC-OSIII/os_stat.c ****         p_tcb->IntDisTimeMax    = (CPU_TS      )0;
  92              		.loc 1 102 0
  93 0088 7B69     		ldr	r3, [r7, #20]
  94 008a 4FF00002 		mov	r2, #0
  95 008e C3F8B820 		str	r2, [r3, #184]
 103:Libraries/uC-OSIII/os_stat.c **** #endif
 104:Libraries/uC-OSIII/os_stat.c **** 
 105:Libraries/uC-OSIII/os_stat.c **** #if OS_CFG_SCHED_LOCK_TIME_MEAS_EN > 0u
 106:Libraries/uC-OSIII/os_stat.c ****         p_tcb->SchedLockTimeMax = (CPU_TS      )0;
  96              		.loc 1 106 0
  97 0092 7B69     		ldr	r3, [r7, #20]
  98 0094 4FF00002 		mov	r2, #0
  99 0098 C3F8BC20 		str	r2, [r3, #188]
 107:Libraries/uC-OSIII/os_stat.c **** #endif
 108:Libraries/uC-OSIII/os_stat.c **** 
 109:Libraries/uC-OSIII/os_stat.c **** #if OS_CFG_TASK_PROFILE_EN > 0u
 110:Libraries/uC-OSIII/os_stat.c **** #if OS_CFG_TASK_Q_EN > 0u
 111:Libraries/uC-OSIII/os_stat.c ****         p_tcb->MsgQPendTimeMax  = (CPU_TS      )0;
 100              		.loc 1 111 0
 101 009c 7B69     		ldr	r3, [r7, #20]
 102 009e 4FF00002 		mov	r2, #0
 103 00a2 9A65     		str	r2, [r3, #88]
 112:Libraries/uC-OSIII/os_stat.c **** #endif
 113:Libraries/uC-OSIII/os_stat.c ****         p_tcb->SemPendTimeMax   = (CPU_TS      )0;
 104              		.loc 1 113 0
 105 00a4 7B69     		ldr	r3, [r7, #20]
 106 00a6 4FF00002 		mov	r2, #0
 107 00aa 5A67     		str	r2, [r3, #116]
 114:Libraries/uC-OSIII/os_stat.c ****         p_tcb->CtxSwCtr         = (OS_CTR      )0;
 108              		.loc 1 114 0
 109 00ac 7B69     		ldr	r3, [r7, #20]
 110 00ae 4FF00002 		mov	r2, #0
 111 00b2 C3F8A420 		str	r2, [r3, #164]
 115:Libraries/uC-OSIII/os_stat.c ****         p_tcb->CPUUsage         = (OS_CPU_USAGE)0;
 112              		.loc 1 115 0
 113 00b6 7B69     		ldr	r3, [r7, #20]
 114 00b8 4FF00002 		mov	r2, #0
 115 00bc 83F8A020 		strb	r2, [r3, #160]
 116:Libraries/uC-OSIII/os_stat.c ****         p_tcb->CyclesTotal      = (OS_CYCLES   )0;
 116              		.loc 1 116 0
 117 00c0 7969     		ldr	r1, [r7, #20]
 118 00c2 4FF00002 		mov	r2, #0
 119 00c6 4FF00003 		mov	r3, #0
 120 00ca C1E92C23 		strd	r2, [r1, #176]
 117:Libraries/uC-OSIII/os_stat.c ****         p_tcb->CyclesStart      =  OS_TS_GET();
 121              		.loc 1 117 0
 122 00ce FFF7FEFF 		bl	CPU_TS_TmrRd
 123 00d2 0246     		mov	r2, r0
 124 00d4 7B69     		ldr	r3, [r7, #20]
 125 00d6 C3F8AC20 		str	r2, [r3, #172]
 118:Libraries/uC-OSIII/os_stat.c **** #endif
 119:Libraries/uC-OSIII/os_stat.c **** 
 120:Libraries/uC-OSIII/os_stat.c **** #if OS_CFG_TASK_Q_EN > 0u
 121:Libraries/uC-OSIII/os_stat.c ****         p_msg_q                 = &p_tcb->MsgQ;
 126              		.loc 1 121 0
 127 00da 7B69     		ldr	r3, [r7, #20]
 128 00dc 03F14403 		add	r3, r3, #68
 129 00e0 BB60     		str	r3, [r7, #8]
 122:Libraries/uC-OSIII/os_stat.c ****         p_msg_q->NbrEntriesMax  = (OS_MSG_QTY  )0;
 130              		.loc 1 122 0
 131 00e2 BB68     		ldr	r3, [r7, #8]
 132 00e4 4FF00002 		mov	r2, #0
 133 00e8 9A81     		strh	r2, [r3, #12]	@ movhi
 123:Libraries/uC-OSIII/os_stat.c **** #endif
 124:Libraries/uC-OSIII/os_stat.c ****         p_tcb                   = p_tcb->DbgNextPtr;
 134              		.loc 1 124 0
 135 00ea 7B69     		ldr	r3, [r7, #20]
 136 00ec D3F8C830 		ldr	r3, [r3, #200]
 137 00f0 7B61     		str	r3, [r7, #20]
 125:Libraries/uC-OSIII/os_stat.c ****         CPU_CRITICAL_EXIT();
 138              		.loc 1 125 0
 139 00f2 FFF7FEFF 		bl	CPU_IntDisMeasStop
 140 00f6 F868     		ldr	r0, [r7, #12]
 141 00f8 FFF7FEFF 		bl	CPU_SR_Restore
 142              	.L2:
  98:Libraries/uC-OSIII/os_stat.c ****     while (p_tcb != (OS_TCB *)0) {                          /* Reset per-Task statistics           
 143              		.loc 1 98 0 discriminator 1
 144 00fc 7B69     		ldr	r3, [r7, #20]
 145 00fe 002B     		cmp	r3, #0
 146 0100 BDD1     		bne	.L3
 126:Libraries/uC-OSIII/os_stat.c ****     }
 127:Libraries/uC-OSIII/os_stat.c **** #endif
 128:Libraries/uC-OSIII/os_stat.c **** 
 129:Libraries/uC-OSIII/os_stat.c ****     OS_TickListResetPeak();                                 /* Reset tick wheel statistics         
 147              		.loc 1 129 0
 148 0102 FFF7FEFF 		bl	OS_TickListResetPeak
 130:Libraries/uC-OSIII/os_stat.c **** 
 131:Libraries/uC-OSIII/os_stat.c **** #if OS_CFG_TMR_EN > 0u
 132:Libraries/uC-OSIII/os_stat.c ****     OS_TmrResetPeak();
 149              		.loc 1 132 0
 150 0106 FFF7FEFF 		bl	OS_TmrResetPeak
 133:Libraries/uC-OSIII/os_stat.c **** #endif
 134:Libraries/uC-OSIII/os_stat.c **** 
 135:Libraries/uC-OSIII/os_stat.c **** #if (OS_CFG_Q_EN > 0u) && (OS_CFG_DBG_EN > 0u)
 136:Libraries/uC-OSIII/os_stat.c ****     p_q = OSQDbgListPtr;
 151              		.loc 1 136 0
 152 010a 40F20003 		movw	r3, #:lower16:OSQDbgListPtr
 153 010e C0F20003 		movt	r3, #:upper16:OSQDbgListPtr
 154 0112 1B68     		ldr	r3, [r3, #0]
 155 0114 3B61     		str	r3, [r7, #16]
 137:Libraries/uC-OSIII/os_stat.c ****     while (p_q != (OS_Q *)0) {                              /* Reset message queues statistics     
 156              		.loc 1 137 0
 157 0116 14E0     		b	.L4
 158              	.L5:
 138:Libraries/uC-OSIII/os_stat.c ****         CPU_CRITICAL_ENTER();
 159              		.loc 1 138 0
 160 0118 FFF7FEFF 		bl	CPU_SR_Save
 161 011c F860     		str	r0, [r7, #12]
 162 011e FFF7FEFF 		bl	CPU_IntDisMeasStart
 139:Libraries/uC-OSIII/os_stat.c ****         p_msg_q                = &p_q->MsgQ;
 163              		.loc 1 139 0
 164 0122 3B69     		ldr	r3, [r7, #16]
 165 0124 03F12003 		add	r3, r3, #32
 166 0128 BB60     		str	r3, [r7, #8]
 140:Libraries/uC-OSIII/os_stat.c ****         p_msg_q->NbrEntriesMax = (OS_MSG_QTY)0;
 167              		.loc 1 140 0
 168 012a BB68     		ldr	r3, [r7, #8]
 169 012c 4FF00002 		mov	r2, #0
 170 0130 9A81     		strh	r2, [r3, #12]	@ movhi
 141:Libraries/uC-OSIII/os_stat.c ****         p_q                    = p_q->DbgNextPtr;
 171              		.loc 1 141 0
 172 0132 3B69     		ldr	r3, [r7, #16]
 173 0134 9B69     		ldr	r3, [r3, #24]
 174 0136 3B61     		str	r3, [r7, #16]
 142:Libraries/uC-OSIII/os_stat.c ****         CPU_CRITICAL_EXIT();
 175              		.loc 1 142 0
 176 0138 FFF7FEFF 		bl	CPU_IntDisMeasStop
 177 013c F868     		ldr	r0, [r7, #12]
 178 013e FFF7FEFF 		bl	CPU_SR_Restore
 179              	.L4:
 137:Libraries/uC-OSIII/os_stat.c ****     while (p_q != (OS_Q *)0) {                              /* Reset message queues statistics     
 180              		.loc 1 137 0 discriminator 1
 181 0142 3B69     		ldr	r3, [r7, #16]
 182 0144 002B     		cmp	r3, #0
 183 0146 E7D1     		bne	.L5
 143:Libraries/uC-OSIII/os_stat.c ****     }
 144:Libraries/uC-OSIII/os_stat.c **** #endif
 145:Libraries/uC-OSIII/os_stat.c **** 
 146:Libraries/uC-OSIII/os_stat.c ****     *p_err = OS_ERR_NONE;
 184              		.loc 1 146 0
 185 0148 7B68     		ldr	r3, [r7, #4]
 186 014a 4FF00002 		mov	r2, #0
 187 014e 1A80     		strh	r2, [r3, #0]	@ movhi
 147:Libraries/uC-OSIII/os_stat.c **** }
 188              		.loc 1 147 0
 189 0150 07F11807 		add	r7, r7, #24
 190 0154 BD46     		mov	sp, r7
 191 0156 80BD     		pop	{r7, pc}
 192              		.cfi_endproc
 193              	.LFE0:
 195              		.align	2
 196              		.global	OSStatTaskCPUUsageInit
 197              		.thumb
 198              		.thumb_func
 200              	OSStatTaskCPUUsageInit:
 201              	.LFB1:
 148:Libraries/uC-OSIII/os_stat.c **** 
 149:Libraries/uC-OSIII/os_stat.c **** /*$PAGE*/
 150:Libraries/uC-OSIII/os_stat.c **** /*
 151:Libraries/uC-OSIII/os_stat.c **** ***************************************************************************************************
 152:Libraries/uC-OSIII/os_stat.c **** *                                                DETERMINE THE CPU CAPACITY
 153:Libraries/uC-OSIII/os_stat.c **** *
 154:Libraries/uC-OSIII/os_stat.c **** * Description: This function is called by your application to establish CPU usage by first determin
 155:Libraries/uC-OSIII/os_stat.c **** *              counter would count to in 1/10 second if no other tasks were to execute during that 
 156:Libraries/uC-OSIII/os_stat.c **** *              then determined by a low priority task which keeps track of this 32-bit counter ever
 157:Libraries/uC-OSIII/os_stat.c **** *              time, with other tasks running.  CPU usage is determined by:
 158:Libraries/uC-OSIII/os_stat.c **** *
 159:Libraries/uC-OSIII/os_stat.c **** *                                             OS_Stat_IdleCtr
 160:Libraries/uC-OSIII/os_stat.c **** *                 CPU Usage (%) = 100 * (1 - ------------------)
 161:Libraries/uC-OSIII/os_stat.c **** *                                            OS_Stat_IdleCtrMax
 162:Libraries/uC-OSIII/os_stat.c **** *
 163:Libraries/uC-OSIII/os_stat.c **** * Argument(s): p_err      is a pointer to a variable that will contain an error code returned by th
 164:Libraries/uC-OSIII/os_stat.c **** *
 165:Libraries/uC-OSIII/os_stat.c **** *                             OS_ERR_NONE
 166:Libraries/uC-OSIII/os_stat.c **** *
 167:Libraries/uC-OSIII/os_stat.c **** * Returns    : none
 168:Libraries/uC-OSIII/os_stat.c **** ***************************************************************************************************
 169:Libraries/uC-OSIII/os_stat.c **** */
 170:Libraries/uC-OSIII/os_stat.c **** 
 171:Libraries/uC-OSIII/os_stat.c **** void  OSStatTaskCPUUsageInit (OS_ERR  *p_err)
 172:Libraries/uC-OSIII/os_stat.c **** {
 202              		.loc 1 172 0
 203              		.cfi_startproc
 204              		@ args = 0, pretend = 0, frame = 24
 205              		@ frame_needed = 1, uses_anonymous_args = 0
 206 0158 80B5     		push	{r7, lr}
 207              	.LCFI3:
 208              		.cfi_def_cfa_offset 8
 209              		.cfi_offset 14, -4
 210              		.cfi_offset 7, -8
 211 015a 86B0     		sub	sp, sp, #24
 212              	.LCFI4:
 213              		.cfi_def_cfa_offset 32
 214 015c 00AF     		add	r7, sp, #0
 215              	.LCFI5:
 216              		.cfi_def_cfa_register 7
 217 015e 7860     		str	r0, [r7, #4]
 173:Libraries/uC-OSIII/os_stat.c ****     OS_ERR   err;
 174:Libraries/uC-OSIII/os_stat.c ****     OS_TICK  dly;
 175:Libraries/uC-OSIII/os_stat.c ****     CPU_SR_ALLOC();
 218              		.loc 1 175 0
 219 0160 4FF00003 		mov	r3, #0
 220 0164 3B61     		str	r3, [r7, #16]
 176:Libraries/uC-OSIII/os_stat.c **** 
 177:Libraries/uC-OSIII/os_stat.c **** 
 178:Libraries/uC-OSIII/os_stat.c **** 
 179:Libraries/uC-OSIII/os_stat.c **** #ifdef OS_SAFETY_CRITICAL
 180:Libraries/uC-OSIII/os_stat.c ****     if (p_err == (OS_ERR *)0) {
 181:Libraries/uC-OSIII/os_stat.c ****         OS_SAFETY_CRITICAL_EXCEPTION();
 182:Libraries/uC-OSIII/os_stat.c ****     }
 183:Libraries/uC-OSIII/os_stat.c **** #endif
 184:Libraries/uC-OSIII/os_stat.c **** 
 185:Libraries/uC-OSIII/os_stat.c ****     OSTimeDly((OS_TICK )2,                                  /* Synchronize with clock tick         
 221              		.loc 1 185 0
 222 0166 4FF00200 		mov	r0, #2
 223 016a 4FF00001 		mov	r1, #0
 224 016e 07F10E03 		add	r3, r7, #14
 225 0172 1A46     		mov	r2, r3
 226 0174 FFF7FEFF 		bl	OSTimeDly
 186:Libraries/uC-OSIII/os_stat.c ****               (OS_OPT  )OS_OPT_TIME_DLY,
 187:Libraries/uC-OSIII/os_stat.c ****               (OS_ERR *)&err);
 188:Libraries/uC-OSIII/os_stat.c ****     if (err != OS_ERR_NONE) {
 227              		.loc 1 188 0
 228 0178 FB89     		ldrh	r3, [r7, #14]
 229 017a 002B     		cmp	r3, #0
 230 017c 03D0     		beq	.L7
 189:Libraries/uC-OSIII/os_stat.c ****         *p_err = err;
 231              		.loc 1 189 0
 232 017e FA89     		ldrh	r2, [r7, #14]
 233 0180 7B68     		ldr	r3, [r7, #4]
 234 0182 1A80     		strh	r2, [r3, #0]	@ movhi
 190:Libraries/uC-OSIII/os_stat.c ****         return;
 235              		.loc 1 190 0
 236 0184 6BE0     		b	.L6
 237              	.L7:
 191:Libraries/uC-OSIII/os_stat.c ****     }
 192:Libraries/uC-OSIII/os_stat.c ****     CPU_CRITICAL_ENTER();
 238              		.loc 1 192 0
 239 0186 FFF7FEFF 		bl	CPU_SR_Save
 240 018a 3861     		str	r0, [r7, #16]
 241 018c FFF7FEFF 		bl	CPU_IntDisMeasStart
 193:Libraries/uC-OSIII/os_stat.c ****     OSStatTaskCtr = (OS_TICK)0;                             /* Clear idle counter                  
 242              		.loc 1 193 0
 243 0190 40F20003 		movw	r3, #:lower16:OSStatTaskCtr
 244 0194 C0F20003 		movt	r3, #:upper16:OSStatTaskCtr
 245 0198 4FF00002 		mov	r2, #0
 246 019c 1A60     		str	r2, [r3, #0]
 194:Libraries/uC-OSIII/os_stat.c ****     CPU_CRITICAL_EXIT();
 247              		.loc 1 194 0
 248 019e FFF7FEFF 		bl	CPU_IntDisMeasStop
 249 01a2 3869     		ldr	r0, [r7, #16]
 250 01a4 FFF7FEFF 		bl	CPU_SR_Restore
 195:Libraries/uC-OSIII/os_stat.c **** 
 196:Libraries/uC-OSIII/os_stat.c ****     dly = (OS_TICK)0;
 251              		.loc 1 196 0
 252 01a8 4FF00003 		mov	r3, #0
 253 01ac 7B61     		str	r3, [r7, #20]
 197:Libraries/uC-OSIII/os_stat.c ****     if (OSCfg_TickRate_Hz > OSCfg_StatTaskRate_Hz) {
 254              		.loc 1 197 0
 255 01ae 40F20003 		movw	r3, #:lower16:OSCfg_TickRate_Hz
 256 01b2 C0F20003 		movt	r3, #:upper16:OSCfg_TickRate_Hz
 257 01b6 1A68     		ldr	r2, [r3, #0]
 258 01b8 40F20003 		movw	r3, #:lower16:OSCfg_StatTaskRate_Hz
 259 01bc C0F20003 		movt	r3, #:upper16:OSCfg_StatTaskRate_Hz
 260 01c0 1B68     		ldr	r3, [r3, #0]
 261 01c2 9A42     		cmp	r2, r3
 262 01c4 0CD9     		bls	.L9
 198:Libraries/uC-OSIII/os_stat.c ****         dly = (OS_TICK)(OSCfg_TickRate_Hz / OSCfg_StatTaskRate_Hz);
 263              		.loc 1 198 0
 264 01c6 40F20003 		movw	r3, #:lower16:OSCfg_TickRate_Hz
 265 01ca C0F20003 		movt	r3, #:upper16:OSCfg_TickRate_Hz
 266 01ce 1A68     		ldr	r2, [r3, #0]
 267 01d0 40F20003 		movw	r3, #:lower16:OSCfg_StatTaskRate_Hz
 268 01d4 C0F20003 		movt	r3, #:upper16:OSCfg_StatTaskRate_Hz
 269 01d8 1B68     		ldr	r3, [r3, #0]
 270 01da B2FBF3F3 		udiv	r3, r2, r3
 271 01de 7B61     		str	r3, [r7, #20]
 272              	.L9:
 199:Libraries/uC-OSIII/os_stat.c ****     }
 200:Libraries/uC-OSIII/os_stat.c ****     if (dly == (OS_TICK)0) {
 273              		.loc 1 200 0
 274 01e0 7B69     		ldr	r3, [r7, #20]
 275 01e2 002B     		cmp	r3, #0
 276 01e4 0DD1     		bne	.L10
 201:Libraries/uC-OSIII/os_stat.c ****         dly =  (OS_TICK)(OSCfg_TickRate_Hz / (OS_RATE_HZ)10);
 277              		.loc 1 201 0
 278 01e6 40F20003 		movw	r3, #:lower16:OSCfg_TickRate_Hz
 279 01ea C0F20003 		movt	r3, #:upper16:OSCfg_TickRate_Hz
 280 01ee 1A68     		ldr	r2, [r3, #0]
 281 01f0 4CF6CD43 		movw	r3, #52429
 282 01f4 CCF6CC43 		movt	r3, 52428
 283 01f8 A3FB0213 		umull	r1, r3, r3, r2
 284 01fc 4FEAD303 		lsr	r3, r3, #3
 285 0200 7B61     		str	r3, [r7, #20]
 286              	.L10:
 202:Libraries/uC-OSIII/os_stat.c ****     }
 203:Libraries/uC-OSIII/os_stat.c **** 
 204:Libraries/uC-OSIII/os_stat.c ****     OSTimeDly(dly,                                          /* Determine MAX. idle counter value   
 287              		.loc 1 204 0
 288 0202 7869     		ldr	r0, [r7, #20]
 289 0204 4FF00001 		mov	r1, #0
 290 0208 07F10E03 		add	r3, r7, #14
 291 020c 1A46     		mov	r2, r3
 292 020e FFF7FEFF 		bl	OSTimeDly
 205:Libraries/uC-OSIII/os_stat.c ****               OS_OPT_TIME_DLY,
 206:Libraries/uC-OSIII/os_stat.c ****               &err);
 207:Libraries/uC-OSIII/os_stat.c ****     CPU_CRITICAL_ENTER();
 293              		.loc 1 207 0
 294 0212 FFF7FEFF 		bl	CPU_SR_Save
 295 0216 3861     		str	r0, [r7, #16]
 296 0218 FFF7FEFF 		bl	CPU_IntDisMeasStart
 208:Libraries/uC-OSIII/os_stat.c ****     OSStatTaskTimeMax = (CPU_TS)0;
 297              		.loc 1 208 0
 298 021c 40F20003 		movw	r3, #:lower16:OSStatTaskTimeMax
 299 0220 C0F20003 		movt	r3, #:upper16:OSStatTaskTimeMax
 300 0224 4FF00002 		mov	r2, #0
 301 0228 1A60     		str	r2, [r3, #0]
 209:Libraries/uC-OSIII/os_stat.c **** 
 210:Libraries/uC-OSIII/os_stat.c ****     OSStatTaskCtrMax  = OSStatTaskCtr;                      /* Store maximum idle counter count    
 302              		.loc 1 210 0
 303 022a 40F20003 		movw	r3, #:lower16:OSStatTaskCtr
 304 022e C0F20003 		movt	r3, #:upper16:OSStatTaskCtr
 305 0232 1A68     		ldr	r2, [r3, #0]
 306 0234 40F20003 		movw	r3, #:lower16:OSStatTaskCtrMax
 307 0238 C0F20003 		movt	r3, #:upper16:OSStatTaskCtrMax
 308 023c 1A60     		str	r2, [r3, #0]
 211:Libraries/uC-OSIII/os_stat.c ****     OSStatTaskRdy     = OS_STATE_RDY;
 309              		.loc 1 211 0
 310 023e 40F20003 		movw	r3, #:lower16:OSStatTaskRdy
 311 0242 C0F20003 		movt	r3, #:upper16:OSStatTaskRdy
 312 0246 4FF00102 		mov	r2, #1
 313 024a 1A70     		strb	r2, [r3, #0]
 212:Libraries/uC-OSIII/os_stat.c ****     CPU_CRITICAL_EXIT();
 314              		.loc 1 212 0
 315 024c FFF7FEFF 		bl	CPU_IntDisMeasStop
 316 0250 3869     		ldr	r0, [r7, #16]
 317 0252 FFF7FEFF 		bl	CPU_SR_Restore
 213:Libraries/uC-OSIII/os_stat.c ****     *p_err            = OS_ERR_NONE;
 318              		.loc 1 213 0
 319 0256 7B68     		ldr	r3, [r7, #4]
 320 0258 4FF00002 		mov	r2, #0
 321 025c 1A80     		strh	r2, [r3, #0]	@ movhi
 322              	.L6:
 214:Libraries/uC-OSIII/os_stat.c **** }
 323              		.loc 1 214 0
 324 025e 07F11807 		add	r7, r7, #24
 325 0262 BD46     		mov	sp, r7
 326 0264 80BD     		pop	{r7, pc}
 327              		.cfi_endproc
 328              	.LFE1:
 330 0266 00BF     		.align	2
 331              		.global	OS_StatTask
 332              		.thumb
 333              		.thumb_func
 335              	OS_StatTask:
 336              	.LFB2:
 215:Libraries/uC-OSIII/os_stat.c **** 
 216:Libraries/uC-OSIII/os_stat.c **** /*$PAGE*/
 217:Libraries/uC-OSIII/os_stat.c **** /*
 218:Libraries/uC-OSIII/os_stat.c **** ***************************************************************************************************
 219:Libraries/uC-OSIII/os_stat.c **** *                                                    STATISTICS TASK
 220:Libraries/uC-OSIII/os_stat.c **** *
 221:Libraries/uC-OSIII/os_stat.c **** * Description: This task is internal to uC/OS-III and is used to compute some statistics about the 
 222:Libraries/uC-OSIII/os_stat.c **** *              environment.  Specifically, OS_StatTask() computes the CPU usage.  CPU usage is dete
 223:Libraries/uC-OSIII/os_stat.c **** *
 224:Libraries/uC-OSIII/os_stat.c **** *                                                   OSStatTaskCtr
 225:Libraries/uC-OSIII/os_stat.c **** *                 OSStatTaskCPUUsage = 100 * (1 - ------------------)     (units are in %)
 226:Libraries/uC-OSIII/os_stat.c **** *                                                  OSStatTaskCtrMax
 227:Libraries/uC-OSIII/os_stat.c **** *
 228:Libraries/uC-OSIII/os_stat.c **** * Arguments  : p_arg     this pointer is not used at this time.
 229:Libraries/uC-OSIII/os_stat.c **** *
 230:Libraries/uC-OSIII/os_stat.c **** * Returns    : none
 231:Libraries/uC-OSIII/os_stat.c **** *
 232:Libraries/uC-OSIII/os_stat.c **** * Note(s)    : 1) This task runs at a priority level higher than the idle task.
 233:Libraries/uC-OSIII/os_stat.c **** *
 234:Libraries/uC-OSIII/os_stat.c **** *              2) You can disable this task by setting the configuration #define OS_CFG_STAT_TASK_E
 235:Libraries/uC-OSIII/os_stat.c **** *
 236:Libraries/uC-OSIII/os_stat.c **** *              3) You MUST have at least a delay of 2/10 seconds to allow for the system to establi
 237:Libraries/uC-OSIII/os_stat.c **** *                 for the idle counter.
 238:Libraries/uC-OSIII/os_stat.c **** *
 239:Libraries/uC-OSIII/os_stat.c **** *              4) This function is INTERNAL to uC/OS-III and your application should not call it.
 240:Libraries/uC-OSIII/os_stat.c **** ***************************************************************************************************
 241:Libraries/uC-OSIII/os_stat.c **** */
 242:Libraries/uC-OSIII/os_stat.c **** 
 243:Libraries/uC-OSIII/os_stat.c **** void  OS_StatTask (void *p_arg)
 244:Libraries/uC-OSIII/os_stat.c **** {
 337              		.loc 1 244 0
 338              		.cfi_startproc
 339              		@ args = 0, pretend = 0, frame = 48
 340              		@ frame_needed = 1, uses_anonymous_args = 0
 341 0268 80B5     		push	{r7, lr}
 342              	.LCFI6:
 343              		.cfi_def_cfa_offset 8
 344              		.cfi_offset 14, -4
 345              		.cfi_offset 7, -8
 346 026a 8CB0     		sub	sp, sp, #48
 347              	.LCFI7:
 348              		.cfi_def_cfa_offset 56
 349 026c 00AF     		add	r7, sp, #0
 350              	.LCFI8:
 351              		.cfi_def_cfa_register 7
 352 026e 7860     		str	r0, [r7, #4]
 245:Libraries/uC-OSIII/os_stat.c **** #if OS_CFG_DBG_EN > 0u
 246:Libraries/uC-OSIII/os_stat.c **** #if OS_CFG_TASK_PROFILE_EN > 0u
 247:Libraries/uC-OSIII/os_stat.c ****     OS_CPU_USAGE usage;
 248:Libraries/uC-OSIII/os_stat.c ****     OS_CYCLES    cycles_total;
 249:Libraries/uC-OSIII/os_stat.c **** #endif
 250:Libraries/uC-OSIII/os_stat.c ****     OS_TCB      *p_tcb;
 251:Libraries/uC-OSIII/os_stat.c **** #endif
 252:Libraries/uC-OSIII/os_stat.c ****     OS_ERR       err;
 253:Libraries/uC-OSIII/os_stat.c ****     OS_TICK      dly;
 254:Libraries/uC-OSIII/os_stat.c ****     CPU_TS       ts_start;
 255:Libraries/uC-OSIII/os_stat.c ****     CPU_TS       ts_end;
 256:Libraries/uC-OSIII/os_stat.c ****     CPU_SR_ALLOC();
 353              		.loc 1 256 0
 354 0270 4FF00003 		mov	r3, #0
 355 0274 FB61     		str	r3, [r7, #28]
 257:Libraries/uC-OSIII/os_stat.c **** 
 258:Libraries/uC-OSIII/os_stat.c **** 
 259:Libraries/uC-OSIII/os_stat.c **** 
 260:Libraries/uC-OSIII/os_stat.c ****     p_arg = p_arg;                                          /* Prevent compiler warning for not usi
 261:Libraries/uC-OSIII/os_stat.c ****     while (OSStatTaskRdy != DEF_TRUE) {
 356              		.loc 1 261 0
 357 0276 0EE0     		b	.L12
 358              	.L13:
 262:Libraries/uC-OSIII/os_stat.c ****         OSTimeDly(2u * OSCfg_StatTaskRate_Hz,               /* Wait until statistic task is ready  
 359              		.loc 1 262 0
 360 0278 40F20003 		movw	r3, #:lower16:OSCfg_StatTaskRate_Hz
 361 027c C0F20003 		movt	r3, #:upper16:OSCfg_StatTaskRate_Hz
 362 0280 1B68     		ldr	r3, [r3, #0]
 363 0282 4FEA4303 		lsl	r3, r3, #1
 364 0286 1846     		mov	r0, r3
 365 0288 4FF00001 		mov	r1, #0
 366 028c 07F10E03 		add	r3, r7, #14
 367 0290 1A46     		mov	r2, r3
 368 0292 FFF7FEFF 		bl	OSTimeDly
 369              	.L12:
 261:Libraries/uC-OSIII/os_stat.c ****     while (OSStatTaskRdy != DEF_TRUE) {
 370              		.loc 1 261 0 discriminator 1
 371 0296 40F20003 		movw	r3, #:lower16:OSStatTaskRdy
 372 029a C0F20003 		movt	r3, #:upper16:OSStatTaskRdy
 373 029e 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 374 02a0 012B     		cmp	r3, #1
 375 02a2 E9D1     		bne	.L13
 263:Libraries/uC-OSIII/os_stat.c ****                   OS_OPT_TIME_DLY,
 264:Libraries/uC-OSIII/os_stat.c ****                   &err);
 265:Libraries/uC-OSIII/os_stat.c ****     }
 266:Libraries/uC-OSIII/os_stat.c ****     OSStatReset(&err);                                      /* Reset statistics                    
 376              		.loc 1 266 0
 377 02a4 07F10E03 		add	r3, r7, #14
 378 02a8 1846     		mov	r0, r3
 379 02aa FFF7FEFF 		bl	OSStatReset
 267:Libraries/uC-OSIII/os_stat.c **** 
 268:Libraries/uC-OSIII/os_stat.c ****     dly = (OS_TICK)0;                                       /* Compute statistic task sleep delay  
 380              		.loc 1 268 0
 381 02ae 4FF00003 		mov	r3, #0
 382 02b2 3B62     		str	r3, [r7, #32]
 269:Libraries/uC-OSIII/os_stat.c ****     if (OSCfg_TickRate_Hz > OSCfg_StatTaskRate_Hz) {
 383              		.loc 1 269 0
 384 02b4 40F20003 		movw	r3, #:lower16:OSCfg_TickRate_Hz
 385 02b8 C0F20003 		movt	r3, #:upper16:OSCfg_TickRate_Hz
 386 02bc 1A68     		ldr	r2, [r3, #0]
 387 02be 40F20003 		movw	r3, #:lower16:OSCfg_StatTaskRate_Hz
 388 02c2 C0F20003 		movt	r3, #:upper16:OSCfg_StatTaskRate_Hz
 389 02c6 1B68     		ldr	r3, [r3, #0]
 390 02c8 9A42     		cmp	r2, r3
 391 02ca 0CD9     		bls	.L14
 270:Libraries/uC-OSIII/os_stat.c ****         dly = (OS_TICK)(OSCfg_TickRate_Hz / OSCfg_StatTaskRate_Hz);
 392              		.loc 1 270 0
 393 02cc 40F20003 		movw	r3, #:lower16:OSCfg_TickRate_Hz
 394 02d0 C0F20003 		movt	r3, #:upper16:OSCfg_TickRate_Hz
 395 02d4 1A68     		ldr	r2, [r3, #0]
 396 02d6 40F20003 		movw	r3, #:lower16:OSCfg_StatTaskRate_Hz
 397 02da C0F20003 		movt	r3, #:upper16:OSCfg_StatTaskRate_Hz
 398 02de 1B68     		ldr	r3, [r3, #0]
 399 02e0 B2FBF3F3 		udiv	r3, r2, r3
 400 02e4 3B62     		str	r3, [r7, #32]
 401              	.L14:
 271:Libraries/uC-OSIII/os_stat.c ****     }
 272:Libraries/uC-OSIII/os_stat.c ****     if (dly == (OS_TICK)0) {
 402              		.loc 1 272 0
 403 02e6 3B6A     		ldr	r3, [r7, #32]
 404 02e8 002B     		cmp	r3, #0
 405 02ea 0DD1     		bne	.L15
 273:Libraries/uC-OSIII/os_stat.c ****         dly =  (OS_TICK)(OSCfg_TickRate_Hz / (OS_RATE_HZ)10);
 406              		.loc 1 273 0
 407 02ec 40F20003 		movw	r3, #:lower16:OSCfg_TickRate_Hz
 408 02f0 C0F20003 		movt	r3, #:upper16:OSCfg_TickRate_Hz
 409 02f4 1A68     		ldr	r2, [r3, #0]
 410 02f6 4CF6CD43 		movw	r3, #52429
 411 02fa CCF6CC43 		movt	r3, 52428
 412 02fe A3FB0213 		umull	r1, r3, r3, r2
 413 0302 4FEAD303 		lsr	r3, r3, #3
 414 0306 3B62     		str	r3, [r7, #32]
 415              	.L15:
 274:Libraries/uC-OSIII/os_stat.c ****     }
 275:Libraries/uC-OSIII/os_stat.c **** 
 276:Libraries/uC-OSIII/os_stat.c ****     while (DEF_ON) {
 277:Libraries/uC-OSIII/os_stat.c ****         ts_start = OS_TS_GET();
 416              		.loc 1 277 0
 417 0308 FFF7FEFF 		bl	CPU_TS_TmrRd
 418 030c B861     		str	r0, [r7, #24]
 278:Libraries/uC-OSIII/os_stat.c **** #ifdef  CPU_CFG_INT_DIS_MEAS_EN
 279:Libraries/uC-OSIII/os_stat.c ****         OSIntDisTimeMax = CPU_IntDisMeasMaxGet();
 419              		.loc 1 279 0
 420 030e FFF7FEFF 		bl	CPU_IntDisMeasMaxGet
 421 0312 0246     		mov	r2, r0
 422 0314 40F20003 		movw	r3, #:lower16:OSIntDisTimeMax
 423 0318 C0F20003 		movt	r3, #:upper16:OSIntDisTimeMax
 424 031c 1A60     		str	r2, [r3, #0]
 280:Libraries/uC-OSIII/os_stat.c **** #endif
 281:Libraries/uC-OSIII/os_stat.c ****         CPU_CRITICAL_ENTER();
 425              		.loc 1 281 0
 426 031e FFF7FEFF 		bl	CPU_SR_Save
 427 0322 F861     		str	r0, [r7, #28]
 428 0324 FFF7FEFF 		bl	CPU_IntDisMeasStart
 282:Libraries/uC-OSIII/os_stat.c ****         OSStatTaskCtrRun   = OSStatTaskCtr;                 /* Obtain the of the stat counter for t
 429              		.loc 1 282 0
 430 0328 40F20003 		movw	r3, #:lower16:OSStatTaskCtr
 431 032c C0F20003 		movt	r3, #:upper16:OSStatTaskCtr
 432 0330 1A68     		ldr	r2, [r3, #0]
 433 0332 40F20003 		movw	r3, #:lower16:OSStatTaskCtrRun
 434 0336 C0F20003 		movt	r3, #:upper16:OSStatTaskCtrRun
 435 033a 1A60     		str	r2, [r3, #0]
 283:Libraries/uC-OSIII/os_stat.c ****         OSStatTaskCtr      = (OS_TICK)0;                    /* Reset the stat counter for the next 
 436              		.loc 1 283 0
 437 033c 40F20003 		movw	r3, #:lower16:OSStatTaskCtr
 438 0340 C0F20003 		movt	r3, #:upper16:OSStatTaskCtr
 439 0344 4FF00002 		mov	r2, #0
 440 0348 1A60     		str	r2, [r3, #0]
 284:Libraries/uC-OSIII/os_stat.c ****         CPU_CRITICAL_EXIT();
 441              		.loc 1 284 0
 442 034a FFF7FEFF 		bl	CPU_IntDisMeasStop
 443 034e F869     		ldr	r0, [r7, #28]
 444 0350 FFF7FEFF 		bl	CPU_SR_Restore
 285:Libraries/uC-OSIII/os_stat.c **** 
 286:Libraries/uC-OSIII/os_stat.c ****         if (OSStatTaskCtrMax > OSStatTaskCtrRun) {
 445              		.loc 1 286 0
 446 0354 40F20003 		movw	r3, #:lower16:OSStatTaskCtrMax
 447 0358 C0F20003 		movt	r3, #:upper16:OSStatTaskCtrMax
 448 035c 1A68     		ldr	r2, [r3, #0]
 449 035e 40F20003 		movw	r3, #:lower16:OSStatTaskCtrRun
 450 0362 C0F20003 		movt	r3, #:upper16:OSStatTaskCtrRun
 451 0366 1B68     		ldr	r3, [r3, #0]
 452 0368 9A42     		cmp	r2, r3
 453 036a 28D9     		bls	.L16
 287:Libraries/uC-OSIII/os_stat.c ****             if (OSStatTaskCtrMax > (OS_TICK)0) {
 454              		.loc 1 287 0
 455 036c 40F20003 		movw	r3, #:lower16:OSStatTaskCtrMax
 456 0370 C0F20003 		movt	r3, #:upper16:OSStatTaskCtrMax
 457 0374 1B68     		ldr	r3, [r3, #0]
 458 0376 002B     		cmp	r3, #0
 459 0378 19D0     		beq	.L17
 288:Libraries/uC-OSIII/os_stat.c ****                 OSStatTaskCPUUsage = (OS_CPU_USAGE)((OS_TICK)100u - 100u * OSStatTaskCtrRun / OSSta
 460              		.loc 1 288 0
 461 037a 40F20003 		movw	r3, #:lower16:OSStatTaskCtrRun
 462 037e C0F20003 		movt	r3, #:upper16:OSStatTaskCtrRun
 463 0382 1B68     		ldr	r3, [r3, #0]
 464 0384 4FF06402 		mov	r2, #100
 465 0388 02FB03F2 		mul	r2, r2, r3
 466 038c 40F20003 		movw	r3, #:lower16:OSStatTaskCtrMax
 467 0390 C0F20003 		movt	r3, #:upper16:OSStatTaskCtrMax
 468 0394 1B68     		ldr	r3, [r3, #0]
 469 0396 B2FBF3F3 		udiv	r3, r2, r3
 470 039a DBB2     		uxtb	r3, r3
 471 039c C3F16403 		rsb	r3, r3, #100
 472 03a0 DAB2     		uxtb	r2, r3
 473 03a2 40F20003 		movw	r3, #:lower16:OSStatTaskCPUUsage
 474 03a6 C0F20003 		movt	r3, #:upper16:OSStatTaskCPUUsage
 475 03aa 1A70     		strb	r2, [r3, #0]
 476 03ac 0EE0     		b	.L18
 477              	.L17:
 289:Libraries/uC-OSIII/os_stat.c ****             } else {
 290:Libraries/uC-OSIII/os_stat.c ****                 OSStatTaskCPUUsage = (OS_CPU_USAGE)100;
 478              		.loc 1 290 0
 479 03ae 40F20003 		movw	r3, #:lower16:OSStatTaskCPUUsage
 480 03b2 C0F20003 		movt	r3, #:upper16:OSStatTaskCPUUsage
 481 03b6 4FF06402 		mov	r2, #100
 482 03ba 1A70     		strb	r2, [r3, #0]
 483 03bc 06E0     		b	.L18
 484              	.L16:
 291:Libraries/uC-OSIII/os_stat.c ****             }
 292:Libraries/uC-OSIII/os_stat.c ****         } else {
 293:Libraries/uC-OSIII/os_stat.c ****             OSStatTaskCPUUsage = (OS_CPU_USAGE)100;
 485              		.loc 1 293 0
 486 03be 40F20003 		movw	r3, #:lower16:OSStatTaskCPUUsage
 487 03c2 C0F20003 		movt	r3, #:upper16:OSStatTaskCPUUsage
 488 03c6 4FF06402 		mov	r2, #100
 489 03ca 1A70     		strb	r2, [r3, #0]
 490              	.L18:
 294:Libraries/uC-OSIII/os_stat.c ****         }
 295:Libraries/uC-OSIII/os_stat.c **** 
 296:Libraries/uC-OSIII/os_stat.c ****         OSStatTaskHook();                                   /* Invoke user definable hook          
 491              		.loc 1 296 0
 492 03cc FFF7FEFF 		bl	OSStatTaskHook
 297:Libraries/uC-OSIII/os_stat.c **** 
 298:Libraries/uC-OSIII/os_stat.c **** #if OS_CFG_DBG_EN > 0u
 299:Libraries/uC-OSIII/os_stat.c **** #if OS_CFG_TASK_PROFILE_EN > 0u
 300:Libraries/uC-OSIII/os_stat.c ****         cycles_total = (OS_CYCLES)0;
 493              		.loc 1 300 0
 494 03d0 4FF00002 		mov	r2, #0
 495 03d4 4FF00003 		mov	r3, #0
 496 03d8 C7E90A23 		strd	r2, [r7, #40]
 301:Libraries/uC-OSIII/os_stat.c **** #endif
 302:Libraries/uC-OSIII/os_stat.c ****         p_tcb = OSTaskDbgListPtr;
 497              		.loc 1 302 0
 498 03dc 40F20003 		movw	r3, #:lower16:OSTaskDbgListPtr
 499 03e0 C0F20003 		movt	r3, #:upper16:OSTaskDbgListPtr
 500 03e4 1B68     		ldr	r3, [r3, #0]
 501 03e6 7B62     		str	r3, [r7, #36]
 303:Libraries/uC-OSIII/os_stat.c ****         while (p_tcb != (OS_TCB *)0) {
 502              		.loc 1 303 0
 503 03e8 72E0     		b	.L19
 504              	.L25:
 304:Libraries/uC-OSIII/os_stat.c **** #if OS_CFG_TASK_PROFILE_EN > 0u
 305:Libraries/uC-OSIII/os_stat.c ****             OS_CRITICAL_ENTER();
 505              		.loc 1 305 0
 506 03ea FFF7FEFF 		bl	CPU_SR_Save
 507 03ee F861     		str	r0, [r7, #28]
 508 03f0 FFF7FEFF 		bl	CPU_IntDisMeasStart
 509 03f4 40F20003 		movw	r3, #:lower16:OSSchedLockNestingCtr
 510 03f8 C0F20003 		movt	r3, #:upper16:OSSchedLockNestingCtr
 511 03fc 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 512 03fe 03F10103 		add	r3, r3, #1
 513 0402 DAB2     		uxtb	r2, r3
 514 0404 40F20003 		movw	r3, #:lower16:OSSchedLockNestingCtr
 515 0408 C0F20003 		movt	r3, #:upper16:OSSchedLockNestingCtr
 516 040c 1A70     		strb	r2, [r3, #0]
 517 040e 40F20003 		movw	r3, #:lower16:OSSchedLockNestingCtr
 518 0412 C0F20003 		movt	r3, #:upper16:OSSchedLockNestingCtr
 519 0416 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 520 0418 012B     		cmp	r3, #1
 521 041a 01D1     		bne	.L20
 522              		.loc 1 305 0 is_stmt 0 discriminator 1
 523 041c FFF7FEFF 		bl	OS_SchedLockTimeMeasStart
 524              	.L20:
 525              		.loc 1 305 0 discriminator 2
 526 0420 FFF7FEFF 		bl	CPU_IntDisMeasStop
 527 0424 F869     		ldr	r0, [r7, #28]
 528 0426 FFF7FEFF 		bl	CPU_SR_Restore
 306:Libraries/uC-OSIII/os_stat.c ****             cycles_total += p_tcb->CyclesTotal;
 529              		.loc 1 306 0 is_stmt 1 discriminator 2
 530 042a 7B6A     		ldr	r3, [r7, #36]
 531 042c D3E92C23 		ldrd	r2, [r3, #176]
 532 0430 D7E90A01 		ldrd	r0, [r7, #40]
 533 0434 1218     		adds	r2, r2, r0
 534 0436 43EB0103 		adc	r3, r3, r1
 535 043a C7E90A23 		strd	r2, [r7, #40]
 307:Libraries/uC-OSIII/os_stat.c ****             OS_CRITICAL_EXIT();
 536              		.loc 1 307 0 discriminator 2
 537 043e FFF7FEFF 		bl	CPU_SR_Save
 538 0442 F861     		str	r0, [r7, #28]
 539 0444 FFF7FEFF 		bl	CPU_IntDisMeasStart
 540 0448 40F20003 		movw	r3, #:lower16:OSSchedLockNestingCtr
 541 044c C0F20003 		movt	r3, #:upper16:OSSchedLockNestingCtr
 542 0450 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 543 0452 03F1FF33 		add	r3, r3, #-1
 544 0456 DAB2     		uxtb	r2, r3
 545 0458 40F20003 		movw	r3, #:lower16:OSSchedLockNestingCtr
 546 045c C0F20003 		movt	r3, #:upper16:OSSchedLockNestingCtr
 547 0460 1A70     		strb	r2, [r3, #0]
 548 0462 40F20003 		movw	r3, #:lower16:OSSchedLockNestingCtr
 549 0466 C0F20003 		movt	r3, #:upper16:OSSchedLockNestingCtr
 550 046a 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 551 046c 002B     		cmp	r3, #0
 552 046e 16D1     		bne	.L21
 553              		.loc 1 307 0 is_stmt 0 discriminator 1
 554 0470 FFF7FEFF 		bl	OS_SchedLockTimeMeasStop
 555 0474 40F20003 		movw	r3, #:lower16:OSIntQNbrEntries
 556 0478 C0F20003 		movt	r3, #:upper16:OSIntQNbrEntries
 557 047c 1B88     		ldrh	r3, [r3, #0]
 558 047e 002B     		cmp	r3, #0
 559 0480 07D0     		beq	.L22
 560              		.loc 1 307 0 discriminator 3
 561 0482 FFF7FEFF 		bl	CPU_IntDisMeasStop
 562 0486 F869     		ldr	r0, [r7, #28]
 563 0488 FFF7FEFF 		bl	CPU_SR_Restore
 564 048c FFF7FEFF 		bl	OS_Sched0
 565 0490 0AE0     		b	.L23
 566              	.L22:
 567              		.loc 1 307 0 discriminator 4
 568 0492 FFF7FEFF 		bl	CPU_IntDisMeasStop
 569 0496 F869     		ldr	r0, [r7, #28]
 570 0498 FFF7FEFF 		bl	CPU_SR_Restore
 571 049c 04E0     		b	.L23
 572              	.L21:
 573              		.loc 1 307 0 discriminator 2
 574 049e FFF7FEFF 		bl	CPU_IntDisMeasStop
 575 04a2 F869     		ldr	r0, [r7, #28]
 576 04a4 FFF7FEFF 		bl	CPU_SR_Restore
 577              	.L23:
 308:Libraries/uC-OSIII/os_stat.c **** #endif
 309:Libraries/uC-OSIII/os_stat.c **** 
 310:Libraries/uC-OSIII/os_stat.c **** #if OS_CFG_STAT_TASK_STK_CHK_EN > 0u
 311:Libraries/uC-OSIII/os_stat.c ****             if (p_tcb != (OS_TCB *)0) {
 578              		.loc 1 311 0 is_stmt 1
 579 04a8 7B6A     		ldr	r3, [r7, #36]
 580 04aa 002B     		cmp	r3, #0
 581 04ac 0CD0     		beq	.L24
 312:Libraries/uC-OSIII/os_stat.c ****                 OSTaskStkChk(p_tcb,                         /* Calculate stack usage of active task
 582              		.loc 1 312 0
 583 04ae 7B6A     		ldr	r3, [r7, #36]
 584 04b0 03F18402 		add	r2, r3, #132
 585 04b4 7B6A     		ldr	r3, [r7, #36]
 586 04b6 03F18003 		add	r3, r3, #128
 587 04ba 786A     		ldr	r0, [r7, #36]
 588 04bc 1146     		mov	r1, r2
 589 04be 1A46     		mov	r2, r3
 590 04c0 07F10E03 		add	r3, r7, #14
 591 04c4 FFF7FEFF 		bl	OSTaskStkChk
 592              	.L24:
 313:Libraries/uC-OSIII/os_stat.c ****                              &p_tcb->StkFree,
 314:Libraries/uC-OSIII/os_stat.c ****                              &p_tcb->StkUsed,
 315:Libraries/uC-OSIII/os_stat.c ****                              &err);
 316:Libraries/uC-OSIII/os_stat.c ****             }
 317:Libraries/uC-OSIII/os_stat.c **** #endif
 318:Libraries/uC-OSIII/os_stat.c ****             p_tcb = p_tcb->DbgNextPtr;
 593              		.loc 1 318 0
 594 04c8 7B6A     		ldr	r3, [r7, #36]
 595 04ca D3F8C830 		ldr	r3, [r3, #200]
 596 04ce 7B62     		str	r3, [r7, #36]
 597              	.L19:
 303:Libraries/uC-OSIII/os_stat.c ****         while (p_tcb != (OS_TCB *)0) {
 598              		.loc 1 303 0 discriminator 1
 599 04d0 7B6A     		ldr	r3, [r7, #36]
 600 04d2 002B     		cmp	r3, #0
 601 04d4 89D1     		bne	.L25
 319:Libraries/uC-OSIII/os_stat.c ****         }
 320:Libraries/uC-OSIII/os_stat.c **** #if OS_CFG_TASK_PROFILE_EN > 0u
 321:Libraries/uC-OSIII/os_stat.c ****         if (cycles_total > (OS_CYCLES)0) {
 602              		.loc 1 321 0
 603 04d6 D7E90A23 		ldrd	r2, [r7, #40]
 604 04da 52EA0301 		orrs	r1, r2, r3
 605 04de 70D0     		beq	.L26
 322:Libraries/uC-OSIII/os_stat.c ****             p_tcb = OSTaskDbgListPtr;
 606              		.loc 1 322 0
 607 04e0 40F20003 		movw	r3, #:lower16:OSTaskDbgListPtr
 608 04e4 C0F20003 		movt	r3, #:upper16:OSTaskDbgListPtr
 609 04e8 1B68     		ldr	r3, [r3, #0]
 610 04ea 7B62     		str	r3, [r7, #36]
 323:Libraries/uC-OSIII/os_stat.c ****             while (p_tcb != (OS_TCB *)0) {                  /* Compute execution time of each task 
 611              		.loc 1 323 0
 612 04ec 66E0     		b	.L27
 613              	.L33:
 324:Libraries/uC-OSIII/os_stat.c ****                 OS_CRITICAL_ENTER();
 614              		.loc 1 324 0
 615 04ee FFF7FEFF 		bl	CPU_SR_Save
 616 04f2 F861     		str	r0, [r7, #28]
 617 04f4 FFF7FEFF 		bl	CPU_IntDisMeasStart
 618 04f8 40F20003 		movw	r3, #:lower16:OSSchedLockNestingCtr
 619 04fc C0F20003 		movt	r3, #:upper16:OSSchedLockNestingCtr
 620 0500 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 621 0502 03F10103 		add	r3, r3, #1
 622 0506 DAB2     		uxtb	r2, r3
 623 0508 40F20003 		movw	r3, #:lower16:OSSchedLockNestingCtr
 624 050c C0F20003 		movt	r3, #:upper16:OSSchedLockNestingCtr
 625 0510 1A70     		strb	r2, [r3, #0]
 626 0512 40F20003 		movw	r3, #:lower16:OSSchedLockNestingCtr
 627 0516 C0F20003 		movt	r3, #:upper16:OSSchedLockNestingCtr
 628 051a 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 629 051c 012B     		cmp	r3, #1
 630 051e 01D1     		bne	.L28
 631              		.loc 1 324 0 is_stmt 0 discriminator 1
 632 0520 FFF7FEFF 		bl	OS_SchedLockTimeMeasStart
 633              	.L28:
 634              		.loc 1 324 0 discriminator 2
 635 0524 FFF7FEFF 		bl	CPU_IntDisMeasStop
 636 0528 F869     		ldr	r0, [r7, #28]
 637 052a FFF7FEFF 		bl	CPU_SR_Restore
 325:Libraries/uC-OSIII/os_stat.c ****                 usage           = 100; // kuu: 100; (OS_CPU_USAGE)((OS_CYCLES)100 * p_tcb->CyclesTo
 638              		.loc 1 325 0 is_stmt 1 discriminator 2
 639 052e 4FF06403 		mov	r3, #100
 640 0532 FB75     		strb	r3, [r7, #23]
 326:Libraries/uC-OSIII/os_stat.c ****                 if (usage > 100u) {
 641              		.loc 1 326 0 discriminator 2
 642 0534 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 643 0536 642B     		cmp	r3, #100
 644 0538 03D9     		bls	.L29
 327:Libraries/uC-OSIII/os_stat.c ****                     usage           = 100u;
 645              		.loc 1 327 0
 646 053a 4FF06403 		mov	r3, #100
 647 053e FB75     		strb	r3, [r7, #23]
 648 0540 03E0     		b	.L30
 649              	.L29:
 328:Libraries/uC-OSIII/os_stat.c ****                 } else {
 329:Libraries/uC-OSIII/os_stat.c ****                     p_tcb->CPUUsage = usage;
 650              		.loc 1 329 0
 651 0542 7B6A     		ldr	r3, [r7, #36]
 652 0544 FA7D     		ldrb	r2, [r7, #23]
 653 0546 83F8A020 		strb	r2, [r3, #160]
 654              	.L30:
 330:Libraries/uC-OSIII/os_stat.c ****                 }
 331:Libraries/uC-OSIII/os_stat.c ****                 p_tcb = p_tcb->DbgNextPtr;
 655              		.loc 1 331 0
 656 054a 7B6A     		ldr	r3, [r7, #36]
 657 054c D3F8C830 		ldr	r3, [r3, #200]
 658 0550 7B62     		str	r3, [r7, #36]
 332:Libraries/uC-OSIII/os_stat.c ****                 OS_CRITICAL_EXIT();
 659              		.loc 1 332 0
 660 0552 FFF7FEFF 		bl	CPU_SR_Save
 661 0556 F861     		str	r0, [r7, #28]
 662 0558 FFF7FEFF 		bl	CPU_IntDisMeasStart
 663 055c 40F20003 		movw	r3, #:lower16:OSSchedLockNestingCtr
 664 0560 C0F20003 		movt	r3, #:upper16:OSSchedLockNestingCtr
 665 0564 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 666 0566 03F1FF33 		add	r3, r3, #-1
 667 056a DAB2     		uxtb	r2, r3
 668 056c 40F20003 		movw	r3, #:lower16:OSSchedLockNestingCtr
 669 0570 C0F20003 		movt	r3, #:upper16:OSSchedLockNestingCtr
 670 0574 1A70     		strb	r2, [r3, #0]
 671 0576 40F20003 		movw	r3, #:lower16:OSSchedLockNestingCtr
 672 057a C0F20003 		movt	r3, #:upper16:OSSchedLockNestingCtr
 673 057e 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 674 0580 002B     		cmp	r3, #0
 675 0582 16D1     		bne	.L31
 676              		.loc 1 332 0 is_stmt 0 discriminator 1
 677 0584 FFF7FEFF 		bl	OS_SchedLockTimeMeasStop
 678 0588 40F20003 		movw	r3, #:lower16:OSIntQNbrEntries
 679 058c C0F20003 		movt	r3, #:upper16:OSIntQNbrEntries
 680 0590 1B88     		ldrh	r3, [r3, #0]
 681 0592 002B     		cmp	r3, #0
 682 0594 07D0     		beq	.L32
 683              		.loc 1 332 0 discriminator 3
 684 0596 FFF7FEFF 		bl	CPU_IntDisMeasStop
 685 059a F869     		ldr	r0, [r7, #28]
 686 059c FFF7FEFF 		bl	CPU_SR_Restore
 687 05a0 FFF7FEFF 		bl	OS_Sched0
 688 05a4 0AE0     		b	.L27
 689              	.L32:
 690              		.loc 1 332 0 discriminator 4
 691 05a6 FFF7FEFF 		bl	CPU_IntDisMeasStop
 692 05aa F869     		ldr	r0, [r7, #28]
 693 05ac FFF7FEFF 		bl	CPU_SR_Restore
 694 05b0 04E0     		b	.L27
 695              	.L31:
 696              		.loc 1 332 0 discriminator 2
 697 05b2 FFF7FEFF 		bl	CPU_IntDisMeasStop
 698 05b6 F869     		ldr	r0, [r7, #28]
 699 05b8 FFF7FEFF 		bl	CPU_SR_Restore
 700              	.L27:
 323:Libraries/uC-OSIII/os_stat.c ****             while (p_tcb != (OS_TCB *)0) {                  /* Compute execution time of each task 
 701              		.loc 1 323 0 is_stmt 1 discriminator 1
 702 05bc 7B6A     		ldr	r3, [r7, #36]
 703 05be 002B     		cmp	r3, #0
 704 05c0 95D1     		bne	.L33
 705              	.L26:
 333:Libraries/uC-OSIII/os_stat.c ****             }
 334:Libraries/uC-OSIII/os_stat.c ****         }
 335:Libraries/uC-OSIII/os_stat.c **** #endif
 336:Libraries/uC-OSIII/os_stat.c **** #endif
 337:Libraries/uC-OSIII/os_stat.c **** 
 338:Libraries/uC-OSIII/os_stat.c ****         if (OSStatResetFlag == DEF_TRUE) {
 706              		.loc 1 338 0
 707 05c2 40F20003 		movw	r3, #:lower16:OSStatResetFlag
 708 05c6 C0F20003 		movt	r3, #:upper16:OSStatResetFlag
 709 05ca 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 710 05cc 012B     		cmp	r3, #1
 711 05ce 0BD1     		bne	.L34
 339:Libraries/uC-OSIII/os_stat.c ****             OSStatResetFlag  = DEF_FALSE;
 712              		.loc 1 339 0
 713 05d0 40F20003 		movw	r3, #:lower16:OSStatResetFlag
 714 05d4 C0F20003 		movt	r3, #:upper16:OSStatResetFlag
 715 05d8 4FF00002 		mov	r2, #0
 716 05dc 1A70     		strb	r2, [r3, #0]
 340:Libraries/uC-OSIII/os_stat.c ****             OSStatReset(&err);
 717              		.loc 1 340 0
 718 05de 07F10E03 		add	r3, r7, #14
 719 05e2 1846     		mov	r0, r3
 720 05e4 FFF7FEFF 		bl	OSStatReset
 721              	.L34:
 341:Libraries/uC-OSIII/os_stat.c ****         }
 342:Libraries/uC-OSIII/os_stat.c **** 
 343:Libraries/uC-OSIII/os_stat.c ****         ts_end = OS_TS_GET() - ts_start;                    /* Measure execution time of statistic 
 722              		.loc 1 343 0
 723 05e8 FFF7FEFF 		bl	CPU_TS_TmrRd
 724 05ec 0246     		mov	r2, r0
 725 05ee BB69     		ldr	r3, [r7, #24]
 726 05f0 D31A     		subs	r3, r2, r3
 727 05f2 3B61     		str	r3, [r7, #16]
 344:Libraries/uC-OSIII/os_stat.c ****         if (ts_end > OSStatTaskTimeMax) {
 728              		.loc 1 344 0
 729 05f4 40F20003 		movw	r3, #:lower16:OSStatTaskTimeMax
 730 05f8 C0F20003 		movt	r3, #:upper16:OSStatTaskTimeMax
 731 05fc 1B68     		ldr	r3, [r3, #0]
 732 05fe 3A69     		ldr	r2, [r7, #16]
 733 0600 9A42     		cmp	r2, r3
 734 0602 05D9     		bls	.L35
 345:Libraries/uC-OSIII/os_stat.c ****             OSStatTaskTimeMax = ts_end;
 735              		.loc 1 345 0
 736 0604 40F20003 		movw	r3, #:lower16:OSStatTaskTimeMax
 737 0608 C0F20003 		movt	r3, #:upper16:OSStatTaskTimeMax
 738 060c 3A69     		ldr	r2, [r7, #16]
 739 060e 1A60     		str	r2, [r3, #0]
 740              	.L35:
 346:Libraries/uC-OSIII/os_stat.c ****         }
 347:Libraries/uC-OSIII/os_stat.c **** 
 348:Libraries/uC-OSIII/os_stat.c ****         OSTimeDly(dly,
 741              		.loc 1 348 0
 742 0610 386A     		ldr	r0, [r7, #32]
 743 0612 4FF00001 		mov	r1, #0
 744 0616 07F10E03 		add	r3, r7, #14
 745 061a 1A46     		mov	r2, r3
 746 061c FFF7FEFF 		bl	OSTimeDly
 349:Libraries/uC-OSIII/os_stat.c ****                   OS_OPT_TIME_DLY,
 350:Libraries/uC-OSIII/os_stat.c ****                   &err);
 351:Libraries/uC-OSIII/os_stat.c ****     }
 747              		.loc 1 351 0
 748 0620 72E6     		b	.L15
 749              		.cfi_endproc
 750              	.LFE2:
 752              		.section	.rodata
 753              		.align	2
 754              	.LC0:
 755 0000 75432F4F 		.ascii	"uC/OS-III Stat Task\000"
 755      532D4949 
 755      49205374 
 755      61742054 
 755      61736B00 
 756              		.text
 757 0622 00BF     		.align	2
 758              		.global	OS_StatTaskInit
 759              		.thumb
 760              		.thumb_func
 762              	OS_StatTaskInit:
 763              	.LFB3:
 352:Libraries/uC-OSIII/os_stat.c **** }
 353:Libraries/uC-OSIII/os_stat.c **** 
 354:Libraries/uC-OSIII/os_stat.c **** /*$PAGE*/
 355:Libraries/uC-OSIII/os_stat.c **** /*
 356:Libraries/uC-OSIII/os_stat.c **** ***************************************************************************************************
 357:Libraries/uC-OSIII/os_stat.c **** *                                              INITIALIZE THE STATISTICS
 358:Libraries/uC-OSIII/os_stat.c **** *
 359:Libraries/uC-OSIII/os_stat.c **** * Description: This function is called by OSInit() to initialize the statistic task.
 360:Libraries/uC-OSIII/os_stat.c **** *
 361:Libraries/uC-OSIII/os_stat.c **** * Argument(s): p_err     is a pointer to a variable that will contain an error code returned by thi
 362:Libraries/uC-OSIII/os_stat.c **** *
 363:Libraries/uC-OSIII/os_stat.c **** *                            OS_ERR_STK_INVALID       If you specified a NULL stack pointer during 
 364:Libraries/uC-OSIII/os_stat.c **** *                            OS_ERR_STK_SIZE_INVALID  If you didn't specify a large enough stack.
 365:Libraries/uC-OSIII/os_stat.c **** *                            OS_ERR_PRIO_INVALID      If you specified a priority for the statistic
 366:Libraries/uC-OSIII/os_stat.c **** *                                                     lower (i.e. higher number) than the idle task
 367:Libraries/uC-OSIII/os_stat.c **** *                            OS_ERR_xxx               An error code returned by OSTaskCreate()
 368:Libraries/uC-OSIII/os_stat.c **** *
 369:Libraries/uC-OSIII/os_stat.c **** * Returns    : none
 370:Libraries/uC-OSIII/os_stat.c **** *
 371:Libraries/uC-OSIII/os_stat.c **** * Note(s)    : This function is INTERNAL to uC/OS-III and your application should not call it.
 372:Libraries/uC-OSIII/os_stat.c **** ***************************************************************************************************
 373:Libraries/uC-OSIII/os_stat.c **** */
 374:Libraries/uC-OSIII/os_stat.c **** 
 375:Libraries/uC-OSIII/os_stat.c **** void  OS_StatTaskInit (OS_ERR  *p_err)
 376:Libraries/uC-OSIII/os_stat.c **** {
 764              		.loc 1 376 0
 765              		.cfi_startproc
 766              		@ args = 0, pretend = 0, frame = 8
 767              		@ frame_needed = 1, uses_anonymous_args = 0
 768 0624 80B5     		push	{r7, lr}
 769              	.LCFI9:
 770              		.cfi_def_cfa_offset 8
 771              		.cfi_offset 14, -4
 772              		.cfi_offset 7, -8
 773 0626 8CB0     		sub	sp, sp, #48
 774              	.LCFI10:
 775              		.cfi_def_cfa_offset 56
 776 0628 0AAF     		add	r7, sp, #40
 777              	.LCFI11:
 778              		.cfi_def_cfa 7, 16
 779 062a 7860     		str	r0, [r7, #4]
 377:Libraries/uC-OSIII/os_stat.c **** #ifdef OS_SAFETY_CRITICAL
 378:Libraries/uC-OSIII/os_stat.c ****     if (p_err == (OS_ERR *)0) {
 379:Libraries/uC-OSIII/os_stat.c ****         OS_SAFETY_CRITICAL_EXCEPTION();
 380:Libraries/uC-OSIII/os_stat.c ****     }
 381:Libraries/uC-OSIII/os_stat.c **** #endif
 382:Libraries/uC-OSIII/os_stat.c **** 
 383:Libraries/uC-OSIII/os_stat.c ****     OSStatTaskCtr    = (OS_TICK)0;
 780              		.loc 1 383 0
 781 062c 40F20003 		movw	r3, #:lower16:OSStatTaskCtr
 782 0630 C0F20003 		movt	r3, #:upper16:OSStatTaskCtr
 783 0634 4FF00002 		mov	r2, #0
 784 0638 1A60     		str	r2, [r3, #0]
 384:Libraries/uC-OSIII/os_stat.c ****     OSStatTaskCtrRun = (OS_TICK)0;
 785              		.loc 1 384 0
 786 063a 40F20003 		movw	r3, #:lower16:OSStatTaskCtrRun
 787 063e C0F20003 		movt	r3, #:upper16:OSStatTaskCtrRun
 788 0642 4FF00002 		mov	r2, #0
 789 0646 1A60     		str	r2, [r3, #0]
 385:Libraries/uC-OSIII/os_stat.c ****     OSStatTaskCtrMax = (OS_TICK)0;
 790              		.loc 1 385 0
 791 0648 40F20003 		movw	r3, #:lower16:OSStatTaskCtrMax
 792 064c C0F20003 		movt	r3, #:upper16:OSStatTaskCtrMax
 793 0650 4FF00002 		mov	r2, #0
 794 0654 1A60     		str	r2, [r3, #0]
 386:Libraries/uC-OSIII/os_stat.c ****     OSStatTaskRdy    = OS_STATE_NOT_RDY;                    /* Statistic task is not ready         
 795              		.loc 1 386 0
 796 0656 40F20003 		movw	r3, #:lower16:OSStatTaskRdy
 797 065a C0F20003 		movt	r3, #:upper16:OSStatTaskRdy
 798 065e 4FF00002 		mov	r2, #0
 799 0662 1A70     		strb	r2, [r3, #0]
 387:Libraries/uC-OSIII/os_stat.c ****     OSStatResetFlag  = DEF_FALSE;
 800              		.loc 1 387 0
 801 0664 40F20003 		movw	r3, #:lower16:OSStatResetFlag
 802 0668 C0F20003 		movt	r3, #:upper16:OSStatResetFlag
 803 066c 4FF00002 		mov	r2, #0
 804 0670 1A70     		strb	r2, [r3, #0]
 388:Libraries/uC-OSIII/os_stat.c **** 
 389:Libraries/uC-OSIII/os_stat.c ****                                                             /* ---------------- CREATE THE STAT TAS
 390:Libraries/uC-OSIII/os_stat.c ****     if (OSCfg_StatTaskStkBasePtr == (CPU_STK*)0) {
 805              		.loc 1 390 0
 806 0672 40F20003 		movw	r3, #:lower16:OSCfg_StatTaskStkBasePtr
 807 0676 C0F20003 		movt	r3, #:upper16:OSCfg_StatTaskStkBasePtr
 808 067a 1B68     		ldr	r3, [r3, #0]
 809 067c 002B     		cmp	r3, #0
 810 067e 04D1     		bne	.L37
 391:Libraries/uC-OSIII/os_stat.c ****         *p_err = OS_ERR_STK_INVALID;
 811              		.loc 1 391 0
 812 0680 7B68     		ldr	r3, [r7, #4]
 813 0682 46F62C62 		movw	r2, #28204
 814 0686 1A80     		strh	r2, [r3, #0]	@ movhi
 392:Libraries/uC-OSIII/os_stat.c ****         return;
 815              		.loc 1 392 0
 816 0688 52E0     		b	.L36
 817              	.L37:
 393:Libraries/uC-OSIII/os_stat.c ****     }
 394:Libraries/uC-OSIII/os_stat.c **** 
 395:Libraries/uC-OSIII/os_stat.c ****     if (OSCfg_StatTaskStkSize < OSCfg_StkSizeMin) {
 818              		.loc 1 395 0
 819 068a 40F20003 		movw	r3, #:lower16:OSCfg_StatTaskStkSize
 820 068e C0F20003 		movt	r3, #:upper16:OSCfg_StatTaskStkSize
 821 0692 1A68     		ldr	r2, [r3, #0]
 822 0694 40F20003 		movw	r3, #:lower16:OSCfg_StkSizeMin
 823 0698 C0F20003 		movt	r3, #:upper16:OSCfg_StkSizeMin
 824 069c 1B68     		ldr	r3, [r3, #0]
 825 069e 9A42     		cmp	r2, r3
 826 06a0 04D2     		bcs	.L39
 396:Libraries/uC-OSIII/os_stat.c ****         *p_err = OS_ERR_STK_SIZE_INVALID;
 827              		.loc 1 396 0
 828 06a2 7B68     		ldr	r3, [r7, #4]
 829 06a4 46F62D62 		movw	r2, #28205
 830 06a8 1A80     		strh	r2, [r3, #0]	@ movhi
 397:Libraries/uC-OSIII/os_stat.c ****         return;
 831              		.loc 1 397 0
 832 06aa 41E0     		b	.L36
 833              	.L39:
 398:Libraries/uC-OSIII/os_stat.c ****     }
 399:Libraries/uC-OSIII/os_stat.c **** 
 400:Libraries/uC-OSIII/os_stat.c ****     if (OSCfg_StatTaskPrio >= (OS_CFG_PRIO_MAX - 1u)) {
 834              		.loc 1 400 0
 835 06ac 40F20003 		movw	r3, #:lower16:OSCfg_StatTaskPrio
 836 06b0 C0F20003 		movt	r3, #:upper16:OSCfg_StatTaskPrio
 837 06b4 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 838 06b6 3E2B     		cmp	r3, #62
 839 06b8 04D9     		bls	.L40
 401:Libraries/uC-OSIII/os_stat.c ****         *p_err = OS_ERR_PRIO_INVALID;
 840              		.loc 1 401 0
 841 06ba 7B68     		ldr	r3, [r7, #4]
 842 06bc 46F27322 		movw	r2, #25203
 843 06c0 1A80     		strh	r2, [r3, #0]	@ movhi
 402:Libraries/uC-OSIII/os_stat.c ****         return;
 844              		.loc 1 402 0
 845 06c2 35E0     		b	.L36
 846              	.L40:
 403:Libraries/uC-OSIII/os_stat.c ****     }
 404:Libraries/uC-OSIII/os_stat.c **** 
 405:Libraries/uC-OSIII/os_stat.c ****     OSTaskCreate((OS_TCB     *)&OSStatTaskTCB,
 847              		.loc 1 405 0
 848 06c4 40F20003 		movw	r3, #:lower16:OSCfg_StatTaskPrio
 849 06c8 C0F20003 		movt	r3, #:upper16:OSCfg_StatTaskPrio
 850 06cc 1878     		ldrb	r0, [r3, #0]	@ zero_extendqisi2
 851 06ce 40F20003 		movw	r3, #:lower16:OSCfg_StatTaskStkBasePtr
 852 06d2 C0F20003 		movt	r3, #:upper16:OSCfg_StatTaskStkBasePtr
 853 06d6 1968     		ldr	r1, [r3, #0]
 854 06d8 40F20003 		movw	r3, #:lower16:OSCfg_StatTaskStkLimit
 855 06dc C0F20003 		movt	r3, #:upper16:OSCfg_StatTaskStkLimit
 856 06e0 1A68     		ldr	r2, [r3, #0]
 857 06e2 40F20003 		movw	r3, #:lower16:OSCfg_StatTaskStkSize
 858 06e6 C0F20003 		movt	r3, #:upper16:OSCfg_StatTaskStkSize
 859 06ea 1B68     		ldr	r3, [r3, #0]
 860 06ec 0090     		str	r0, [sp, #0]
 861 06ee 0191     		str	r1, [sp, #4]
 862 06f0 0292     		str	r2, [sp, #8]
 863 06f2 0393     		str	r3, [sp, #12]
 864 06f4 4FF00003 		mov	r3, #0
 865 06f8 0493     		str	r3, [sp, #16]
 866 06fa 4FF00003 		mov	r3, #0
 867 06fe 0593     		str	r3, [sp, #20]
 868 0700 4FF00003 		mov	r3, #0
 869 0704 0693     		str	r3, [sp, #24]
 870 0706 4FF00303 		mov	r3, #3
 871 070a 0793     		str	r3, [sp, #28]
 872 070c 7B68     		ldr	r3, [r7, #4]
 873 070e 0893     		str	r3, [sp, #32]
 874 0710 40F20000 		movw	r0, #:lower16:OSStatTaskTCB
 875 0714 C0F20000 		movt	r0, #:upper16:OSStatTaskTCB
 876 0718 40F20001 		movw	r1, #:lower16:.LC0
 877 071c C0F20001 		movt	r1, #:upper16:.LC0
 878 0720 40F20002 		movw	r2, #:lower16:OS_StatTask
 879 0724 C0F20002 		movt	r2, #:upper16:OS_StatTask
 880 0728 4FF00003 		mov	r3, #0
 881 072c FFF7FEFF 		bl	OSTaskCreate
 882              	.L36:
 406:Libraries/uC-OSIII/os_stat.c ****                  (CPU_CHAR   *)((void *)"uC/OS-III Stat Task"),
 407:Libraries/uC-OSIII/os_stat.c ****                  (OS_TASK_PTR )OS_StatTask,
 408:Libraries/uC-OSIII/os_stat.c ****                  (void       *)0,
 409:Libraries/uC-OSIII/os_stat.c ****                  (OS_PRIO     )OSCfg_StatTaskPrio,
 410:Libraries/uC-OSIII/os_stat.c ****                  (CPU_STK    *)OSCfg_StatTaskStkBasePtr,
 411:Libraries/uC-OSIII/os_stat.c ****                  (CPU_STK_SIZE)OSCfg_StatTaskStkLimit,
 412:Libraries/uC-OSIII/os_stat.c ****                  (CPU_STK_SIZE)OSCfg_StatTaskStkSize,
 413:Libraries/uC-OSIII/os_stat.c ****                  (OS_MSG_QTY  )0,
 414:Libraries/uC-OSIII/os_stat.c ****                  (OS_TICK     )0,
 415:Libraries/uC-OSIII/os_stat.c ****                  (void       *)0,
 416:Libraries/uC-OSIII/os_stat.c ****                  (OS_OPT      )(OS_OPT_TASK_STK_CHK | OS_OPT_TASK_STK_CLR),
 417:Libraries/uC-OSIII/os_stat.c ****                  (OS_ERR     *)p_err);
 418:Libraries/uC-OSIII/os_stat.c **** }
 883              		.loc 1 418 0
 884 0730 07F10807 		add	r7, r7, #8
 885 0734 BD46     		mov	sp, r7
 886 0736 80BD     		pop	{r7, pc}
 887              		.cfi_endproc
 888              	.LFE3:
 890              	.Letext0:
 891              		.file 2 "Libraries/uC-CPU/cpu.h"
 892              		.file 3 "Libraries/uC-CPU/cpu_core.h"
 893              		.file 4 "Libraries/uC-OSIII/os_type.h"
 894              		.file 5 "Libraries/uC-OSIII/os.h"
DEFINED SYMBOLS
                            *ABS*:00000000 os_stat.c
     /tmp/ccHscI9o.s:18     .text:00000000 $t
     /tmp/ccHscI9o.s:23     .text:00000000 OSStatReset
     /tmp/ccHscI9o.s:200    .text:00000158 OSStatTaskCPUUsageInit
     /tmp/ccHscI9o.s:335    .text:00000268 OS_StatTask
     /tmp/ccHscI9o.s:753    .rodata:00000000 $d
     /tmp/ccHscI9o.s:754    .rodata:00000000 .LC0
     /tmp/ccHscI9o.s:762    .text:00000624 OS_StatTaskInit
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
OSIntQTaskTimeMax
OSIntQMaxNbrEntries
OSStatTaskTimeMax
OSTickTaskTimeMax
OSTmrTaskTimeMax
OSIntDisTimeMax
OSSchedLockTimeMax
OSTaskDbgListPtr
CPU_SR_Save
CPU_IntDisMeasStart
CPU_TS_TmrRd
CPU_IntDisMeasStop
CPU_SR_Restore
OS_TickListResetPeak
OS_TmrResetPeak
OSQDbgListPtr
OSTimeDly
OSStatTaskCtr
OSCfg_TickRate_Hz
OSCfg_StatTaskRate_Hz
OSStatTaskCtrMax
OSStatTaskRdy
CPU_IntDisMeasMaxGet
OSStatTaskCtrRun
OSStatTaskCPUUsage
OSStatTaskHook
OSSchedLockNestingCtr
OS_SchedLockTimeMeasStart
OS_SchedLockTimeMeasStop
OSIntQNbrEntries
OS_Sched0
OSTaskStkChk
OSStatResetFlag
OSCfg_StatTaskStkBasePtr
OSCfg_StatTaskStkSize
OSCfg_StkSizeMin
OSCfg_StatTaskPrio
OSCfg_StatTaskStkLimit
OSStatTaskTCB
OSTaskCreate
