   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"usb_app.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.comm	com_context,16,4
  19              		.comm	BulkInSize,4,4
  20              		.comm	BulkOutSize,4,4
  21              		.comm	abBulkOutBuf,360,4
  22              		.comm	abBulkInBuf,360,4
  23              		.section	.rodata
  24              		.align	2
  27              	abDescriptors:
  28 0000 12       		.byte	18
  29 0001 01       		.byte	1
  30 0002 00       		.byte	0
  31 0003 02       		.byte	2
  32 0004 FF       		.byte	-1
  33 0005 00       		.byte	0
  34 0006 00       		.byte	0
  35 0007 40       		.byte	64
  36 0008 FE       		.byte	-2
  37 0009 FE       		.byte	-2
  38 000a 01       		.byte	1
  39 000b 00       		.byte	0
  40 000c 00       		.byte	0
  41 000d 01       		.byte	1
  42 000e 01       		.byte	1
  43 000f 02       		.byte	2
  44 0010 03       		.byte	3
  45 0011 01       		.byte	1
  46 0012 09       		.byte	9
  47 0013 02       		.byte	2
  48 0014 20       		.byte	32
  49 0015 00       		.byte	0
  50 0016 01       		.byte	1
  51 0017 01       		.byte	1
  52 0018 00       		.byte	0
  53 0019 80       		.byte	-128
  54 001a 32       		.byte	50
  55 001b 09       		.byte	9
  56 001c 04       		.byte	4
  57 001d 00       		.byte	0
  58 001e 00       		.byte	0
  59 001f 02       		.byte	2
  60 0020 FF       		.byte	-1
  61 0021 00       		.byte	0
  62 0022 00       		.byte	0
  63 0023 00       		.byte	0
  64 0024 07       		.byte	7
  65 0025 05       		.byte	5
  66 0026 05       		.byte	5
  67 0027 02       		.byte	2
  68 0028 68       		.byte	104
  69 0029 01       		.byte	1
  70 002a 00       		.byte	0
  71 002b 07       		.byte	7
  72 002c 05       		.byte	5
  73 002d 82       		.byte	-126
  74 002e 02       		.byte	2
  75 002f 68       		.byte	104
  76 0030 01       		.byte	1
  77 0031 00       		.byte	0
  78 0032 04       		.byte	4
  79 0033 03       		.byte	3
  80 0034 09       		.byte	9
  81 0035 04       		.byte	4
  82 0036 0A       		.byte	10
  83 0037 03       		.byte	3
  84 0038 46       		.byte	70
  85 0039 00       		.byte	0
  86 003a 48       		.byte	72
  87 003b 00       		.byte	0
  88 003c 54       		.byte	84
  89 003d 00       		.byte	0
  90 003e 57       		.byte	87
  91 003f 00       		.byte	0
  92 0040 14       		.byte	20
  93 0041 03       		.byte	3
  94 0042 43       		.byte	67
  95 0043 00       		.byte	0
  96 0044 4E       		.byte	78
  97 0045 00       		.byte	0
  98 0046 43       		.byte	67
  99 0047 00       		.byte	0
 100 0048 20       		.byte	32
 101 0049 00       		.byte	0
 102 004a 75       		.byte	117
 103 004b 00       		.byte	0
 104 004c 43       		.byte	67
 105 004d 00       		.byte	0
 106 004e 4F       		.byte	79
 107 004f 00       		.byte	0
 108 0050 53       		.byte	83
 109 0051 00       		.byte	0
 110 0052 33       		.byte	51
 111 0053 00       		.byte	0
 112 0054 14       		.byte	20
 113 0055 03       		.byte	3
 114 0056 30       		.byte	48
 115 0057 00       		.byte	0
 116 0058 30       		.byte	48
 117 0059 00       		.byte	0
 118 005a 30       		.byte	48
 119 005b 00       		.byte	0
 120 005c 30       		.byte	48
 121 005d 00       		.byte	0
 122 005e 3A       		.byte	58
 123 005f 00       		.byte	0
 124 0060 30       		.byte	48
 125 0061 00       		.byte	0
 126 0062 30       		.byte	48
 127 0063 00       		.byte	0
 128 0064 3A       		.byte	58
 129 0065 00       		.byte	0
 130 0066 31       		.byte	49
 131 0067 00       		.byte	0
 132 0068 00       		.byte	0
 133              		.bss
 134              		.align	3
 135              	App_TaskStartTCB:
 136 0000 00000000 		.space	208
 136      00000000 
 136      00000000 
 136      00000000 
 136      00000000 
 137              		.align	3
 138              	App_TaskATCB:
 139 00d0 00000000 		.space	208
 139      00000000 
 139      00000000 
 139      00000000 
 139      00000000 
 140              		.align	2
 141              	App_TaskStartStk:
 142 01a0 00000000 		.space	512
 142      00000000 
 142      00000000 
 142      00000000 
 142      00000000 
 143              		.align	2
 144              	App_TaskAStk:
 145 03a0 00000000 		.space	800
 145      00000000 
 145      00000000 
 145      00000000 
 145      00000000 
 146              		.section	.rodata
 147 0069 000000   		.align	2
 148              	.LC0:
 149 006c 4C504331 		.ascii	"LPC1758\000"
 149      37353800 
 150              		.align	2
 151              	.LC1:
 152 0074 53746172 		.ascii	"Start\000"
 152      7400
 153              		.text
 154              		.align	2
 155              		.global	main
 156              		.thumb
 157              		.thumb_func
 159              	main:
 160              	.LFB55:
 161              		.file 1 "usb_app.c"
   1:usb_app.c     **** /*
   2:usb_app.c     ****  * usb_app.c
   3:usb_app.c     ****  *
   4:usb_app.c     ****  *  Created on: Apr 24, 2013
   5:usb_app.c     ****  *      Author: Roman
   6:usb_app.c     ****  */
   7:usb_app.c     **** 
   8:usb_app.c     **** /*
   9:usb_app.c     **** ************************************************************************************************
  10:usb_app.c     **** *                                             INCLUDE FILES
  11:usb_app.c     **** ************************************************************************************************
  12:usb_app.c     **** */
  13:usb_app.c     **** #include <includes.h>
  14:usb_app.c     **** 
  15:usb_app.c     **** /*
  16:usb_app.c     **** ************************************************************************************************
  17:usb_app.c     **** *                                             LOCAL DEFINES
  18:usb_app.c     **** ************************************************************************************************
  19:usb_app.c     **** */
  20:usb_app.c     **** #define APP_STACK_SIZE 200
  21:usb_app.c     **** 
  22:usb_app.c     **** /*
  23:usb_app.c     **** ************************************************************************************************
  24:usb_app.c     **** *                                            LOCAL VARIABLES
  25:usb_app.c     **** ************************************************************************************************
  26:usb_app.c     **** */
  27:usb_app.c     **** static OS_TCB App_TaskStartTCB;               /* Application Startup Task Control Block (TCB) */
  28:usb_app.c     **** static OS_TCB App_TaskATCB;
  29:usb_app.c     **** 
  30:usb_app.c     **** static CPU_STK App_TaskStartStk[APP_CFG_TASK_START_STK_SIZE];             /* Start Task Stack */
  31:usb_app.c     **** static CPU_STK App_TaskAStk[APP_STACK_SIZE];
  32:usb_app.c     **** /*
  33:usb_app.c     **** ************************************************************************************************
  34:usb_app.c     **** *                                         FUNCTION PROTOTYPES
  35:usb_app.c     **** ************************************************************************************************
  36:usb_app.c     **** */
  37:usb_app.c     **** static void App_TaskStart (void  *p_arg);
  38:usb_app.c     **** static void App_TaskA (void *p_arg);
  39:usb_app.c     **** /*
  40:usb_app.c     **** ************************************************************************************************
  41:usb_app.c     **** *                                                main()
  42:usb_app.c     **** *
  43:usb_app.c     **** * Description : This is the standard entry point for C code. It is assumed that your code will
  44:usb_app.c     **** *               call main() once you have performed all necessary initialization.
  45:usb_app.c     **** *
  46:usb_app.c     **** * Argument(s) : none
  47:usb_app.c     **** *
  48:usb_app.c     **** * Return(s)   : none
  49:usb_app.c     **** *
  50:usb_app.c     **** * Caller(s)   : Startup Code.
  51:usb_app.c     **** *
  52:usb_app.c     **** * Note(s)     : none.
  53:usb_app.c     **** ************************************************************************************************
  54:usb_app.c     **** */
  55:usb_app.c     **** 
  56:usb_app.c     **** int
  57:usb_app.c     **** main (void)
  58:usb_app.c     **** {
 162              		.loc 1 58 0
 163              		.cfi_startproc
 164              		@ args = 0, pretend = 0, frame = 8
 165              		@ frame_needed = 1, uses_anonymous_args = 0
 166 0000 80B5     		push	{r7, lr}
 167              	.LCFI0:
 168              		.cfi_def_cfa_offset 8
 169              		.cfi_offset 14, -4
 170              		.cfi_offset 7, -8
 171 0002 8CB0     		sub	sp, sp, #48
 172              	.LCFI1:
 173              		.cfi_def_cfa_offset 56
 174 0004 0AAF     		add	r7, sp, #40
 175              	.LCFI2:
 176              		.cfi_def_cfa 7, 16
  59:usb_app.c     ****     OS_ERR   os_err;
  60:usb_app.c     **** #if (CPU_CFG_NAME_EN == DEF_ENABLED)
  61:usb_app.c     ****     CPU_ERR  cpu_err;
  62:usb_app.c     **** #endif
  63:usb_app.c     **** 
  64:usb_app.c     ****     BSP_PreInit();                                 /* initialize basic board support routines */
 177              		.loc 1 64 0
 178 0006 FFF7FEFF 		bl	BSP_PreInit
  65:usb_app.c     **** 
  66:usb_app.c     **** #if (CPU_CFG_NAME_EN == DEF_ENABLED)
  67:usb_app.c     ****     CPU_NameSet((CPU_CHAR *)CSP_DEV_NAME,
 179              		.loc 1 67 0
 180 000a 40F20000 		movw	r0, #:lower16:.LC0
 181 000e C0F20000 		movt	r0, #:upper16:.LC0
 182 0012 07F10403 		add	r3, r7, #4
 183 0016 1946     		mov	r1, r3
 184 0018 FFF7FEFF 		bl	CPU_NameSet
  68:usb_app.c     ****                 (CPU_ERR  *)&cpu_err);
  69:usb_app.c     **** #endif
  70:usb_app.c     **** 
  71:usb_app.c     ****     Mem_Init();                                       /* Initialize memory management  module */
 185              		.loc 1 71 0
 186 001c FFF7FEFF 		bl	Mem_Init
  72:usb_app.c     **** 
  73:usb_app.c     ****     OSInit(&os_err);                                                        /* Init uC/OS-III */
 187              		.loc 1 73 0
 188 0020 07F10603 		add	r3, r7, #6
 189 0024 1846     		mov	r0, r3
 190 0026 FFF7FEFF 		bl	OSInit
  74:usb_app.c     ****     if(os_err != OS_ERR_NONE)
 191              		.loc 1 74 0
 192 002a FB88     		ldrh	r3, [r7, #6]
 193 002c 002B     		cmp	r3, #0
 194 002e 00D0     		beq	.L2
 195              	.L3:
  75:usb_app.c     ****       for(;;);
 196              		.loc 1 75 0 discriminator 1
 197 0030 FEE7     		b	.L3
 198              	.L2:
  76:usb_app.c     **** 
  77:usb_app.c     ****     OSTaskCreate((OS_TCB      *)&App_TaskStartTCB,                  /* Create the Start Task */
 199              		.loc 1 77 0
 200 0032 4FF00503 		mov	r3, #5
 201 0036 0093     		str	r3, [sp, #0]
 202 0038 40F20003 		movw	r3, #:lower16:App_TaskStartStk
 203 003c C0F20003 		movt	r3, #:upper16:App_TaskStartStk
 204 0040 0193     		str	r3, [sp, #4]
 205 0042 4FF00C03 		mov	r3, #12
 206 0046 0293     		str	r3, [sp, #8]
 207 0048 4FF08003 		mov	r3, #128
 208 004c 0393     		str	r3, [sp, #12]
 209 004e 4FF00003 		mov	r3, #0
 210 0052 0493     		str	r3, [sp, #16]
 211 0054 4FF00003 		mov	r3, #0
 212 0058 0593     		str	r3, [sp, #20]
 213 005a 4FF00003 		mov	r3, #0
 214 005e 0693     		str	r3, [sp, #24]
 215 0060 4FF00303 		mov	r3, #3
 216 0064 0793     		str	r3, [sp, #28]
 217 0066 07F10603 		add	r3, r7, #6
 218 006a 0893     		str	r3, [sp, #32]
 219 006c 40F20000 		movw	r0, #:lower16:App_TaskStartTCB
 220 0070 C0F20000 		movt	r0, #:upper16:App_TaskStartTCB
 221 0074 40F20001 		movw	r1, #:lower16:.LC1
 222 0078 C0F20001 		movt	r1, #:upper16:.LC1
 223 007c 40F20002 		movw	r2, #:lower16:App_TaskStart
 224 0080 C0F20002 		movt	r2, #:upper16:App_TaskStart
 225 0084 4FF00003 		mov	r3, #0
 226 0088 FFF7FEFF 		bl	OSTaskCreate
  78:usb_app.c     ****                  (CPU_CHAR    *)"Start",
  79:usb_app.c     ****                  (OS_TASK_PTR  )App_TaskStart,
  80:usb_app.c     ****                  (void        *)0,
  81:usb_app.c     ****                  (OS_PRIO      )5,
  82:usb_app.c     ****                  (CPU_STK     *)App_TaskStartStk,
  83:usb_app.c     ****                  (CPU_STK_SIZE )APP_CFG_TASK_START_STK_SIZE_LIMIT,
  84:usb_app.c     ****                  (CPU_STK_SIZE )APP_CFG_TASK_START_STK_SIZE,
  85:usb_app.c     ****                  (OS_MSG_QTY   )0u,
  86:usb_app.c     ****                  (OS_TICK      )0u,
  87:usb_app.c     ****                  (void        *)0,
  88:usb_app.c     ****                  (OS_OPT       )(OS_OPT_TASK_STK_CHK | OS_OPT_TASK_STK_CLR),
  89:usb_app.c     ****                  (OS_ERR      *)&os_err);
  90:usb_app.c     **** 
  91:usb_app.c     ****     OSStart(&os_err);                                                   /* Start Multitasking */
 227              		.loc 1 91 0
 228 008c 07F10603 		add	r3, r7, #6
 229 0090 1846     		mov	r0, r3
 230 0092 FFF7FEFF 		bl	OSStart
  92:usb_app.c     ****     if(os_err != OS_ERR_NONE)                                         /* shall never get here */
 231              		.loc 1 92 0
 232 0096 FB88     		ldrh	r3, [r7, #6]
 233 0098 002B     		cmp	r3, #0
 234 009a 00D0     		beq	.L4
 235              	.L5:
  93:usb_app.c     ****           for(;;);
 236              		.loc 1 93 0 discriminator 1
 237 009c FEE7     		b	.L5
 238              	.L4:
  94:usb_app.c     ****     return (0);
 239              		.loc 1 94 0
 240 009e 4FF00003 		mov	r3, #0
  95:usb_app.c     **** }
 241              		.loc 1 95 0
 242 00a2 1846     		mov	r0, r3
 243 00a4 07F10807 		add	r7, r7, #8
 244 00a8 BD46     		mov	sp, r7
 245 00aa 80BD     		pop	{r7, pc}
 246              		.cfi_endproc
 247              	.LFE55:
 249              		.section	.rodata
 250 007a 0000     		.align	2
 251              	.LC2:
 252 007c 5461736B 		.ascii	"TaskA\000"
 252      4100
 253              		.text
 254              		.align	2
 255              		.thumb
 256              		.thumb_func
 258              	App_TaskStart:
 259              	.LFB56:
  96:usb_app.c     **** 
  97:usb_app.c     **** /*
  98:usb_app.c     **** ************************************************************************************************
  99:usb_app.c     **** *                                          STARTUP TASK
 100:usb_app.c     **** *
 101:usb_app.c     **** * Description : This is an example of a startup task.  As mentioned in the book's text, you MUST
 102:usb_app.c     **** *               initialize the ticker only once multitasking has started.
 103:usb_app.c     **** *
 104:usb_app.c     **** * Arguments   : p_arg   is the argument passed to 'AppTaskStart()' by 'OSTaskCreate()'.
 105:usb_app.c     **** *
 106:usb_app.c     **** * Returns     : none
 107:usb_app.c     **** *
 108:usb_app.c     **** ************************************************************************************************
 109:usb_app.c     **** */
 110:usb_app.c     **** 
 111:usb_app.c     **** static  void
 112:usb_app.c     **** App_TaskStart (void *p_arg)
 113:usb_app.c     **** {
 260              		.loc 1 113 0
 261              		.cfi_startproc
 262              		@ args = 0, pretend = 0, frame = 16
 263              		@ frame_needed = 1, uses_anonymous_args = 0
 264 00ac 80B5     		push	{r7, lr}
 265              	.LCFI3:
 266              		.cfi_def_cfa_offset 8
 267              		.cfi_offset 14, -4
 268              		.cfi_offset 7, -8
 269 00ae 8EB0     		sub	sp, sp, #56
 270              	.LCFI4:
 271              		.cfi_def_cfa_offset 64
 272 00b0 0AAF     		add	r7, sp, #40
 273              	.LCFI5:
 274              		.cfi_def_cfa 7, 24
 275 00b2 7860     		str	r0, [r7, #4]
 114:usb_app.c     ****   OS_ERR       err;
 115:usb_app.c     **** 
 116:usb_app.c     ****   (void)p_arg;                                              /* Prevent Compiler Warning */
 117:usb_app.c     ****   CPU_Init();                               		  /* Initialize the uC/CPU Services */
 276              		.loc 1 117 0
 277 00b4 FFF7FEFF 		bl	CPU_Init
 118:usb_app.c     ****   OS_CSP_TickInit();                                  /* Initialize the Tick Interrupt. */
 278              		.loc 1 118 0
 279 00b8 FFF7FEFF 		bl	OS_CSP_TickInit
 119:usb_app.c     **** 
 120:usb_app.c     ****   USBInit();                               				          /* USB Initialization */
 280              		.loc 1 120 0
 281 00bc FFF7FEFF 		bl	USBInit
 121:usb_app.c     **** 
 122:usb_app.c     ****   /* register descriptors */
 123:usb_app.c     ****   USBRegisterDescriptors(abDescriptors);			   /* USB Descriptor Initialization */
 282              		.loc 1 123 0
 283 00c0 40F20000 		movw	r0, #:lower16:abDescriptors
 284 00c4 C0F20000 		movt	r0, #:upper16:abDescriptors
 285 00c8 FFF7FEFF 		bl	USBRegisterDescriptors
 124:usb_app.c     **** 
 125:usb_app.c     ****   /* register endpoint handlers */
 126:usb_app.c     ****   USBHwRegisterEPIntHandler(BULK_IN_EP, BulkIn);	  /* register BulkIn Handler for EP */
 286              		.loc 1 126 0
 287 00cc 4FF08200 		mov	r0, #130
 288 00d0 40F20001 		movw	r1, #:lower16:BulkIn
 289 00d4 C0F20001 		movt	r1, #:upper16:BulkIn
 290 00d8 FFF7FEFF 		bl	USBHwRegisterEPIntHandler
 127:usb_app.c     ****   USBHwRegisterEPIntHandler(BULK_OUT_EP, BulkOut);	 /* register BulkOut Handler for EP */
 291              		.loc 1 127 0
 292 00dc 4FF00500 		mov	r0, #5
 293 00e0 40F20001 		movw	r1, #:lower16:BulkOut
 294 00e4 C0F20001 		movt	r1, #:upper16:BulkOut
 295 00e8 FFF7FEFF 		bl	USBHwRegisterEPIntHandler
 128:usb_app.c     ****   USBHwRegisterEPIntHandler(INT_IN_EP, NULL);
 296              		.loc 1 128 0
 297 00ec 4FF08100 		mov	r0, #129
 298 00f0 4FF00001 		mov	r1, #0
 299 00f4 FFF7FEFF 		bl	USBHwRegisterEPIntHandler
 129:usb_app.c     **** 
 130:usb_app.c     ****   USBHwEPConfig(BULK_IN_EP, MAX_PACKET_SIZE);	/* Configure Packet Size for outgoing Transfer */
 300              		.loc 1 130 0
 301 00f8 4FF08200 		mov	r0, #130
 302 00fc 4FF4B471 		mov	r1, #360
 303 0100 FFF7FEFF 		bl	USBHwEPConfig
 131:usb_app.c     ****   USBHwEPConfig(BULK_OUT_EP, MAX_PACKET_SIZE);  /* Configure Packet Size for incoming Transfer */
 304              		.loc 1 131 0
 305 0104 4FF00500 		mov	r0, #5
 306 0108 4FF4B471 		mov	r1, #360
 307 010c FFF7FEFF 		bl	USBHwEPConfig
 132:usb_app.c     **** 
 133:usb_app.c     ****   /* enable bulk-in interrupts on NAKs */
 134:usb_app.c     ****   USBHwNakIntEnable(INACK_BI);
 308              		.loc 1 134 0
 309 0110 4FF02000 		mov	r0, #32
 310 0114 FFF7FEFF 		bl	USBHwNakIntEnable
 135:usb_app.c     **** 
 136:usb_app.c     ****   if(CSP_IntVectReg((CSP_DEV_NBR   )CSP_INT_CTRL_NBR_MAIN,
 311              		.loc 1 136 0
 312 0118 40F20003 		movw	r3, #:lower16:USB_IRQHandler
 313 011c C0F20003 		movt	r3, #:upper16:USB_IRQHandler
 314 0120 4FF00000 		mov	r0, #0
 315 0124 4FF01801 		mov	r1, #24
 316 0128 1A46     		mov	r2, r3
 317 012a 4FF00003 		mov	r3, #0
 318 012e FFF7FEFF 		bl	CSP_IntVectReg
 319 0132 0346     		mov	r3, r0
 320 0134 012B     		cmp	r3, #1
 321 0136 00D0     		beq	.L7
 322              	.L8:
 137:usb_app.c     ****                  (CSP_DEV_NBR   )CSP_INT_SRC_NBR_USB_00,
 138:usb_app.c     ****                  (CPU_FNCT_PTR  )USB_IRQHandler,
 139:usb_app.c     ****                  (void         *)0) != DEF_OK){
 140:usb_app.c     **** 	  while(DEF_TRUE);
 323              		.loc 1 140 0 discriminator 1
 324 0138 FEE7     		b	.L8
 325              	.L7:
 141:usb_app.c     ****   }												/* register Interrupt Handler in RTOS */
 142:usb_app.c     **** 
 143:usb_app.c     ****   CSP_IntEn(CSP_INT_CTRL_NBR_MAIN, CSP_INT_SRC_NBR_USB_00);   /* Enable USB Interrupt. */
 326              		.loc 1 143 0
 327 013a 4FF00000 		mov	r0, #0
 328 013e 4FF01801 		mov	r1, #24
 329 0142 FFF7FEFF 		bl	CSP_IntEn
 144:usb_app.c     **** 
 145:usb_app.c     ****   USBHwConnect(TRUE);                        				  /* USB Connect */
 330              		.loc 1 145 0
 331 0146 4FF00100 		mov	r0, #1
 332 014a FFF7FEFF 		bl	USBHwConnect
 146:usb_app.c     **** 
 147:usb_app.c     ****   #if (OS_CFG_STAT_TASK_EN > 0u)
 148:usb_app.c     ****   	  OSStatTaskCPUUsageInit(&err);
 333              		.loc 1 148 0
 334 014e 07F10E03 		add	r3, r7, #14
 335 0152 1846     		mov	r0, r3
 336 0154 FFF7FEFF 		bl	OSStatTaskCPUUsageInit
 149:usb_app.c     ****   #endif
 150:usb_app.c     **** 
 151:usb_app.c     **** 
 152:usb_app.c     ****   #ifdef CPU_CFG_INT_DIS_MEAS_EN
 153:usb_app.c     ****   	  CPU_IntDisMeasMaxCurReset();
 337              		.loc 1 153 0
 338 0158 FFF7FEFF 		bl	CPU_IntDisMeasMaxCurReset
 154:usb_app.c     ****   #endif
 155:usb_app.c     **** 
 156:usb_app.c     ****   OSTaskCreate((OS_TCB     *)&App_TaskATCB,
 339              		.loc 1 156 0
 340 015c 4FF00503 		mov	r3, #5
 341 0160 0093     		str	r3, [sp, #0]
 342 0162 40F20003 		movw	r3, #:lower16:App_TaskAStk
 343 0166 C0F20003 		movt	r3, #:upper16:App_TaskAStk
 344 016a 0193     		str	r3, [sp, #4]
 345 016c 4FF00003 		mov	r3, #0
 346 0170 0293     		str	r3, [sp, #8]
 347 0172 4FF0C803 		mov	r3, #200
 348 0176 0393     		str	r3, [sp, #12]
 349 0178 4FF00003 		mov	r3, #0
 350 017c 0493     		str	r3, [sp, #16]
 351 017e 4FF00003 		mov	r3, #0
 352 0182 0593     		str	r3, [sp, #20]
 353 0184 4FF00003 		mov	r3, #0
 354 0188 0693     		str	r3, [sp, #24]
 355 018a 4FF00303 		mov	r3, #3
 356 018e 0793     		str	r3, [sp, #28]
 357 0190 07F10E03 		add	r3, r7, #14
 358 0194 0893     		str	r3, [sp, #32]
 359 0196 40F20000 		movw	r0, #:lower16:App_TaskATCB
 360 019a C0F20000 		movt	r0, #:upper16:App_TaskATCB
 361 019e 40F20001 		movw	r1, #:lower16:.LC2
 362 01a2 C0F20001 		movt	r1, #:upper16:.LC2
 363 01a6 40F20002 		movw	r2, #:lower16:App_TaskA
 364 01aa C0F20002 		movt	r2, #:upper16:App_TaskA
 365 01ae 4FF00003 		mov	r3, #0
 366 01b2 FFF7FEFF 		bl	OSTaskCreate
 157:usb_app.c     ****                (CPU_CHAR   *)"TaskA",
 158:usb_app.c     ****                (OS_TASK_PTR )App_TaskA,
 159:usb_app.c     ****                (void       *)0,
 160:usb_app.c     ****                (OS_PRIO     )5,
 161:usb_app.c     ****                (CPU_STK    *)App_TaskAStk,
 162:usb_app.c     ****                (CPU_STK_SIZE)0,
 163:usb_app.c     ****                (CPU_STK_SIZE)APP_STACK_SIZE,
 164:usb_app.c     ****                (OS_MSG_QTY  )0,
 165:usb_app.c     ****                (OS_TICK     )0,
 166:usb_app.c     ****                (void       *)0,
 167:usb_app.c     ****                (OS_OPT      )(OS_OPT_TASK_STK_CHK | OS_OPT_TASK_STK_CLR),
 168:usb_app.c     ****                (OS_ERR     *)&err);
 169:usb_app.c     **** 
 170:usb_app.c     ****     GPIO_SetDir(1,(1<<29),1);
 367              		.loc 1 170 0
 368 01b6 4FF00100 		mov	r0, #1
 369 01ba 4FF00051 		mov	r1, #536870912
 370 01be 4FF00102 		mov	r2, #1
 371 01c2 FFF7FEFF 		bl	GPIO_SetDir
 171:usb_app.c     ****     GPIO_ClearValue(1,(1<<29));
 372              		.loc 1 171 0
 373 01c6 4FF00100 		mov	r0, #1
 374 01ca 4FF00051 		mov	r1, #536870912
 375 01ce FFF7FEFF 		bl	GPIO_ClearValue
 376              	.L9:
 172:usb_app.c     ****     while (DEF_TRUE) {
 173:usb_app.c     ****     	GPIO_SetValue(1,(1<<29));
 377              		.loc 1 173 0 discriminator 1
 378 01d2 4FF00100 		mov	r0, #1
 379 01d6 4FF00051 		mov	r1, #536870912
 380 01da FFF7FEFF 		bl	GPIO_SetValue
 174:usb_app.c     ****     	OSTimeDlyHMSM(0u, 0u, 1u, 0u,OS_OPT_TIME_HMSM_STRICT,&err);
 381              		.loc 1 174 0 discriminator 1
 382 01de 4FF00003 		mov	r3, #0
 383 01e2 0093     		str	r3, [sp, #0]
 384 01e4 07F10E03 		add	r3, r7, #14
 385 01e8 0193     		str	r3, [sp, #4]
 386 01ea 4FF00000 		mov	r0, #0
 387 01ee 4FF00001 		mov	r1, #0
 388 01f2 4FF00102 		mov	r2, #1
 389 01f6 4FF00003 		mov	r3, #0
 390 01fa FFF7FEFF 		bl	OSTimeDlyHMSM
 175:usb_app.c     ****     	GPIO_ClearValue(1,(1<<29));
 391              		.loc 1 175 0 discriminator 1
 392 01fe 4FF00100 		mov	r0, #1
 393 0202 4FF00051 		mov	r1, #536870912
 394 0206 FFF7FEFF 		bl	GPIO_ClearValue
 176:usb_app.c     ****     	OSTimeDlyHMSM(0u, 0u, 1u, 0u,OS_OPT_TIME_HMSM_STRICT,&err);
 395              		.loc 1 176 0 discriminator 1
 396 020a 4FF00003 		mov	r3, #0
 397 020e 0093     		str	r3, [sp, #0]
 398 0210 07F10E03 		add	r3, r7, #14
 399 0214 0193     		str	r3, [sp, #4]
 400 0216 4FF00000 		mov	r0, #0
 401 021a 4FF00001 		mov	r1, #0
 402 021e 4FF00102 		mov	r2, #1
 403 0222 4FF00003 		mov	r3, #0
 404 0226 FFF7FEFF 		bl	OSTimeDlyHMSM
 177:usb_app.c     **** 
 178:usb_app.c     ****     }
 405              		.loc 1 178 0 discriminator 1
 406 022a D2E7     		b	.L9
 407              		.cfi_endproc
 408              	.LFE56:
 410              		.section	.rodata
 411 0082 0000     		.align	2
 412              	.LC3:
 413 0084 49276D20 		.ascii	"I'm a LPC1758\012\000"
 413      61204C50 
 413      43313735 
 413      380A00
 414 0093 00       		.text
 415              		.align	2
 416              		.thumb
 417              		.thumb_func
 419              	App_TaskA:
 420              	.LFB57:
 179:usb_app.c     **** }
 180:usb_app.c     **** 
 181:usb_app.c     **** /*
 182:usb_app.c     **** ************************************************************************************************
 183:usb_app.c     **** *                                          Application TASK
 184:usb_app.c     **** *
 185:usb_app.c     **** * Description : This is an example of a simple application task that communicates based on USB.
 186:usb_app.c     **** *
 187:usb_app.c     **** * Arguments   : p_arg   is the argument passed to 'App_TaskA()' by 'OSTaskCreate()'.
 188:usb_app.c     **** *
 189:usb_app.c     **** * Returns     : none
 190:usb_app.c     **** *
 191:usb_app.c     **** ************************************************************************************************
 192:usb_app.c     **** */
 193:usb_app.c     **** static void
 194:usb_app.c     **** App_TaskA (void *p_arg)
 195:usb_app.c     **** {
 421              		.loc 1 195 0
 422              		.cfi_startproc
 423              		@ args = 0, pretend = 0, frame = 32
 424              		@ frame_needed = 1, uses_anonymous_args = 0
 425 022c 90B5     		push	{r4, r7, lr}
 426              	.LCFI6:
 427              		.cfi_def_cfa_offset 12
 428              		.cfi_offset 14, -4
 429              		.cfi_offset 7, -8
 430              		.cfi_offset 4, -12
 431 022e 8BB0     		sub	sp, sp, #44
 432              	.LCFI7:
 433              		.cfi_def_cfa_offset 56
 434 0230 02AF     		add	r7, sp, #8
 435              	.LCFI8:
 436              		.cfi_def_cfa 7, 48
 437 0232 7860     		str	r0, [r7, #4]
 196:usb_app.c     ****   OS_ERR       err;
 197:usb_app.c     **** 
 198:usb_app.c     ****   uint8_t str[] = "I'm a LPC1758\n";						/* Setup string for transmitting */
 438              		.loc 1 198 0
 439 0234 40F20003 		movw	r3, #:lower16:.LC3
 440 0238 C0F20003 		movt	r3, #:upper16:.LC3
 441 023c 07F10C04 		add	r4, r7, #12
 442 0240 0FCB     		ldmia	r3, {r0, r1, r2, r3}
 443 0242 07C4     		stmia	r4!, {r0, r1, r2}
 444 0244 2380     		strh	r3, [r4, #0]	@ movhi
 445 0246 04F10204 		add	r4, r4, #2
 446 024a 4FEA1343 		lsr	r3, r3, #16
 447 024e 2370     		strb	r3, [r4, #0]
 448              	.L12:
 199:usb_app.c     **** 
 200:usb_app.c     ****   (void)p_arg;                                              /* Prevent Compiler Warning */
 201:usb_app.c     ****   while(DEF_TRUE) {
 202:usb_app.c     **** 	  if(BulkOutSize > 0){									/* if a Message was received */
 449              		.loc 1 202 0
 450 0250 40F20003 		movw	r3, #:lower16:BulkOutSize
 451 0254 C0F20003 		movt	r3, #:upper16:BulkOutSize
 452 0258 1B68     		ldr	r3, [r3, #0]
 453 025a 002B     		cmp	r3, #0
 454 025c 41DD     		ble	.L11
 203:usb_app.c     **** 		  BulkInSize = strlen((char *)str);					/* calculate string length of outgoing data */
 455              		.loc 1 203 0
 456 025e 07F10C03 		add	r3, r7, #12
 457 0262 1846     		mov	r0, r3
 458 0264 FFF7FEFF 		bl	strlen
 459 0268 0346     		mov	r3, r0
 460 026a 1A46     		mov	r2, r3
 461 026c 40F20003 		movw	r3, #:lower16:BulkInSize
 462 0270 C0F20003 		movt	r3, #:upper16:BulkInSize
 463 0274 1A60     		str	r2, [r3, #0]
 204:usb_app.c     **** 		  abBulkInBuf[0]=0x00ff&((BulkInSize+1)>>8);		/* Highbyte */
 464              		.loc 1 204 0
 465 0276 40F20003 		movw	r3, #:lower16:BulkInSize
 466 027a C0F20003 		movt	r3, #:upper16:BulkInSize
 467 027e 1B68     		ldr	r3, [r3, #0]
 468 0280 03F10103 		add	r3, r3, #1
 469 0284 4FEA2323 		asr	r3, r3, #8
 470 0288 DAB2     		uxtb	r2, r3
 471 028a 40F20003 		movw	r3, #:lower16:abBulkInBuf
 472 028e C0F20003 		movt	r3, #:upper16:abBulkInBuf
 473 0292 1A70     		strb	r2, [r3, #0]
 205:usb_app.c     **** 		  abBulkInBuf[1]=0x00ff&(BulkInSize+1);			    /* Lowbyte  */
 474              		.loc 1 205 0
 475 0294 40F20003 		movw	r3, #:lower16:BulkInSize
 476 0298 C0F20003 		movt	r3, #:upper16:BulkInSize
 477 029c 1B68     		ldr	r3, [r3, #0]
 478 029e DBB2     		uxtb	r3, r3
 479 02a0 03F10103 		add	r3, r3, #1
 480 02a4 DAB2     		uxtb	r2, r3
 481 02a6 40F20003 		movw	r3, #:lower16:abBulkInBuf
 482 02aa C0F20003 		movt	r3, #:upper16:abBulkInBuf
 483 02ae 5A70     		strb	r2, [r3, #1]
 206:usb_app.c     **** 		  sprintf((char *)&abBulkInBuf[2],"%s",str);		/* write data to output buffer */
 484              		.loc 1 206 0
 485 02b0 1448     		ldr	r0, .L13
 486 02b2 07F10C03 		add	r3, r7, #12
 487 02b6 1946     		mov	r1, r3
 488 02b8 FFF7FEFF 		bl	strcpy
 207:usb_app.c     **** 		  BulkInSize += 3;									/* HB + LB + \0 */
 489              		.loc 1 207 0
 490 02bc 40F20003 		movw	r3, #:lower16:BulkInSize
 491 02c0 C0F20003 		movt	r3, #:upper16:BulkInSize
 492 02c4 1B68     		ldr	r3, [r3, #0]
 493 02c6 03F10302 		add	r2, r3, #3
 494 02ca 40F20003 		movw	r3, #:lower16:BulkInSize
 495 02ce C0F20003 		movt	r3, #:upper16:BulkInSize
 496 02d2 1A60     		str	r2, [r3, #0]
 208:usb_app.c     **** 		  BulkOutSize = 0;									/* reset the Message length of the incoming buffer */
 497              		.loc 1 208 0
 498 02d4 40F20003 		movw	r3, #:lower16:BulkOutSize
 499 02d8 C0F20003 		movt	r3, #:upper16:BulkOutSize
 500 02dc 4FF00002 		mov	r2, #0
 501 02e0 1A60     		str	r2, [r3, #0]
 502              	.L11:
 209:usb_app.c     **** 	  }
 210:usb_app.c     **** 	  OSTimeDlyHMSM(0u, 0u, 0u, 500u, OS_OPT_TIME_HMSM_STRICT, &err);
 503              		.loc 1 210 0
 504 02e2 4FF00003 		mov	r3, #0
 505 02e6 0093     		str	r3, [sp, #0]
 506 02e8 07F11E03 		add	r3, r7, #30
 507 02ec 0193     		str	r3, [sp, #4]
 508 02ee 4FF00000 		mov	r0, #0
 509 02f2 4FF00001 		mov	r1, #0
 510 02f6 4FF00002 		mov	r2, #0
 511 02fa 4FF4FA73 		mov	r3, #500
 512 02fe FFF7FEFF 		bl	OSTimeDlyHMSM
 211:usb_app.c     ****   }
 513              		.loc 1 211 0
 514 0302 A5E7     		b	.L12
 515              	.L14:
 516              		.align	2
 517              	.L13:
 518 0304 02000000 		.word	abBulkInBuf+2
 519              		.cfi_endproc
 520              	.LFE57:
 522              	.Letext0:
 523              		.file 2 "/home/wimma/bin/codesourcery/Sourcery_CodeBench_Lite_for_ARM_EABI/bin/../lib/gcc/arm-none
 524              		.file 3 "Libraries/uC-CPU/cpu.h"
 525              		.file 4 "Libraries/uC-CPU/cpu_core.h"
 526              		.file 5 "Libraries/uC-CSP/csp_types.h"
 527              		.file 6 "Libraries/uC-OSIII/os_type.h"
 528              		.file 7 "Libraries/uC-OSIII/os.h"
 529              		.file 8 "Libraries/serial_lite/os_serial_lite.h"
 530              		.file 9 "Libraries/uC-CSP/LPC17xx/USB/inc/usbdesc.h"
 531              		.file 10 "Libraries/CM3/inc/core_cm3.h"
 532              		.file 11 "Libraries/CM3/inc/lpc_types.h"
DEFINED SYMBOLS
                            *ABS*:00000000 usb_app.c
                            *COM*:00000010 com_context
                            *COM*:00000004 BulkInSize
                            *COM*:00000004 BulkOutSize
                            *COM*:00000168 abBulkOutBuf
                            *COM*:00000168 abBulkInBuf
     /tmp/ccqyy6oh.s:24     .rodata:00000000 $d
     /tmp/ccqyy6oh.s:27     .rodata:00000000 abDescriptors
     /tmp/ccqyy6oh.s:134    .bss:00000000 $d
     /tmp/ccqyy6oh.s:135    .bss:00000000 App_TaskStartTCB
     /tmp/ccqyy6oh.s:138    .bss:000000d0 App_TaskATCB
     /tmp/ccqyy6oh.s:141    .bss:000001a0 App_TaskStartStk
     /tmp/ccqyy6oh.s:144    .bss:000003a0 App_TaskAStk
     /tmp/ccqyy6oh.s:148    .rodata:0000006c .LC0
     /tmp/ccqyy6oh.s:151    .rodata:00000074 .LC1
     /tmp/ccqyy6oh.s:154    .text:00000000 $t
     /tmp/ccqyy6oh.s:159    .text:00000000 main
     /tmp/ccqyy6oh.s:258    .text:000000ac App_TaskStart
     /tmp/ccqyy6oh.s:251    .rodata:0000007c .LC2
     /tmp/ccqyy6oh.s:419    .text:0000022c App_TaskA
     /tmp/ccqyy6oh.s:412    .rodata:00000084 .LC3
     /tmp/ccqyy6oh.s:518    .text:00000304 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
BSP_PreInit
CPU_NameSet
Mem_Init
OSInit
OSTaskCreate
OSStart
CPU_Init
OS_CSP_TickInit
USBInit
USBRegisterDescriptors
BulkIn
USBHwRegisterEPIntHandler
BulkOut
USBHwEPConfig
USBHwNakIntEnable
USB_IRQHandler
CSP_IntVectReg
CSP_IntEn
USBHwConnect
OSStatTaskCPUUsageInit
CPU_IntDisMeasMaxCurReset
GPIO_SetDir
GPIO_ClearValue
GPIO_SetValue
OSTimeDlyHMSM
strlen
strcpy
